library(hexbin)
```{r setup}
opts_chunk$set(fig.width=12, fig.height=7)
```
```{r}
calcols <- c("chr","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable1k_disco <- read.table("qDD2vr3D7.callable.blocks1k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable1k_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.1k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable1k_disco <- callable1k_disco[,c(1,2,3,12)]
callable1k_haplo <- callable1k_haplo[,c(1,2,3,12)]
colnames(callable1k_disco)[[4]] <- "disco"
colnames(callable1k_haplo)[[4]] <- "haplo"
callable1k<-merge(callable1k_disco,callable1k_haplo)
callable1k$accessible <- NULL
callable1k[callable1k$disco=="True" & callable1k$haplo=="False","accessible"] <- "DISCOVAR only"
callable1k[callable1k$disco=="False" & callable1k$haplo=="True","accessible"] <- "haplo only"
callable1k[callable1k$disco=="False" & callable1k$haplo=="False","accessible"] <- "inacessible"
levels(callable1k$chr) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable1k <- subset(callable1k,!chr %in% c("MIT","API"))
```
```{r}
calcols <- c("chr","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable5k_disco <- read.table("qDD2vr3D7.callable.blocks5k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable5k_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.5k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable5k_disco <- callable5k_disco[,c(1,2,3,12)]
callable5k_haplo <- callable5k_haplo[,c(1,2,3,12)]
colnames(callable5k_disco)[[4]] <- "disco"
colnames(callable5k_haplo)[[4]] <- "haplo"
callable5k<-merge(callable5k_disco,callable5k_haplo)
callable5k$accessible <- NULL
callable5k[callable5k$disco=="True" & callable5k$haplo=="False","accessible"] <- "DISCOVAR only"
callable5k[callable5k$disco=="False" & callable5k$haplo=="True","accessible"] <- "haplo only"
callable5k[callable5k$disco=="False" & callable5k$haplo=="False","accessible"] <- "inacessible"
levels(callable5k$chr) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable5k <- subset(callable5k,!chr %in% c("MIT","API"))
```
```{r}
telos <- readLines("List.subtelomeres.3D7.regions.txt")
telos <- t(as.data.frame(strsplit(telos,split = ':')))
telos <- as.data.frame(cbind(telos[,1],t(as.data.frame(strsplit(telos[,2],split = '-')))))
colnames(telos) <- c("chr","st","en")
telos$st <- as.numeric(as.character(telos$st))
telos$en <- as.numeric(as.character(telos$en))
telos$chr <- as.character(telos$chr)
telos <- merge(subset(telos,st < 1000),subset(telos,st > 1000),by="chr")
colnames(telos) <- c("chr","stL","enL","stR","enR")
callable5k$chr <- as.character(callable5k$chr)
callable5k$telo=F
tmp <- merge(callable5k,telos,by="chr",all.x=T)
tmp[is.na(tmp$stL),c("stL","enL","stR","enR")] <- -1
tmp$telo[tmp$en < tmp$enL] = T # "L"
tmp$telo[tmp$st > tmp$stR] = T # "R"
callable5k <- tmp[,colnames(callable5k)]
rm(tmp)
```
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(chr ~ .)    #+ theme(strip.text.y = element_text(angle=0))
head(callable1k)
callable1k$accessible=F
callable1k$accessible[callable1k$disco & !callable1k$haplo] <- "DISCOVAR"
callable1k$disco
callable1k$disco & !callable1k$haplo
callable5k_haplo$haplo = callable5k_haplo$haplo=="True"
callable5k_disco$disco = callable5k_disco$disco=="True"
library(ggplot2)
library(knitr)
library(reshape2)
library(hexbin)
```{r setup}
opts_chunk$set(fig.width=12, fig.height=7)
```
```{r}
calcols <- c("chr","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable1k_disco <- read.table("qDD2vr3D7.callable.blocks1k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable1k_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.1k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable1k_disco <- callable1k_disco[,c(1,2,3,12)]
callable1k_haplo <- callable1k_haplo[,c(1,2,3,12)]
colnames(callable1k_disco)[[4]] <- "disco"
colnames(callable1k_haplo)[[4]] <- "haplo"
callable1k_haplo$haplo = callable1k_haplo$haplo=="True"
callable1k_disco$disco = callable1k_disco$disco=="True"
callable1k<-merge(callable1k_disco,callable1k_haplo)
# callable1k$accessible <- NULL
# callable1k[callable1k$disco=="True" & callable1k$haplo=="False","accessible"] <- "DISCOVAR only"
# callable1k[callable1k$disco=="False" & callable1k$haplo=="True","accessible"] <- "haplo only"
# callable1k[callable1k$disco=="False" & callable1k$haplo=="False","accessible"] <- "inacessible"
levels(callable1k$chr) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable1k <- subset(callable1k,!chr %in% c("MIT","API"))
```
```{r}
calcols <- c("chr","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable5k_disco <- read.table("qDD2vr3D7.callable.blocks5k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable5k_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.5k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable5k_disco <- callable5k_disco[,c(1,2,3,12)]
callable5k_haplo <- callable5k_haplo[,c(1,2,3,12)]
colnames(callable5k_disco)[[4]] <- "disco"
colnames(callable5k_haplo)[[4]] <- "haplo"
callable5k_haplo$haplo = callable5k_haplo$haplo=="True"
callable5k_disco$disco = callable5k_disco$disco=="True"
callable5k<-merge(callable5k_disco,callable5k_haplo)
# callable5k$accessible <- NULL
# callable5k[callable5k$disco=="True" & callable5k$haplo=="False","accessible"] <- "DISCOVAR only"
# callable5k[callable5k$disco=="False" & callable5k$haplo=="True","accessible"] <- "haplo only"
# callable5k[callable5k$disco=="False" & callable5k$haplo=="False","accessible"] <- "inacessible"
levels(callable5k$chr) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable5k <- subset(callable5k,!chr %in% c("MIT","API"))
```
```{r}
telos <- readLines("List.subtelomeres.3D7.regions.txt")
telos <- t(as.data.frame(strsplit(telos,split = ':')))
telos <- as.data.frame(cbind(telos[,1],t(as.data.frame(strsplit(telos[,2],split = '-')))))
colnames(telos) <- c("chr","st","en")
telos$st <- as.numeric(as.character(telos$st))
telos$en <- as.numeric(as.character(telos$en))
telos$chr <- as.character(telos$chr)
telos <- merge(subset(telos,st < 1000),subset(telos,st > 1000),by="chr")
colnames(telos) <- c("chr","stL","enL","stR","enR")
callable5k$chr <- as.character(callable5k$chr)
callable5k$telo=F
tmp <- merge(callable5k,telos,by="chr",all.x=T)
tmp[is.na(tmp$stL),c("stL","enL","stR","enR")] <- -1
tmp$telo[tmp$en < tmp$enL] = T # "L"
tmp$telo[tmp$st > tmp$stR] = T # "R"
callable5k <- tmp[,colnames(callable5k)]
rm(tmp)
```
callable1k$accessible=F
callable1k$accessible[callable1k$disco & !callable1k$haplo] <- "DISCOVAR"
callable1k$accessible[callable1k$haplo & !callable1k$disco] <- "GATK"
callable1k$accessible[!callable1k$multipass] <- "INACCESSIBLE"
callable1k$accessible[!callable1k$disco & !callable1k$haplo] <- "INACCESSIBLE"
head(callable1k)
callable5k$accessible=F
callable5k$accessible[callable5k$disco & !callable5k$haplo] <- "DISCOVAR"
callable5k$accessible[callable5k$haplo & !callable5k$disco] <- "GATK"
callable5k$accessible[!callable5k$disco & !callable5k$haplo] <- "INACCESSIBLE"
callable5k$accessible[callable5k$telo] <- "INACCESSIBLE (TELOMERE)"
head(callable5k)
callable5k$telo & callable5k$haplo
callable5k[callable5k$telo & callable5k$haplo,]
callable5k$accessible=F
callable5k$accessible[callable5k$disco & !callable5k$haplo] <- "DISCOVAR"
callable5k$accessible[callable5k$haplo & !callable5k$disco] <- "GATK"
callable5k$accessible[!callable5k$disco & !callable5k$haplo] <- "INACCESSIBLE"
head(callable5k[callable5k$telo & callable5k$haplo,])
callable5k$accessible=F
callable5k$accessible[callable5k$disco & !callable5k$haplo] <- "DISCOVAR"
callable5k$accessible[callable5k$haplo & !callable5k$disco] <- "GATK"
callable5k$accessible[callable5k$haplo & callable5k$disco] <- NA
callable5k$accessible[!callable5k$disco & !callable5k$haplo] <- "INACCESSIBLE"
head(callable5k[callable5k$telo & callable5k$haplo,])
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(chr ~ .)    #+ theme(strip.text.y = element_text(angle=0))
callable5k$accessible[!callable5k$disco & !callable5k$haplo & callable5k$telo] <- "INACCESSIBLE (TELOMERE)"
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(chr ~ .)    #+ theme(strip.text.y = element_text(angle=0))
telos <- readLines("List.subtelomeres.3D7.regions.txt")
telos <- t(as.data.frame(strsplit(telos,split = ':')))
telos <- as.data.frame(cbind(telos[,1],t(as.data.frame(strsplit(telos[,2],split = '-')))))
colnames(telos) <- c("chr","st","en")
telos$st <- as.numeric(as.character(telos$st))
telos$en <- as.numeric(as.character(telos$en))
telos$chr <- as.character(telos$chr)
telos <- merge(subset(telos,st < 1000),subset(telos,st > 1000),by="chr")
colnames(telos) <- c("chr","stL","enL","stR","enR")
callable5k$chr <- as.character(callable5k$chr)
callable5k$telo=F
tmp <- merge(callable5k,telos,by="chr",all.x=T)
tmp[is.na(tmp$stL),c("stL","enL","stR","enR")] <- -1
tmp$telo[tmp$en < tmp$enL] = T # "L"
tmp$telo[tmp$st > tmp$stR] = T # "R"
callable5k <- tmp[,colnames(callable5k)]
rm(tmp)
head(callable5k)
callable5k[callable5k$telo,]
callable5k[!callable5k$telo,]
library(ggplot2)
library(knitr)
library(reshape2)
library(hexbin)
```{r setup}
opts_chunk$set(fig.width=12, fig.height=7)
```
```{r}
calcols <- c("chr","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable1k_disco <- read.table("qDD2vr3D7.callable.blocks1k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable1k_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.1k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable1k_disco <- callable1k_disco[,c(1,2,3,12)]
callable1k_haplo <- callable1k_haplo[,c(1,2,3,12)]
colnames(callable1k_disco)[[4]] <- "disco"
colnames(callable1k_haplo)[[4]] <- "haplo"
callable1k_haplo$haplo = callable1k_haplo$haplo=="True"
callable1k_disco$disco = callable1k_disco$disco=="True"
callable1k<-merge(callable1k_disco,callable1k_haplo)
# callable1k$accessible <- NULL
# callable1k[callable1k$disco=="True" & callable1k$haplo=="False","accessible"] <- "DISCOVAR only"
# callable1k[callable1k$disco=="False" & callable1k$haplo=="True","accessible"] <- "haplo only"
# callable1k[callable1k$disco=="False" & callable1k$haplo=="False","accessible"] <- "inacessible"
levels(callable1k$chr) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable1k <- subset(callable1k,!chr %in% c("MIT","API"))
```
```{r}
calcols <- c("chr","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable5k_disco <- read.table("qDD2vr3D7.callable.blocks5k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable5k_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.5k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable5k_disco <- callable5k_disco[,c(1,2,3,12)]
callable5k_haplo <- callable5k_haplo[,c(1,2,3,12)]
colnames(callable5k_disco)[[4]] <- "disco"
colnames(callable5k_haplo)[[4]] <- "haplo"
callable5k_haplo$haplo = callable5k_haplo$haplo=="True"
callable5k_disco$disco = callable5k_disco$disco=="True"
callable5k<-merge(callable5k_disco,callable5k_haplo)
# callable5k$accessible <- NULL
# callable5k[callable5k$disco=="True" & callable5k$haplo=="False","accessible"] <- "DISCOVAR only"
# callable5k[callable5k$disco=="False" & callable5k$haplo=="True","accessible"] <- "haplo only"
# callable5k[callable5k$disco=="False" & callable5k$haplo=="False","accessible"] <- "inacessible"
levels(callable5k$chr) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable5k <- subset(callable5k,!chr %in% c("MIT","API"))
```
telos <- readLines("List.subtelomeres.3D7.regions.txt")
telos <- t(as.data.frame(strsplit(telos,split = ':')))
telos <- as.data.frame(cbind(telos[,1],t(as.data.frame(strsplit(telos[,2],split = '-')))))
colnames(telos) <- c("chr","st","en")
telos$st <- as.numeric(as.character(telos$st))
telos$en <- as.numeric(as.character(telos$en))
telos$chr <- as.character(telos$chr)
telos <- merge(subset(telos,st < 1000),subset(telos,st > 1000),by="chr")
colnames(telos) <- c("chr","stL","enL","stR","enR")
head(telos)
head(callable5k)
levels(telos$chr)
telos <- readLines("List.subtelomeres.3D7.regions.txt")
telos <- t(as.data.frame(strsplit(telos,split = ':')))
telos <- as.data.frame(cbind(telos[,1],t(as.data.frame(strsplit(telos[,2],split = '-')))))
colnames(telos) <- c("chr","st","en")
telos$st <- as.numeric(as.character(telos$st))
telos$en <- as.numeric(as.character(telos$en))
levels(telos$chr)
levels(telos$chr) <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","14")
telos <- merge(subset(telos,st < 1000),subset(telos,st > 1000),by="chr")
colnames(telos) <- c("chr","stL","enL","stR","enR")
callable5k$telo=F
tmp <- merge(callable5k,telos,by="chr",all.x=T)
head(tmp)
tmp[is.na(tmp$stL),c("stL","enL","stR","enR")] <- -1
tmp$telo[tmp$en < tmp$enL] = T # "L"
tmp$telo[tmp$st > tmp$stR] = T # "R"
callable5k <- tmp[,colnames(callable5k)]
rm(tmp)
callable5k$accessible=F
callable5k$accessible[callable5k$disco & !callable5k$haplo] <- "DISCOVAR"
callable5k$accessible[callable5k$haplo & !callable5k$disco] <- "GATK"
callable5k$accessible[callable5k$haplo & callable5k$disco] <- NA
callable5k$accessible[!callable5k$disco & !callable5k$haplo] <- "INACCESSIBLE"
callable5k$accessible[!callable5k$disco & !callable5k$haplo & callable5k$telo] <- "INACCESSIBLE (TELOMERE)"
callable5k$accessible <- factor(callable5k$accessible,levels=c("DISCOVAR",
\c
head(callable5k)
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(chr ~ .)    #+ theme(strip.text.y = element_text(angle=0))
callable5k$accessible <- factor(callable5k$accessible,levels=c("DISCOVAR",
"GATK",
"INACCESSIBLE",
"INACCESSIBLE (TELOMERE)"
))
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("blue","orange","grey","dark grey"))+
facet_grid(chr ~ .)    #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("blue","orange","#888888","grey"))+
facet_grid(chr ~ .)    #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable1k,aes(x=method,fill=accessible)) +
geom_bar(position="stack") + scale_fill_manual(values=c("blue","orange","grey","#888888")) +
scale_y_continuous(breaks=seq(0,25000,5000),labels=seq(0,25,5),name="Mb")
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
facet_grid(chr ~ .)    #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank())
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),legend.position="bottom")
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),legend.position="bottom") +
theme(panel.background = theme_rect(fill='white', colour='black')) + opts(panel.grid.major = none, panel.grid.minor = none)
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = none, panel.grid.minor = none)
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = "none", panel.grid.minor = F)
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = NA, panel.grid.minor = F)
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
aggregate(callable5k$en,list(callable5k$chr),FUN=max)
as.data.frame(aggregate(callable5k$en,list(callable5k$chr),FUN=max))
chrlen <- as.data.frame(aggregate(callable5k$en,list(callable5k$chr),FUN=max))
chrlen$st=1
colnames(chrlen) <- c("chr","st","en")
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect(data=chrlens,fill="white",colour="black") +
geom_rect(aes(fill=accessible)) + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect(data=chrlen,fill="white",colour="black") +
geom_rect(aes(fill=accessible)) + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect(aes(fill=accessible)) + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
geom_rect(data=chrlen,colour="black") +
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect(aes(fill=accessible)) + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
geom_rect(data=chrlen,fill=NA,colour="black") +
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect(aes(fill=accessible)) + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
geom_rect(data=chrlen,fill=NA,colour="black") +
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),axis.ticks=element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect(aes(fill=accessible)) + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
geom_rect(data=chrlen,fill=NA,colour="black") +
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),axis.ticks.y=element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
knit("compare_callable_WG_plot.Rmd")
knit("compare_callable_genomes.Rmd")
knit("compare_callable_genomes.Rmd")
knit("compare_callable_WG_plot.Rmd")
knit("compare_callable_WG_plot.Rmd")
knit("compare_callable_genomes.Rmd")
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect(aes(fill=accessible,colour=NA)) + scale_fill_manual(values=c("blue","orange","grey","#888888"))+
geom_rect(data=chrlen,fill=NA,colour="black") +
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),axis.ticks.y=element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect(aes(fill=accessible,colour=accessible)) + scale_fill_manual(values=c("blue","orange","grey","#888888"))+ scale_colour_manual(values=c("blue","orange","grey","#888888"))+
geom_rect(data=chrlen,fill=NA,colour="black") +
facet_grid(chr ~ .)   + theme(axis.text.y = element_blank(),axis.ticks.y=element_blank(),legend.position="bottom") +
theme(panel.background = element_rect(fill='white'), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
knit("compare_callable_genomes.Rmd")
library(ggplot2)
library(reshape2)
library(knitr)
```{r setup}
opts_chunk$set(fig.width=12, fig.height=6)
```
```{r}
onemth <- read.table("all_AFs_28days.txt",sep="\t",row.names=1)
setwd("../160108_modelling_report3/")
opts_chunk$set(fig.width=12, fig.height=6)
```
```{r}
onemth <- read.table("all_AFs_28days.txt",sep="\t",row.names=1)
sixmth <- read.table("all_AFs_180days.txt",sep="\t",row.names=1)
afcfs <- cbind(t(sixmth),t(onemth))
library(ggplot2)
library(reshape2)
library(knitr)
```{r setup}
opts_chunk$set(fig.width=12, fig.height=6)
```
```{r}
onemth <- read.table("all_AFs_28days.txt",sep="\t",row.names=1)
sixmth <- read.table("all_AFs_180days.txt",sep="\t",row.names=1)
library(ggplot2)
library(reshape2)
library(knitr)
```{r setup}
opts_chunk$set(fig.width=12, fig.height=6)
```
```{r}
onemth <- read.table("all_AFs_28days.txt",sep="\t",row.names=1)
onemth <- read.table("all_AFs_28days.txt",sep="\t",row.names=1)
sixmth <- read.table("all_AFs_180days.txt",sep="\t",row.names=1)
afcfs <- cbind(t(sixmth),t(onemth))
afcfs_m <- melt(afcfs)
keys <- t(as.data.frame(strsplit(as.character(afcfs_m$Var2),"_")))
afcfs_m <- cbind(keys, afcfs_m[,2:3])
colnames(afcfs_m) <- c("run","days","id","MAF")
cols<-c("90"="blue","14"="red")
afcfs_m <- afcfs_m[afcfs_m$MAF!=0,]
key <- unique(afcfs_m[,3:1])
key$days <- as.character(key$days)
key$colour=cols[key$days]
idcols <- key$colour
names(idcols) <- key$id
daycols <- key$colour
names(daycols) <- key$day
ggplot(afcfs_m,aes(x=MAF,group=id,colour=days)) + geom_density(adjust=0.5) + xlim(0,0.1) +  ggtitle("sfs short/ long term infections") + scale_colour_manual(values=daycols)
ggplot(subset(afcfs_m,MAF>0.01),aes(x=MAF,group=id,colour=days)) + geom_density(adjust=0.8) + xlim(0,0.1)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
ggplot(subset(afcfs_m,MAF>0.01),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.5)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
```
ggplot(subset(afcfs_m,MAF>0.01),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1) + xlim(0,0.5)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
```
ggplot(subset(afcfs_m,MAF>0.01),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=2) + xlim(0,0.5)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
ggplot(subset(afcfs_m,MAF>0.01),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=3) + xlim(0,0.5)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
ggplot(subset(afcfs_m,MAF>0.01),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.5)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
histo <- read.table("all_histograms.txt",header=F,sep="\t")
edges <- seq(0,0.25,length.out=20)
histo <- read.table("all_histograms.txt",header=F,sep="\t")
edges <- seq(0,0.25,length.out=20)
colnames(histo) <- c("run","gen","N","maxN",edges,1)
histo$pc2 <- apply(histo[,7:25],1,FUN=sum)
histo$pc5 <- apply(histo[,9:25],1,FUN=sum)
histo$pc10 <- apply(histo[,13:25],1,FUN=sum)
ggplot(histo,aes(x=gen,y=pc2,colour=run)) + geom_point()
detects <- aggregate(histo[,c("pc2","pc5","pc10")],list("gen"=histo$gen),FUN=mean)
detects <- melt(detects,id.vars=c("gen"))
colnames(detects) <- c("gen","MAF","mean")
levels(detects$MAF) <- c(">0.02",">0.05",">0.1")
detects$days <- detects$gen*2
ggplot(detects,aes(x=days,y=mean,colour=MAF))+ geom_smooth(adjust=0.8) + geom_point() +
geom_vline(xintercept=28,linetype=2) + geom_vline(xintercept=180,linetype=2)
ggplot(detects,aes(x=days,y=mean,colour=MAF))+ geom_smooth(adjust=2) + geom_point() +
geom_vline(xintercept=28,linetype=2) + geom_vline(xintercept=180,linetype=2)
ggplot(detects,aes(x=days,y=mean,colour=MAF))+ geom_smooth(adjust=1) + geom_point() +
geom_vline(xintercept=28,linetype=2) + geom_vline(xintercept=180,linetype=2)
ggplot(detects,aes(x=days,y=mean,colour=MAF))+ geom_smooth(adjust=1, method="GLM") + geom_point() +
geom_vline(xintercept=28,linetype=2) + geom_vline(xintercept=180,linetype=2)
ggplot(detects,aes(x=days,y=mean,colour=MAF))+ geom_smooth(adjust=1, method="glm") + geom_point() +
geom_vline(xintercept=28,linetype=2) + geom_vline(xintercept=180,linetype=2)
ggplot(detects,aes(x=days,y=mean,colour=MAF))+ geom_smooth(adjust=1, method="loess") + geom_point() +
geom_vline(xintercept=28,linetype=2) + geom_vline(xintercept=180,linetype=2)
detects <- aggregate(histo[,c("pc2","pc5","pc10")],list("gen"=histo$gen),FUN=median)
detects <- melt(detects,id.vars=c("gen"))
colnames(detects) <- c("gen","MAF","mean")
levels(detects$MAF) <- c(">0.02",">0.05",">0.1")
detects$days <- detects$gen*2
ggplot(detects,aes(x=days,y=mean,colour=MAF))+ geom_smooth(adjust=1, method="loess") + geom_point() +
geom_vline(xintercept=28,linetype=2) + geom_vline(xintercept=180,linetype=2)
detects <- aggregate(histo[,c("pc2","pc5","pc10")],list("gen"=histo$gen),FUN=mean)
detects <- melt(detects,id.vars=c("gen"))
colnames(detects) <- c("gen","MAF","mean")
levels(detects$MAF) <- c(">0.02",">0.05",">0.1")
detects$days <- detects$gen*2
ggplot(detects,aes(x=days,y=mean,colour=MAF))+ geom_smooth(adjust=1, method="loess") + geom_point() +
geom_vline(xintercept=28,linetype=2) + geom_vline(xintercept=180,linetype=2)
ggplot(subset(afcfs_m,MAF>0.01),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.5)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
```
ggplot(subset(afcfs_m,MAF>0.01),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.2)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
ggplot(subset(afcfs_m,MAF>0.001),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.2)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
ggplot(subset(afcfs_m,MAF>0.001),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.2)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)") + scale_y_log10()
ggplot(subset(afcfs_m,MAF>0.001),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.2)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
ggplot(subset(afcfs_m,MAF>0.005),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.2)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
ggplot(subset(afcfs_m,MAF>0.005),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.2)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 0.5pc)")
ggplot(subset(afcfs_m,MAF>0.01),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.2)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 1pc)")
ggplot(detects,aes(x=days,y=mean))+ geom_smooth(adjust=1, method="loess") + geom_point() +
geom_vline(xintercept=28,linetype=2) + geom_vline(xintercept=180,linetype=2)
ggplot(detects,aes(x=days,y=mean))+ geom_smooth(adjust=1, method="loess") + geom_point() +
geom_vline(xintercept=28,linetype=2,colour="red") + geom_vline(xintercept=180,linetype=2,colour="blue")
ggplot(detects,aes(x=days,y=mean))+ geom_smooth(adjust=1, method="loess",colour=black) + geom_point() +
geom_vline(xintercept=28,linetype=2,colour="red") + geom_vline(xintercept=180,linetype=2,colour="blue")
ggplot(detects,aes(x=days,y=mean))+ geom_smooth(adjust=1, method="loess",colour=black,group=MAF) + geom_point() +
geom_vline(xintercept=28,linetype=2,colour="red") + geom_vline(xintercept=180,linetype=2,colour="blue")
ggplot(detects,aes(x=days,y=mean))+ geom_smooth(adjust=1, method="loess",colour="black",group=MAF) + geom_point() +
geom_vline(xintercept=28,linetype=2,colour="red") + geom_vline(xintercept=180,linetype=2,colour="blue")
ggplot(detects,aes(x=days,y=mean,group=MAF))+ geom_smooth(adjust=1, method="loess",colour="black") + geom_point() +
geom_vline(xintercept=28,linetype=2,colour="red") + geom_vline(xintercept=180,linetype=2,colour="blue")
ggplot(detects,aes(x=days,y=mean,group=MAF))+ geom_smooth(adjust=1, method="loess",colour="black") + geom_point() +
geom_vline(xintercept=28,linetype=2,colour="red") + geom_vline(xintercept=180,linetype=2,colour="blue",size=2)
ggplot(detects,aes(x=days,y=mean,group=MAF))+ geom_smooth(adjust=1, method="loess",colour="black") + geom_point() +
geom_vline(xintercept=28,linetype=2,colour="red",size=2) + geom_vline(xintercept=180,linetype=2,colour="blue",size=2)
ggplot(subset(afcfs_m,MAF>0.005),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5) + xlim(0,0.2)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 0.5pc)")
```
ggplot(subset(afcfs_m,MAF>0.005),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5,size=2) + xlim(0,0.2)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 0.5pc)")
ggplot(detects,aes(x=days,y=mean,group=MAF))+ geom_smooth(adjust=1, method="loess",colour="black") + geom_point() +
geom_vline(xintercept=28,linetype=2,colour="red",size=2) + geom_vline(xintercept=180,linetype=2,colour="blue",size=1.5)
ggplot(subset(afcfs_m,MAF>0.005),aes(x=MAF,group=days,colour=days)) + geom_density(adjust=1.5,size=1.5) + xlim(0,0.2)+scale_colour_manual(values=daycols) + ggtitle("sfs  short/ long term infections (af > 0.5pc)")
knit("modelling_report2.Rmd")
knit("modelling_report2.Rmd")
knit("modelling_report2.Rmd")
