install.packages("igraph")
install.packages("stringr")
install.packages("stringr")
install.packages("igraph")
g <- graph.de.bruijn(2,1)
graph.de.bruijn(2,2)
line.graph(g)
library(igraph)
g <- graph.de.bruijn(2,1)
graph.de.bruijn(2,2)
line.graph(g)
g <- graph.de.bruijn(2,1)
g
g <- graph.de.bruijn(55)
g <- graph.de.bruijn(5,5)
g
line.graph(g)
anyNA
V(g)
E(g)
version()
session.info()
sessioninfo()
sessionInfo()
sessioninfo()
sessionInfo()
anyNA
library(igraph)
g <- graph.de.bruijn(5,5)
E(g)
line.graph(g)
plot(g)
g <- graph.de.bruijn(2,5)
plot(g)
g <- graph.de.bruijn(5,2)
plot(g)
g <- graph.de.bruijn(10,2)
plot(g)
g <- graph.de.bruijn(10,1)
plot(g)
g <- graph.de.bruijn(20,5,)
g <- graph.de.bruijn(20,5)
plot(g)
g <- graph.de.bruijn(20,2)
plot(g)
g <- graph.de.bruijn(10,2)
plot(g)
g <- graph.de.bruijn(6,2)
g <- graph.de.bruijn(6,2)
g <- graph.de.bruijn(5,2)
plot(g)
plot(g,mark.shape=0)
plot(g,mark.shape=1)
plot(g,mark.shape=0.1)
plot(g,shape="none")
plot(g,Shape="none")
plot(g,vertex.shape="none")
plot(g,edge.shape="none")
plot(g,arrow.size=0.2)
g <- graph.de.bruijn(5,10)
g <- graph.de.bruijn(5,3)
plot(g, layout=layout_with_fr)
plot(g, layout='layout_with_fr')
plot(g)
plot(g, layout=layout_with_fr, vertex.size=4,
vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5)
g<-barabasi.game(10)
plot(g, layout=layout_with_fr, vertex.size=4,
vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5)
g <- graph.de.bruijn(5,2)
plot(g)
plot(g,cex.main=0.2)
plot(g,cex.main=0.1)
plot.igraph(g,mark.shape=0)
plot.igraph(g,mark.shape=0,arrow.size=0.3)
g<-barabasi.game(10)
plot(g)
g<-barabasi.game(30)
plot(g)
?igraph
g<-erdos.renyi.game(30)
g<-erdos.renyi.game(n=20,p.or.m=p)
g<-erdos.renyi.game(n=20,p.or.m="p")
g<-erdos.renyi.game(n=20,p.or.m=T)
plot(g)
g<-erdos.renyi.game(n=20,p.or.m=F)
plot(g)
g <- graph.de.bruijn(5,2)
plot(g)
plot(g,xlim(0,10))
plot.igraph(g,mark.expand=20)
plot.igraph(g,mark.expand=30)
plot.igraph(g,mark.expand=10)
g <- graph.kautz(5,2)
plot(g,xlim(0,10))
plot(g\)
plot(g)
g <- graph.kautz(5,1)
plot(g)
read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/")
read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt")
afs <- read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t")
afs <- read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t")
afs <- read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t",row.names=1)
library(ggplot2)
ggplot(afs[1,]) + geom_dist()
ggplot(afs[1,]) + geom_density()
ggplot(t(afs),aes(x="14") + geom_density()
\c
ggplot(t(afs),aes(x="14")) + geom_density()
afs <- as.data.frame(t(afs))
ggplot(afs,aes(x="14")) + geom_density()
head(afs)
ggplot(afs,aes(x=14)) + geom_density()
colnames(afs) <- c("month","half_yr","yr")
ggplot(afs,aes(x=month)) + geom_density()
afs_small <- as.data.frame(t(read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t",row.names=1)),col.names=c("month","halfyr","yr"))
head(afs_small)
afs_small <- data.frame(t(read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t",row.names=1)),col.names=c("month","halfyr","yr"))
afs_small <- data.frame(t(read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t",row.names=1)))
colnames(afs_small)<-c("mth","halfyr","yr")
afs_large <- data.frame(t(read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C100.0m.L0.01mb.G36.mtp.AFs.txt",sep="\t",row.names=1)))
colnames(afs_large)<-c("mth","halfyr","yr")
ggplot(afs_small,aes(x="yr")) + geom_density(colour="blue") + geom_density(data=afs_large,aes(x="mth"),colour="red")
ggplot(afs_small,aes(x=yr)) + geom_density(colour="blue") + geom_density(data=afs_large,aes(x=mth),colour="red")
ggplot(afs_small,aes(x=yr)) + geom_density()
ggplot(afs_large,aes(x=mth)) + geom_density()
density(afs_large$mth)
plot(density(afs_large$mth))
plot(density(afs_large$mth),colour="red") + lines(density(afs_small$yr),colour="blue")
plot(density(afs_large$mth),col="red") + lines(density(afs_small$yr),col="blue")
plot(density(afs_small$yr),colour="blue") + lines(density(afs_large$mth),colour="red")
plot(density(afs_small$yr),col="blue") + lines(density(afs_large$mth),col="red")
plot(density(subset(afs_small,yr>0.01,yr),col="blue") + lines(density(afs_large$mth),col="red")
\c
plot(density(subset(afs_small,yr>0.01,yr)),col="blue") + lines(density(afs_large$mth),col="red")
subset(afs_small,yr>0.01,yr)
plot(density(subset(afs_small,yr>0.01,yr)),col="blue") + lines(density(afs_large$mth),col="red")
plot(density(subset(afs_small,yr>0.01,yr)),col="blue")
plot(density(subset(afs_small,yr>0.01)$yr),col="blue")
plot(density(subset(afs_small,yr>0.01)$yr),col="blue") + lines(density(subset(afs_large,mth>0.01)$mth),col="red")
plot(density(subset(afs_small,yr>=0.01)$yr),col="blue") + lines(density(subset(afs_large,mth>=0.01)$mth),col="red")
njtree
library(ape)
install.packages("PhyloTop")
install.packages("phyloTop")
library("phyloStats")
library("phyloTop")
setwd("~/Scratch/gits/pfdisco/reports/160415_this_tree_stats/")
readNexus("sum_ALL.target.nexus")
library("phyloBase")
install.packages("phyloBase")
install.packages("phylobase")
install.packages("phylobase")
library(phylobase)
read.nexus("sum_ALL.target.nexus")
tree <- read.nexus("sum_ALL.target.nexus")
tree <- read.nexus("sum_ALL.target.nexus")
sackin(tree)
library(phyloTop)
library("phyloTop")
sackin(tree)
widths(tree)
plot(tree)
is.rooted(tree)
install.packages("phytools")
library("phytools")
midpoint.root(tree)
avgLadder(tree)
tree <- read.nexus("sum_ALL.target.2.nexus")
is.rooted(tree)
root(interactive=True     )
root(tree, interactive=True)
root(tree, interactive=T)
tree.tips
tree$tip.label
gsub("'","",tree$tip.label)
tree$tip.label<- gsub("'","",tree$tip.label)
subset(tree,tips.include=c()"Th061.13" "Th095.13" "Th068.12")
subset(tree,tips.include=c("Th061.13", "Th095.13", "Th068.12"))
subset(tree,subset=c("Th061.13", "Th095.13", "Th068.12"))
subset(tree,tips.include=c("Th061.13", "Th095.13", "Th068.12"))
is.rooted(tree)
subset(tree,tips.include=c("Th061.13", "Th095.13", "Th068.12"))
subset(tree)
?subset
subset(tree,tips.include=c("Th061.13", "Th095.13", "Th068.12"))
tree[c("Th061.13", "Th095.13", "Th068.12")]
tree[c("Th061.13", "Th095.13", "Th068.12"),]
tree[tree,c("Th061.13", "Th095.13", "Th068.12"),]
tree[tree,c("Th061.13", "Th095.13", "Th068.12")]
subset(tree,tips.include=c("Th061.13", "Th095.13", "Th068.12"))
library("phyloTop")
tree <- read.nexus("sum_ALL.target.2.nexus")
tree$tip.label<- gsub("'","",tree$tip.label)
is.rooted(tree)
subset(tree,tips.include=c("Th061.13", "Th095.13", "Th068.12"))
subset(tree,subset=c("Th061.13", "Th095.13", "Th068.12"))
subset(tree,subset=tips.include=which(tree$tip.label %in% c("Th061.13", "Th095.13", "Th068.12")))
subset(tree,subset=which(tree$tip.label %in% c("Th061.13", "Th095.13", "Th068.12")))
subset(tree,tips.include=which(tree$tip.label %in% c("Th061.13", "Th095.13", "Th068.12")))
?subset
x[tree,which(tree$tip.label %in% c("Th061.13", "Th095.13", "Th068.12")]
x[tree,which(tree$tip.label %in% c("Th061.13", "Th095.13", "Th068.12"))]
tree[tree,which(tree$tip.label %in% c("Th061.13", "Th095.13", "Th068.12"))]
tree[which(tree$tip.label %in% c("Th061.13", "Th095.13", "Th068.12"))]
tree[which(tree$tip.label %in% c("Th061.13", "Th095.13", "Th068.12"))]
tree[1,which(tree$tip.label %in% c("Th061.13", "Th095.13", "Th068.12"))]
tree[1,]
sackin(tree)
library("phyloTop")
sackin(tree)
library("phyloTop")
sackin
library("phylobase")
?sackin
sackin
sackin()
widths(tree)
tree <- read.nexus("sum_ALL.target.2.nexus")
widths(tree)
avgLadder(tree)
?multi2di
extract.clade(tree,4)
plot(tree)
tree$tip.label
tree$tip.label<- gsub("'","",tree$tip.label)
tree$tip.label
red <- c("Th061.13", "Th095.13", "Th068.12")
blue <- c("Th166.12", "Th245.13", "Th211.13", "Th246.13", "Th092.13")
tree$tip.label %in% red+blue
tree$tip.label %in% c(red,blue)
tree$tip.label(!tree$tip.label %in% c(red,blue))
tree$tip.label[!tree$tip.label %in% c(red,blue)]
tree[green,]
green <- c("Th230.12","Th196.12","Th106.09","Th074.13","Th106.11","Th117.11","Th134.11","Th086.07","Th162.12","Th132.11")
tree[green,]
tree[green]
tree
type(tree)
class(tree)
install.packages("phytools")
midpoint.root(tree)
midpoint.root(tree=tree)
?midpoint.root
midpoint.root
thies <- read.nexus("sum_ALL.target.2.nexus")
thies$tip.label<- gsub("'","",thies$tip.label)
midpoint.root(thies)
debug(midpoint.root)
midpoint.root(thies)
midpoint.root
midpoint.root(thies)
midpoint.root(thies)
D
names(D)
i
names(D)[i]
dd
dd/2
D[i + 1] - dd/2
as.numeric(names(D)[i])
reroot(tree, as.numeric(names(D)[i]), D[i + 1] - dd/2)
dim(tree)
tree$edge
cophenetic(tree)
reroot(tree, as.numeric(names(D)[i]), D[i + 1] - dd/2)
reroot(tree, as.numeric(names(D)[i]))
reroot(tree, as.numeric(names(D)[i]), D[i + 1] - dd/2,)
c(as.numeric(names(D)[i]), D[i + 1] - dd/2)
write.nexus(tree,"sum_ALL.target.2.nexus")
write.nexus(tree,"sum_ALL.target.2.nexus")
thies$tip.label<- gsub("'","",thies$tip.label)
write.nexus(tree,"sum_ALL.target.2.nexus")
thies <- read.newick("sum_ALL.target.2.nexus")
thies <- read.newick("sum_ALL.target.newick")
thies
plot(thies)
thies <- read.newick("sum_ALL.target.newick")
is.rooted(tree)
tree <- read.newick("sum_ALL.target.newick")
tree
tree$tip.label
tree$tip.label<- gsub("'","",tree$tip.label)
is.rooted(tree)
subset(tree,tips.include=which(tree$tip.label %in% ))
subset(tree,tips.include=which(tree$tip.label %in% ))
subset(tree,tips.include=which(tree$tip.label %in% red))
subset(tree,subset=which(tree$tip.label %in% red))
subset(tree,subset=tree$tip.label %in% red)
sackin(tree)
widths(tree)
avgLadder(tree)
?multi2di
nLadders(tree)
?phyloTop
sackin.index(tree)
sackin.phylo(tree)
widths(tree)
avgLadder(tree)
nLadders(tree)
ILnumber(tree)
?phyloTop
pitchforks(tree)
splitTop(tree,3)
splitTop(tree,1)
splitTop(tree,2)
splitTop(tree,1)
subset(tree,34)
subset(tree,subset=34)
sackin.phylo(tree)
widths(tree)
avgLadder(tree)
ILnumber(tree)
colless(tree,normalize=TRUE)
cuttree(tree,3)
library(dendextend)
install.packages("dendextend")
cuttree(tree,3)
cutree(tree,3)
cutree(tree,k=3)
cutree(tree)
extract.clade(tree,node=34)
splitTop(tree,1)
splitTop(tree,1)[1]
name(splitTop(tree,1)[1])
names(splitTop(tree,1)[1])
extract.clade(tree,names(splitTop(tree,1)[1]))
splitTop(tree,1)
splitTop(tree,2)
redtree <- extract.clade(tree,node=34)
redtree <- extract.clade(tree,node=21)
redtree <- extract.clade(tree,node=25)
redtree <- extract.clade(tree,node=34)
bluetree <- extract.clade(tree,node=21)
greentree <- extract.clade(tree,node=25)
sackin.phylo(redtree)
widths(redtree)
avgLadder(redtree)
ILnumber(redtree)
colless(redtree,normalize=TRUE)
colless.phylo(redtree,normalize=TRUE)
colless.phylo(redtree)
sackin.phylo(bluetree)
widths(bluetree)
avgLadder(bluetree)
ILnumber(bluetree)
colless.phylo(bluetree)
avgLadder(subtree)
subtree <- greentree
sackin.phylo(subtree)
widths(subtree)
avgLadder(subtree)
ILnumber(subtree)
colless.phylo(subtree)
ladderSizes(subtree)
ladderShow(subtree)
ladderShow(bluetree)
ladderShow(subtree)
phyloTop(subtree)
phyloTop(subtree,funcs="ALL")
phyloTop(subtree,funcs="all")
phyloTop(subtree,funcs="all")
phyloTop(subtree)
phyloTop(list(subtree))
phyloTop(list(tree,bluetree,greentree,redtree))
phyloTop(list(bluetree,greentree,redtree))
colless.phylo(greentree, normalise=F)
colless.phylo(bluetree, normalise=F)
colless.phylo(greentree, normalise=F)
colless.phylo(redtree, normalise=F)
redtree$Nnode
greentree$Nnode
bluetree$Nnode
greentree$Nnode
redtree$Nnode
phyloTop(list(bluetree,greentree,redtree))
phyloTop(list(subtree,bluetree,greentree,redtree))
c(subtree$Nnode,redtree$Nnode,greentree$Nnode,bluetree$Nnode)
c(tree$Nnode,redtree$Nnode,greentree$Nnode,bluetree$Nnode)
phyloTop(list(tree,bluetree,greentree,redtree))
phyloTop(list(tree,bluetree,greentree,redtree))$ILnumber / c(tree$Nnode,redtree$Nnode,greentree$Nnode,bluetree$Nnode)
phyloTop(list(tree,bluetree,greentree,redtree))$ILnumber / c(tree$Nnode,bluetree$Nnode,greentree$Nnode,redtree$Nnode)
phyloTop(list(tree,bluetree,greentree,redtree))
phyloTop(list(tree,bluetree,greentree,redtree))$ILnumber / c(tree$Nnode,bluetree$Nnode,greentree$Nnode,redtree$Nnode)
ladderSizes(tree)
install.packages("apTreeshape")
library("apTreeshape")
sackin.test(tree)
sackin.test(as.treeshape(tree))
sackin.test(as.treeshape(tree),alternative="greater")
sackin.test(as.treeshape(tree))
sackin.test(as.treeshape(greeentree))
sackin.test(as.treeshape(gre\entree))
sackin.test(as.treeshape(greentree))
sackin.test(as.treeshape(greentree),alternative="less")
sackin.test(as.treeshape(tree),alternative="less")
colless.test(as.treeshape(tree),alternative="less")
colless.test(as.treeshape(tree),alternative="greater")
colless.test(as.treeshape(greentree),alternative="greater")
colless.test(as.treeshape(greentree),alternative="less")
sackin(as.treeshape(greentree))
phyloTop(list(tree,bluetree,greentree,redtree))
sackin(as.treeshape(redtree))
sackin(as.treeshape(bluetree))
sackin.phylo(redtree, normalise=T)
sackin.phylo(greentree, normalise=T)
sackin.phylo(bluetree, normalise=T)
sackin.phylo(tree, normalise=T)
colless.phylo(bluetree, normalise=T)
colless.phylo(greentree, normalise=T)
colless.phylo(redtree, normalise=T)
sackin.phylo(bluetree, normalise=T)
sackin.phylo(greentree, normalise=T)
sackin.phylo(redtree, normalise=T)
setwd("../151119_thies_indelRatios/")
library(ggplot2)
library(reshape2)
library(knitr)
reorder <- function(M,new_order) {
M[lower.tri(M)] = t(M)[lower.tri(M)]
M <- M[new_order,new_order]
M[lower.tri(M)] <- NA
M
}
sym <- function(M) {
M[lower.tri(M)] = t(M)[lower.tri(M)]
M
}
tree_order <- c(
"Th166.12", "Th246.13", "Th245.13", "Th211.13" ,"Th092.13" ,
"Th086.07", "Th106.09",  "Th230.12","Th074.13", "Th132.11","Th162.12","Th196.12", "Th106.11", "Th117.11", "Th134.11",
"Th068.12", "Th061.13", "Th095.13"
)
clades <- c(
rep(2,5),
rep(3,10),
rep(1,3))
names(clades)<-tree_order
clades
```
INDEL_dist <- read.table("Thies_all_manual.PASS.Cls.miss0.5.LMRG.HAP.DISCORDS.NOSNGL.INDEL.recode.vcf.dist.tab.txt",header=T,row.names=1,sep="\t")
SNP_dist <- read.table("Thies_all_manual.PASS.Cls.miss0.5.LMRG.HAP.DISCORDS.NOSNGL.SNP.recode.vcf.dist.tab.txt",header=T,row.names=1,sep="\t")
discord_dist <- read.table("Thies_all_manual.PASS.Cls.miss0.5.LMRG.HAP.DISCORDS.NOSNGL.vcf.dist.tab.txt",header=T,row.names=1,sep="\t")
total_dist <- read.table("Thies_manual.nj.dist.tab.txt",header=T,row.names=1,sep="\t")
INDEL_dist <- reorder(INDEL_dist,tree_order)
SNP_dist <- reorder(SNP_dist,tree_order)
total_dist <- reorder(total_dist,tree_order)
discord_dist <- reorder(discord_dist,tree_order)
distances <- merge(
merge(
melt(as.matrix(INDEL_dist),value.name ="indel"),
melt(as.matrix(SNP_dist),value.name ="snp"),
by=c("Var1","Var2")
),
merge(
melt(as.matrix(discord_dist),value.name ="discord"),
melt(as.matrix(total_dist),value.name ="total"),
by=c("Var1","Var2")
),
by=c("Var1","Var2")
)
#distances <- distances[distances$Var1!=distances$Var2,]
distances <- distances[!is.na(distances$total),]
distances$clade1 <- clades[distances$Var1]
distances$clade2 <- clades[distances$Var2]
distances$clades <- paste(clades[distances$Var1],clades[distances$Var2])
distances$interval_yrs <- abs(as.numeric(substr(as.character(distances$Var1),7,8)) - as.numeric(substr(as.character(distances$Var2),7,8)))
#distances$related <- distances$total < 10000
distances$related[distances$total >= 10000] <- "UNRELATED"
distances$related[distances$total < 10000] <- "RELATED"
distances$IBD <- distances$total < 2100
distances$ratio <- distances$indel/distances$snp
distances$logratio <- log2(distances$ratio)
distances$Var1 <- factor(distances$Var1,levels=rev(tree_order))
distances$Var2 <- factor(distances$Var2,levels=rev(tree_order))
snpRatioLM <- coef(lm(indel ~ snp, data = subset(distances,related=F)))
unrelatedLM <- geom_abline(intercept=snpRatioLM[[1]],slope=snpRatioLM[[2]])
distances$ratioP <- NA
ID_unrelated <- c(sum(distances$indel[distances$related=="UNRELATED"]),sum(distances$snp[distances$related=="UNRELATED"]))
ID_related <- c(sum(distances$indel[distances$related=="RELATED"]),sum(distances$snp[distances$related=="RELATED"]))
tab <- cbind(ID_unrelated,ID_related)
colnames(tab)<-c("unrelated","related"); rownames(tab) <- c("indel","snp")
tab
fisher.test(tab)
for(i in 1:dim(distances)[[1]]){
t <- fisher.test(t(rbind(ID_unrelated,distances[i,c("indel","snp")])))
distances[i,"ratioP"] <- t$p.value
}
#distances
ggplot(subset(distances,related=="RELATED"),aes(x=Var1,y=Var2,fill=interval_yrs,label=ratio_t)) + geom_tile(size=1) +
geom_text(aes(colour=ratioP < 0.01),size=4) +
sigcol + vxlab
sigcol <- scale_color_manual(values=c("white","red"))
ggplot(subset(distances,related=="RELATED"),aes(x=Var1,y=Var2,fill=interval_yrs,label=ratio_t)) + geom_tile(size=1) +
geom_text(aes(colour=ratioP < 0.01),size=4) +
sigcol + vxlab
vxlab <- theme(axis.text.x = element_text(angle = 90, hjust = 1))
sigcol <- scale_color_manual(values=c("white","red"))
ggplot(subset(distances,related=="RELATED"),aes(x=Var1,y=Var2,fill=interval_yrs,label=ratio_t)) + geom_tile(size=1) +
geom_text(aes(colour=ratioP < 0.01),size=4) +
sigcol + vxlab
distances$ratio_t <- paste(round(distances$snp/distances$indel),1,sep=":")
distances$ratio_t[is.na(distances$ratio)] <- NA
ggplot(subset(distances,related=="RELATED"),aes(x=Var1,y=Var2,fill=interval_yrs,label=ratio_t)) + geom_tile(size=1) +
geom_text(aes(colour=ratioP < 0.01),size=4) +
sigcol + vxlab
head(distances)
ggplot(subset(distances,related=="RELATED"),aes(x=Var1,y=Var2,fill=ratio,label=ratio_t)) + geom_tile(size=1) +
geom_text(aes(colour=ratioP < 0.01),size=4) +
geom_text(data=subset(distances,related=="UNRELATED"),size=4) + sigcol + vxlab
knit("thies_indel_ratios.Rmd")
