aligns <- as.data.frame(aggregate(daisyContigs$chrom,by=list(daisyContigs$contig),FUN=function(x){length(unique(x))}))
daisyContigs[aligns$x>1,]
colnames(starts)<-c("contig","start")
colnames(ends)  <-c("contig","end")
colnames(chroms)<-c("contig","chrom")
daisyContigs <- merge(chroms,merge(starts,ends))
daisyContigs$chrom <- as.numeric(gsub("daisy_","",daisyContigs$chrom))
daisyContigs <- daisyContigs[order(daisyContigs$chrom,daisyContigs$start),]
head(daisyContigs)
daisyContigs <- read.table("Aaeg_dovetail_bionano_02Sep2016_ALIGN.RG.n10.noBC.bam_40000_fragScaff.nucmer.5.tiling",col.names=c("start","end","qstart","qend","mle","len","cov","chrsize","contigsize","chrpc","contpc","chrom","contig"),stringsAsFactors = F)
unique(daisyContigs$contig)
starts <- as.data.frame(aggregate(daisyContigs$start,by=list(daisyContigs$contig),FUN=min))
ends <- as.data.frame(aggregate(daisyContigs$end,by=list(daisyContigs$contig),FUN=max))
chroms <- as.data.frame(aggregate(daisyContigs$chrom,by=list(daisyContigs$contig),FUN=function(x){x[1]}))
aligns <- as.data.frame(aggregate(daisyContigs$chrom,by=list(daisyContigs$contig),FUN=function(x){length(unique(x))}))
daisyContigs[aligns$x>1,]
colnames(starts)<-c("contig","start")
colnames(ends)  <-c("contig","end")
colnames(chroms)<-c("contig","chrom")
daisyContigs <- merge(chroms,merge(starts,ends))
daisyContigs$chrom <- as.numeric(gsub("daisy_","",daisyContigs$chrom))
daisyContigs <- daisyContigs[order(daisyContigs$chrom,daisyContigs$start),]
daisyContigs <- read.table("Aaeg_dovetail_bionano_02Sep2016_ALIGN.RG.n10.noBC.bam_40000_fragScaff.nucmer.5.tiling",col.names=c("start","end","qstart","qend","mle","len","cov","chrsize","contigsize","chrpc","contpc","chrom","contig"),stringsAsFactors = F)
unique(daisyContigs$contig)
starts <- as.data.frame(aggregate(daisyContigs$start,by=list(daisyContigs$contig),FUN=min))
ends <- as.data.frame(aggregate(daisyContigs$end,by=list(daisyContigs$contig),FUN=max))
chroms <- as.data.frame(aggregate(daisyContigs$chrom,by=list(daisyContigs$contig),FUN=function(x){x[1]}))
aligns <- as.data.frame(aggregate(daisyContigs$chrom,by=list(daisyContigs$contig),FUN=function(x){length(unique(x))}))
daisyContigs[aligns$x>1,]
colnames(starts)<-c("contig","start")
colnames(ends)  <-c("contig","end")
colnames(chroms)<-c("contig","chrom")
daisyContigs <- merge(chroms,merge(starts,ends))
#daisyContigs$chrom <- as.numeric(gsub("daisy_","",daisyContigs$chrom))
daisyContigs <- daisyContigs[order(daisyContigs$chrom,daisyContigs$start),]
daisyContigs <- read.table("Aaeg_dovetail_bionano_02Sep2016_ALIGN.RG.n10.noBC.bam_40000_fragScaff.nucmer.5.tiling",col.names=c("start","end","qstart","qend","mle","len","cov","chrsize","contigsize","chrpc","contpc","chrom","contig"),stringsAsFactors = F)
unique(daisyContigs$contig)
starts <- as.data.frame(aggregate(daisyContigs$start,by=list(daisyContigs$contig),FUN=min))
ends <- as.data.frame(aggregate(daisyContigs$end,by=list(daisyContigs$contig),FUN=max))
daisyContigs <- read.table("AaegL_daisy_hiC.rename.nucmer.10.tiling",col.names=c("start","end","qstart","qend","mle","len","cov","chrsize","contigsize","chrpc","contpc","chrom","contig"),stringsAsFactors = F)
unique(daisyContigs$contig)
starts <- as.data.frame(aggregate(daisyContigs$start,by=list(daisyContigs$contig),FUN=min))
ends <- as.data.frame(aggregate(daisyContigs$end,by=list(daisyContigs$contig),FUN=max))
chroms <- as.data.frame(aggregate(daisyContigs$chrom,by=list(daisyContigs$contig),FUN=function(x){x[1]}))
aligns <- as.data.frame(aggregate(daisyContigs$chrom,by=list(daisyContigs$contig),FUN=function(x){length(unique(x))}))
daisyContigs[aligns$x>1,]
colnames(starts)<-c("contig","start")
colnames(ends)  <-c("contig","end")
colnames(chroms)<-c("contig","chrom")
daisyContigs <- merge(chroms,merge(starts,ends))
daisyContigs$chrom <- as.numeric(gsub("daisy_","",daisyContigs$chrom))
daisyContigs <- daisyContigs[order(daisyContigs$chrom,daisyContigs$start),]
fragContigs <- read.table("Aaeg_dovetail_bionano_02Sep2016_ALIGN.RG.n10.noBC.bam_40000_fragScaff.nucmer.5.tiling",col.names=c("start","end","qstart","qend","mle","len","cov","chrsize","contigsize","chrpc","contpc","chrom","contig"),stringsAsFactors = F)
unique(fragContigs$contig)
starts <- as.data.frame(aggregate(fragContigs$start,by=list(fragContigs$contig),FUN=min))
ends <- as.data.frame(aggregate(fragContigs$end,by=list(fragContigs$contig),FUN=max))
chroms <- as.data.frame(aggregate(fragContigs$chrom,by=list(fragContigs$contig),FUN=function(x){x[1]}))
aligns <- as.data.frame(aggregate(fragContigs$chrom,by=list(fragContigs$contig),FUN=function(x){length(unique(x))}))
fragContigs[aligns$x>1,]
colnames(starts)<-c("contig","start")
colnames(ends)  <-c("contig","end")
colnames(chroms)<-c("contig","chrom")
fragContigs <- merge(chroms,merge(starts,ends))
fragContigs <- fragContigs[order(fragContigs$chrom,fragContigs$start),]
joins <- read.table("all_0_3125ng_AaPB.RG.n20.noBC.bam_40000_fragScaff.f.nucmer.coords.joins",col.names=c("to","from","scaff","count","program"),stringsAsFactors = F)
dim(joins)
joins <- subset(joins,to %in% daisyContigs$contig & from %in% daisyContigs$contig)
dim(joins)
joins$to <- factor(joins$to,levels=daisyContigs$contig,ordered=T)
joins$from <- factor(joins$from,levels=daisyContigs$contig,ordered=T)
#ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile(aes(size=size/10000)) + theme(legend.position="none",axis.text=element_blank() )
ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile() + theme(legend.position="none",axis.text=element_blank() )
daisyContigs<-fragContigs
joins <- read.table("all_0_3125ng_AaPB.RG.n20.noBC.bam_40000_fragScaff.f.nucmer.coords.joins",col.names=c("to","from","scaff","count","program"),stringsAsFactors = F)
dim(joins)
joins <- subset(joins,to %in% daisyContigs$contig & from %in% daisyContigs$contig)
dim(joins)
joins$to <- factor(joins$to,levels=daisyContigs$contig,ordered=T)
joins$from <- factor(joins$from,levels=daisyContigs$contig,ordered=T)
#ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile(aes(size=size/10000)) + theme(legend.position="none",axis.text=element_blank() )
ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile() + theme(legend.position="none",axis.text=element_blank() )
library(hexbin)
library(reshape2)
library(knitr)
library(ggplot2)
```{r setup, include=F}
opts_chunk$set(fig.width=10, fig.height=10,dev=c('png','postscript'),warning=F)
#setwd("/Volumes//gsap_garage-protistvector/sredmond/Aedes_AGWG/reports/161019_assembly_comp_matrix/")
```
```{r}
#orderContigs <- read.table("daisy_order_scaffs.txt",col.names=c("contig","chr","pos","cov","size","hits"),stringsAsFactors = F)
daisyContigs <- read.table("AaegL_daisy_hiC.rename.nucmer.10.tiling",col.names=c("start","end","qstart","qend","mle","len","cov","chrsize","contigsize","chrpc","contpc","chrom","contig"),stringsAsFactors = F)
unique(daisyContigs$contig)
starts <- as.data.frame(aggregate(daisyContigs$start,by=list(daisyContigs$contig),FUN=min))
ends <- as.data.frame(aggregate(daisyContigs$end,by=list(daisyContigs$contig),FUN=max))
chroms <- as.data.frame(aggregate(daisyContigs$chrom,by=list(daisyContigs$contig),FUN=function(x){x[1]}))
aligns <- as.data.frame(aggregate(daisyContigs$chrom,by=list(daisyContigs$contig),FUN=function(x){length(unique(x))}))
daisyContigs[aligns$x>1,]
colnames(starts)<-c("contig","start")
colnames(ends)  <-c("contig","end")
colnames(chroms)<-c("contig","chrom")
daisyContigs <- merge(chroms,merge(starts,ends))
daisyContigs$chrom <- as.numeric(gsub("daisy_","",daisyContigs$chrom))
daisyContigs <- daisyContigs[order(daisyContigs$chrom,daisyContigs$start),]
```
```{r}
fragContigs <- read.table("Aaeg_dovetail_bionano_02Sep2016_ALIGN.RG.n10.noBC.bam_40000_fragScaff.nucmer.5.tiling",col.names=c("start","end","qstart","qend","mle","len","cov","chrsize","contigsize","chrpc","contpc","chrom","contig"),stringsAsFactors = F)
unique(fragContigs$contig)
starts <- as.data.frame(aggregate(fragContigs$start,by=list(fragContigs$contig),FUN=min))
ends <- as.data.frame(aggregate(fragContigs$end,by=list(fragContigs$contig),FUN=max))
chroms <- as.data.frame(aggregate(fragContigs$chrom,by=list(fragContigs$contig),FUN=function(x){x[1]}))
aligns <- as.data.frame(aggregate(fragContigs$chrom,by=list(fragContigs$contig),FUN=function(x){length(unique(x))}))
fragContigs[aligns$x>1,]
colnames(starts)<-c("contig","start")
colnames(ends)  <-c("contig","end")
colnames(chroms)<-c("contig","chrom")
fragContigs <- merge(chroms,merge(starts,ends))
#fragContigs$chrom <- as.numeric(gsub("daisy_","",fragContigs$chrom))
fragContigs <- fragContigs[order(fragContigs$chrom,fragContigs$start),]
```
```{r}
orderContigs<-fragContigs
```
```{r}
#orderContigs <- subset(orderContigs,hits==1)
joins <- read.table("all_0_3125ng_AaPB.RG.n20.noBC.bam_40000_fragScaff.f.nucmer.coords.joins",col.names=c("to","from","scaff","count","program"),stringsAsFactors = F)
dim(joins)
joins <- subset(joins,to %in% orderContigs$contig & from %in% orderContigs$contig)
dim(joins)
joins$to <- factor(joins$to,levels=orderContigs$contig,ordered=T)
joins$from <- factor(joins$from,levels=orderContigs$contig,ordered=T)
#ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile(aes(size=size/10000)) + theme(legend.position="none",axis.text=element_blank() )
ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile() + theme(legend.position="none",axis.text=element_blank() )
```
```{r}
joins <- read.table("fragscaff_AaegPB_0_156_n10_40k.nucmer.coords.joins",col.names=c("to","from","scaff","size","program"),stringsAsFactors = F)
dim(joins)
joins <- subset(joins,to %in% orderContigs$contig & from %in% orderContigs$contig)
joins$to <- factor(joins$to,levels=orderContigs$contig,ordered=T)
joins$from <- factor(joins$from,levels=orderContigs$contig,ordered=T)
dim(joins)
ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile() + theme(legend.position="none",axis.text=element_blank() )
```
```{r}
joins <- read.table("AaegL_daisy_hiC.rename.nucmer.coords.joins",col.names=c("to","from","scaff","size","program"),stringsAsFactors = F)
dim(joins)
joins <- subset(joins,to %in% orderContigs$contig & from %in% orderContigs$contig)
joins$to <- factor(joins$to,levels=orderContigs$contig,ordered=T)
joins$from <- factor(joins$from,levels=orderContigs$contig,ordered=T)
ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile() + theme(legend.position="none",axis.text=element_blank() )
```
```{r}
joins <- read.table("Aaeg_dovetail_pacbio_22Aug2016.nucmer.coords.joins",col.names=c("to","from","scaff","size","program"),stringsAsFactors = F)
dim(joins)
joins <- subset(joins,to %in% orderContigs$contig & from %in% orderContigs$contig)
joins$to <- factor(joins$to,levels=orderContigs$contig,ordered=T)
joins$from <- factor(joins$from,levels=orderContigs$contig,ordered=T)
#ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile() + geom_vline(aes(xintercept=x),data=chroms) +
#  theme(legend.position="none",axis.text=element_blank() )
ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile() +
theme(legend.position="none",axis.text=element_blank() )
```
```{r}
joins <- read.table("Aaeg_dovetail_bionano_02Sep2016_ALIGN.RG.n10.noBC.bam_40000_fragScaff.nucmer.coords.joins",col.names=c("to","from","scaff","size","program"),stringsAsFactors = F)
dim(joins)
joins <- subset(joins,to %in% orderContigs$contig & from %in% orderContigs$contig)
joins$to <- factor(joins$to,levels=orderContigs$contig,ordered=T)
joins$from <- factor(joins$from,levels=orderContigs$contig,ordered=T)
ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile() + theme(legend.position="none",axis.text=element_blank() )
```
```{r}
joins <- merge(joins,orderContigs,by.x="from",by.y="contig")
joins <- merge(joins,orderContigs,by.x="to",by.y="contig",suffixes = c(".from",".to"))
ggplot(subset(joins,chrom.from %in% c(1) & chrom.to == chrom.from),aes(ymin=start.from,ymax=end.from, xmin=start.to,xmax=end.to)) + geom_rect() + theme(legend.position="none") + facet_grid(. ~ chrom.to)
```
knit("assembliesMatrix.Rmd")
knit("assembliesMatrix.Rmd")
knit("assembliesMatrix.Rmd")
knit("assembliesMatrix.Rmd")
orderContigs<-daisyContigs
joins <- read.table("all_0_3125ng_AaPB.RG.n20.noBC.bam_40000_fragScaff.f.nucmer.coords.joins",col.names=c("to","from","scaff","count","program"),stringsAsFactors = F)
dim(joins)
joins <- subset(joins,to %in% orderContigs$contig & from %in% orderContigs$contig)
dim(joins)
joins$to <- factor(joins$to,levels=orderContigs$contig,ordered=T)
joins$from <- factor(joins$from,levels=orderContigs$contig,ordered=T)
#ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile(aes(size=size/10000)) + theme(legend.position="none",axis.text=element_blank() )
ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile() + theme(legend.position="none",axis.text=element_blank() )
ggplot(joins,aes(y=to,x=from,fill=scaff)) + geom_tile(aes(size=size/10000)) + theme(legend.position="none",axis.text=element_blank() )
setwd("~/Scratch/gits/pfdisco/reports/161230_outbreaker/")
```{r}
library(ape)
library(adegenet)
library(phangorn)
library(knitr)
library(igraph)
library(RColorBrewer)
library(ggplot2)
library(reshape2)
library(outbreaker)
opts_chunk$set(fig.width=9, fig.height=9)
opts_chunk$set(dev=c('png'))
```
MRCA
```{r}
cl1 = c("Th196.12", "Th230.12", "Th132.11","Th162.12", "Th074.13", "Th106.09", "Th134.11", "Th117.11", "Th106.11","Th086.07")
ped <- read.table("Thies_all_manual.PASS.Cls.miss0.5.LMRG.HAP.ped",colClasses="character",na.strings = "0")
inds <- ped[,1]
ped <- ped[,seq(7,dim(ped)[[2]],2)]
genos <- apply(ped,2,function(x) {as.numeric(factor(x))})
genos[is.na(genos)] <- 0
rownames(genos)=inds
genosDat <- as.phyDat(genos, type="USER", levels = c(0:max(genos,na.rm=T),drop_null = F))
#genosDat <- as.phyDat(genos, type="USER", levels = c(0:5))
distmatH <- dist.hamming(genosDat)
discotree <- midpoint(nj(distmatH))
#discotree <- midpoint(njs(as.dist(sym(combDists))))
plot(discotree)
nodelabels()
#PARSIMONY ancestral state
ances.par <- ancestral.pars(discotree,genosDat)
#ML ancestral state
fit = pml(discotree, genosDat)
ances.pml <- ancestral.pml(fit,type = "ml")
cl1mrca <- mrca.phylo(discotree,which(discotree$tip.label %in% cl1))
cl1mrca
#cl1mrca<-35
MLalleleMat <- ances.pml[[cl1mrca]]
maxLikelihoods <- apply(ances.pml[[cl1mrca]],1,FUN=max)
#MLallele <- matrix(as.numeric(MLallele),nrow = dim(MLallele)[1],dim(MLallele)[2])
MLallele <- rep(0,dim(MLalleleMat)[1])
for (i in c(0:dim(MLalleleMat)[2])) {
MLallele[MLalleleMat[,i]==maxLikelihoods] <- i
}
genosDat$MRCA <- MLallele
genosM <- as.character(genosDat)
genosM[genosM==0]<-NA
```
discovar NJtree + MRCA
```{r}
genos <- apply(genosM,2,function(x) {as.numeric(factor(x))})
row.names(genos)<-row.names(genosM)
genosDat <- as.phyDat(genos[c(cl1,"MRCA"),], type="USER", levels = c(0:max(genos,na.rm=T),drop_null = F))
distmatH <- dist.hamming(genosDat)
discotree <- root(nj(distmatH),"MRCA")
```
```{r}
meta<-read.table("daniels.thies.CA.txt",sep="\t",header=T)
meta <- subset(meta,name %in% cl1)
rownames(meta) <- meta$name
cl1M <- c(as.character(meta$name),"MRCA")
MRCAyr<=1000
MRCAyr<-2000
cl1Y <- c(meta[as.character(meta$name),'year'],MRCAyr)
cl1Ypos <- as.Date(paste("1","jan",cl1Y,sep=""),"%d%b%Y")
as.Date(paste("jan",cl1Y,sep=""),"%b%Y")
as.Date(paste("1","jan",cl1Y,sep=""),"%b%Y")
as.Date(paste("1","jan",cl1Y,sep=""),"%d%b%Y")
as.Date(paste("1","jan",cl1Y,sep=""),"%b%b%Y")
as.Date(paste("1","jan",cl1Y,sep=""),"%d%b%Y")
as.Date(paste("1","jan",cl1Y,sep=""),"%d%B%Y")
as.Date(paste("1","jan",cl1Y,sep=""),"%B%Y")
as.Date(paste("1",cl1Y,sep=""),"%B%Y")
as.Date(paste("1",cl1Y,sep=""),"%M%Y")
as.Date(paste(cl1Y,sep=""),"%M%Y")
as.Date(paste(cl1Y,sep=""),"%m%Y")
as.Date(paste(cl1Y,sep=""),"%b%Y")
months(as.Date(paste("1","jan",cl1Y,sep=""),"%d%B%Y"))
julian(as.Date(paste("1","jan",cl1Y,sep=""),"%d%B%Y"))
julian(as.Date(paste("1","jan",cl1Y,sep=""),"%d%B%Y"),origin=MRCAyr)
julian(as.Date(paste("1","jan",cl1Y,sep=""),"%d%B%Y"),origin=as.date(paste("1","jan",MRCAyr)))
julian(as.Date(paste("1","jan",cl1Y,sep=""),"%d%B%Y"),origin=as.Date(paste("1","jan",MRCAyr)))
julian(as.Date(paste("1","jan",cl1Y,sep=""),"%d%B%Y"),origin=as.Date(paste("1","jan",MRCAyr)))
as.Date(paste("1","jan",MRCAyr))
MRCAyr
as.Date(paste("1","jan",MRCAyr,sep=""))
as.Date(paste("1","jan",as.character(MRCAyr),sep=""))
paste("1","jan",as.character(MRCAyr),sep="")
paste("1","jan",cl1Y,sep="")
paste("1","jan",as.character(MRCAyr),sep="")
as.Date(paste("1","jan",as.character(MRCAyr),sep=""))
as.Date(paste("1","jan",as.character(MRCAyr),sep="-"))
as.Date(paste("1","jan",as.character(MRCAyr),sep=""))
cl1Y
(cl1Y-MRCAyr)*12
cl1Mth (cl1Y-MRCAyr)*12
names(cl1Mth)<-cl1M
cl1Mth <- (cl1Y-MRCAyr)*12
names(cl1Mth)<-cl1M
cl1N <- c(as.character(meta$name),"MRCA")
# seqTrack(x = distmatM, x.names=cl1M, x.dates=cl1Ypos)
distmatM <- as.matrix(distmatH)[cl1M,cl1M]
strk <- seqTrack(distmatM, x.names=cl1M, x.dates=cl1Ypos)
genoSeg <- apply(genosM[cl1M,],2,FUN=function(x) {length(unique(na.omit(x)))>1})
genoMAC <- apply(genosM[cl1M,],2,FUN=function(x) {min(table(na.omit(x)))})
genoMAC[!genoSeg]<-0
genoPars <- genoMAC>1
itree <- strk$ances
cl1ob <- outbreaker(genosM[cl1M,genoSeg],dates = cl1Mth,w.dens=1/10^seq(0,1000),n.iter=5e4,init.tree = strk$ances)
plot(get.tTree(cl1ob),vertex.label=cl1N,main=paste("MRCA=",MRCAyr))
plot(get.tTree(cl1ob),vertex.label=cl1N,main=paste("MRCA=",MRCAyr))
plot(get.tTree(cl1ob),vertex.label=cl1N,main=paste("MRCA=",MRCAyr))
for (MRCAyr in 2000:2008) {
#MRCAyr <- MRCAyr+1
cl1Y <- c(meta[as.character(meta$name),'year'],MRCAyr)
cl1Ypos <- as.Date(paste("1","jan",cl1Y,sep=""),"%d%b%Y")
names(cl1Ypos)<-cl1M
cl1Mth <- (cl1Y-MRCAyr)*12
names(cl1Mth)<-cl1M
cl1N <- c(as.character(meta$name),"MRCA")
# seqTrack(x = distmatM, x.names=cl1M, x.dates=cl1Ypos)
distmatM <- as.matrix(distmatH)[cl1M,cl1M]
strk <- seqTrack(distmatM, x.names=cl1M, x.dates=cl1Ypos)
#cl1ob <- outbreaker(genosM[cl1M,],dates = cl1Y,w.dens = c(0.9,0.1,0.1,0.1,0.1,0.1),n.iter=1e4,init.tree = "random")
genoSeg <- apply(genosM[cl1M,],2,FUN=function(x) {length(unique(na.omit(x)))>1})
genoMAC <- apply(genosM[cl1M,],2,FUN=function(x) {min(table(na.omit(x)))})
genoMAC[!genoSeg]<-0
genoPars <- genoMAC>1
itree <- strk$ances
#itree[is.na(itree)]<-0
cl1ob <- outbreaker(genosM[cl1M,genoSeg],dates = cl1Mth,w.dens=1/10^seq(0,1000),n.iter=5e4,init.tree = strk$ances)
#transGraph(cl1ob, labels = cl1N,curved.edges = F,annot="support",main=paste("MRCA=",MRCAyr))
plot(get.tTree(cl1ob),vertex.label=cl1N,main=paste("MRCA=",MRCAyr))
}
plotOutbreak(cl1ob,xlim=c(MRCAyr,2015) )
plotOutbreak(cl1ob,xlim=c(MRCAyr,2015) )
MRCAyr<-2005
cl1Y <- c(meta[as.character(meta$name),'year'],MRCAyr)
cl1Ypos <- as.Date(paste("1","jan",cl1Y,sep=""),"%d%b%Y")
names(cl1Ypos)<-cl1M
cl1Mth <- (cl1Y-MRCAyr)*12
names(cl1Mth)<-cl1M
cl1N <- c(as.character(meta$name),"MRCA")
# seqTrack(x = distmatM, x.names=cl1M, x.dates=cl1Ypos)
distmatM <- as.matrix(distmatH)[cl1M,cl1M]
strk <- seqTrack(distmatM, x.names=cl1M, x.dates=cl1Ypos)
#cl1ob <- outbreaker(genosM[cl1M,],dates = cl1Y,w.dens = c(0.9,0.1,0.1,0.1,0.1,0.1),n.iter=1e4,init.tree = "random")
genoSeg <- apply(genosM[cl1M,],2,FUN=function(x) {length(unique(na.omit(x)))>1})
genoMAC <- apply(genosM[cl1M,],2,FUN=function(x) {min(table(na.omit(x)))})
genoMAC[!genoSeg]<-0
genoPars <- genoMAC>1
itree <- strk$ances
#itree[is.na(itree)]<-0
cl1ob <- outbreaker(genosM[cl1M,genoSeg],dates = cl1Mth,w.dens=1/10^seq(0,1000),n.iter=5e4,init.tree = strk$ances)
#transGraph(cl1ob, labels = cl1N,curved.edges = F,annot="support",main=paste("MRCA=",MRCAyr))
plot(get.tTree(cl1ob),vertex.label=cl1N,main=paste("MRCA=",MRCAyr))
plotOutbreak(cl1ob,xlim=c(MRCAyr,2015) )
barplot(cl1ob$w)
plotOutbreak(cl1ob,xlim=c(0:2015-MRCAyr*12))
c(0:2015-MRCAyr*12)
c(0:(2015-MRCAyr)*12)
plotOutbreak(cl1ob,xlim=c(0,2015-MRCAyr*12))
plotOutbreak(cl1ob,xlim=c(0,(2015-MRCAyr)*12))
cl1ob <- outbreaker(genosM[cl1M,genoSeg],dates = cl1Mth,w.dens=1/10^seq(0,12),n.iter=5e4,init.tree = strk$ances)
plot(get.tTree(cl1ob),vertex.label=cl1N,main=paste("MRCA=",MRCAyr))
plotOutbreak(cl1ob,xlim=c(0,(2015-MRCAyr)*12))
1/10^seq(0,12)
integer(1/10^seq(0,12))
1/10^seq(0,12)
1e0
1e-1
c(0,1/10^seq(0,12))
cl1ob <- outbreaker(genosM[cl1M,genoSeg],dates = cl1Mth,w.dens=c(0,1/10^seq(0,12)),n.iter=5e4,init.tree = strk$ances)
plot(get.tTree(cl1ob),vertex.label=cl1N,main=paste("MRCA=",MRCAyr))
plotOutbreak(cl1ob,xlim=c(0,(2015-MRCAyr)*12))
seq(1,0,length.out = 12)
seq(1,0,length.out = 11)
seq(1,0.1,length.out = 11)
seq(1,0.1,length.out = 9)
seq(1,0.1,length.out = 11)
c(0,seq(1,0.1,length.out = 11))
scale(c(0,seq(1,0.1,length.out = 11)))
scale(c(0,seq(1,0.1,length.out = 11)),scale = T,center=F)
scale(c(0,seq(1,0.1,length.out = 11)),scale = T,center=T)
scale(c(0,seq(1,0.1,length.out = 11)),scale = F,center=T)
c(0,seq(1,0.1,length.out = 11))
(0,1/10^seq(0,12))
c(0,1/10^seq(0,12))
sdec12mth <- c(0,seq(1,0.1,length.out = 11))
expdecc12mth <- c(0,1/10^seq(0,12))
cl1ob <- outbreaker(genosM[cl1M,genoSeg],dates = cl1Mth,w.dens=sdec12mth,n.iter=5e4,init.tree = strk$ances)
plot(get.tTree(cl1ob),vertex.label=cl1N,main=paste("MRCA=",MRCAyr))
cl1ob <- outbreaker(genosM[cl1M,genoSeg],dates = cl1Mth,w.dens=expdec12mth,n.iter=5e4,init.tree = strk$ances)
#transGraph(cl1ob, labels = cl1N,curved.edges = F,annot="support",main=paste("MRCA=",MRCAyr))
expdecc12mth <- c(0,1/10^seq(0,12))
cl1ob <- outbreaker(genosM[cl1M,genoSeg],dates = cl1Mth,w.dens=expdec12mth,n.iter=5e4,init.tree = strk$ances)
expdec12mth <- c(0,1/10^seq(0,12))
cl1ob <- outbreaker(genosM[cl1M,genoSeg],dates = cl1Mth,w.dens=expdec12mth,n.iter=5e4,init.tree = strk$ances)
#transGraph(cl1ob, labels = cl1N,curved.edges = F,annot="support",main=paste("MRCA=",MRCAyr))
plot(get.tTree(cl1ob),vertex.label=cl1N,main=paste("MRCA=",MRCAyr))
for (MRCAyr in 2000:2008) {
#MRCAyr <- MRCAyr+1
cl1Y <- c(meta[as.character(meta$name),'year'],MRCAyr)
cl1Ypos <- as.Date(paste("1","jan",cl1Y,sep=""),"%d%b%Y")
names(cl1Ypos)<-cl1M
cl1Mth <- (cl1Y-MRCAyr)*12
names(cl1Mth)<-cl1M
cl1N <- c(as.character(meta$name),"MRCA")
# seqTrack(x = distmatM, x.names=cl1M, x.dates=cl1Ypos)
distmatM <- as.matrix(distmatH)[cl1M,cl1M]
strk <- seqTrack(distmatM, x.names=cl1M, x.dates=cl1Ypos)
#cl1ob <- outbreaker(genosM[cl1M,],dates = cl1Y,w.dens = c(0.9,0.1,0.1,0.1,0.1,0.1),n.iter=1e4,init.tree = "random")
genoSeg <- apply(genosM[cl1M,],2,FUN=function(x) {length(unique(na.omit(x)))>1})
genoMAC <- apply(genosM[cl1M,],2,FUN=function(x) {min(table(na.omit(x)))})
genoMAC[!genoSeg]<-0
genoPars <- genoMAC>1
itree <- strk$ances
#itree[is.na(itree)]<-0
sdec12mth <- c(0,seq(1,0.1,length.out = 11))
expdec12mth <- c(0,1/10^seq(0,12))
cl1ob <- outbreaker(genosM[cl1M,genoSeg],dates = cl1Mth,w.dens=expdec12mth,n.iter=5e4,init.tree = strk$ances)
#transGraph(cl1ob, labels = cl1N,curved.edges = F,annot="support",main=paste("MRCA=",MRCAyr))
plot(get.tTree(cl1ob),vertex.label=cl1N,main=paste("MRCA=",MRCAyr))
}
knit("outbreaker.Rmd")
plotOutbreak(cl1ob,xlim=c(0,(2015-MRCAyr)*12))
knit("outbreaker.Rmd")
setwd("../161112_rocplots_validation/")
library(ggplot2)
library(hexbin)
library(reshape2)
library(knitr)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
```{r setup}
opts_chunk$set(fig.width=12, fig.height=8,dev=c('png','postscript'),warning=F)
```
```{r}
discoFilt <- read.table("3D7DD2.REFCALL.PASS.DD2CONC.PFX.LMRG.HAP.Dd2-2D4_FILT_EVAL/weighted_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names=c("score","true_positives","false_positives","false_negatives","precision","sensitivity","f_measure"))
discoFilt$caller="disco"
discoFilt$region="GENOME"
discoFiltSNPs <- read.table("3D7DD2.REFCALL.PASS.DD2CONC.PFX.LMRG.HAP.Dd2-2D4_FILT_EVAL/snp_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names = c("score","true_positives","false_positives"))
discoFiltINDELs <- read.table("3D7DD2.REFCALL.PASS.DD2CONC.PFX.LMRG.HAP.Dd2-2D4_FILT_EVAL/non_snp_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names = c("score","true_positives","false_positives"))
discoFiltSNPs$type="SNP"
discoFiltINDELs$type="INDEL"
discoFiltType <- rbind(discoFiltSNPs,discoFiltINDELs)
discoFiltType$caller="disco"
discoFiltType$region="GENOME"
posns <- intersect(discoFiltSNPs$score,discoFiltINDELs$score)
discoFiltType <- subset(discoFiltType,score %in% posns)
discoCALLFilt <- read.table("3D7DD2.REFCALL.PASS.DD2CONC.PFX.LMRG.HAP.CALLBOTH.Dd2-2D4_FILT_EVAL/weighted_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names=c("score","true_positives","false_positives","false_negatives","precision","sensitivity","f_measure"))
discoCALLFilt$caller="disco"
discoCALLFilt$region="CALLABLE"
discoCALLFiltSNPs <- read.table("3D7DD2.REFCALL.PASS.DD2CONC.PFX.LMRG.HAP.CALLBOTH.Dd2-2D4_FILT_EVAL/snp_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names = c("score","true_positives","false_positives"))
discoCALLFiltINDELs <- read.table("3D7DD2.REFCALL.PASS.DD2CONC.PFX.LMRG.HAP.CALLBOTH.Dd2-2D4_FILT_EVAL/non_snp_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names = c("score","true_positives","false_positives"))
discoCALLFiltSNPs$type="SNP"
discoCALLFiltINDELs$type="INDEL"
discoCALLFiltType <- rbind(discoCALLFiltSNPs,discoCALLFiltINDELs)
discoCALLFiltType$caller="disco"
discoCALLFiltType$region="CALLABLE"
posns <- intersect(discoCALLFiltSNPs$score,discoCALLFiltINDELs$score)
discoCALLFiltType <- subset(discoCALLFiltType,score %in% posns)
head(discoFilt); head(discoCALLFilt)
head(discoFiltType); head(discoCALLFiltType)
# discoFilt <- read.table("disco_3D7_0901_weighted_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t")
# colnames(discoFilt) <-c("score","true_positives","false_positives","false_negatives","precision","sensitivity","f_measure")
# discoFilt$sample="0901"
# discoFilt$caller="disco"
# discoFilt$filter=T
```
```{r}
gatkFilt <- read.table("3D7DD2_300100.VQSR.Pass90.RENAME.Dd2-2D4_FILT_EVAL/weighted_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names=c("score","true_positives","false_positives","false_negatives","precision","sensitivity","f_measure"))
gatkFilt$caller="gatk"
gatkFilt$region="GENOME"
gatkFiltSNPs <- read.table("3D7DD2_300100.VQSR.Pass90.RENAME.Dd2-2D4_FILT_EVAL/snp_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names = c("score","true_positives","false_positives"))
gatkFiltINDELs <- read.table("3D7DD2_300100.VQSR.Pass90.RENAME.Dd2-2D4_FILT_EVAL/non_snp_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names = c("score","true_positives","false_positives"))
gatkFiltSNPs$type="SNP"
gatkFiltINDELs$type="INDEL"
gatkFiltType <- rbind(gatkFiltSNPs,gatkFiltINDELs)
gatkFiltType$caller="gatk"
gatkFiltType$region="GENOME"
posns <- intersect(gatkFiltSNPs$score,gatkFiltINDELs$score)
gatkFiltType <- subset(gatkFiltType,score %in% posns)
gatkCALLFilt <- read.table("3D7DD2_300100.VQSR.Pass90.RENAME.CALLBOTH.Dd2-2D4_FILT_EVAL/weighted_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names=c("score","true_positives","false_positives","false_negatives","precision","sensitivity","f_measure"))
gatkCALLFilt$caller="gatk"
gatkCALLFilt$region="CALLABLE"
gatkCALLFiltSNPs <- read.table("3D7DD2_300100.VQSR.Pass90.RENAME.CALLBOTH.Dd2-2D4_FILT_EVAL/snp_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names = c("score","true_positives","false_positives"))
gatkCALLFiltINDELs <- read.table("3D7DD2_300100.VQSR.Pass90.RENAME.CALLBOTH.Dd2-2D4_FILT_EVAL/non_snp_roc.tsv.gz",header=F,skip = 3,stringsAsFactors =F,sep="\t",col.names = c("score","true_positives","false_positives"))
gatkCALLFiltSNPs$type="SNP"
gatkCALLFiltINDELs$type="INDEL"
gatkCALLFiltType <- rbind(gatkCALLFiltSNPs,gatkCALLFiltINDELs)
gatkCALLFiltType$caller="gatk"
gatkCALLFiltType$region="CALLABLE"
posns <- intersect(gatkCALLFiltSNPs$score,gatkCALLFiltINDELs$score)
gatkCALLFiltType <- subset(gatkCALLFiltType,score %in% posns)
```
```{r}
rocCf <- rbind(discoCALLFiltType,discoFiltType,gatkCALLFiltType,gatkFiltType)
```
```{r}
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
```
```{r}
ggplot(discoCALLFiltType,aes(x=false_positives,y=true_positives,colour=type)) +
geom_line() + facet_grid(. ~ caller) + theme(legend.position="bottom")
ggplot(discoFiltType,aes(x=false_positives,y=true_positives,colour=type)) +
geom_point() + facet_grid(. ~ caller) + theme(legend.position="bottom")
ggplot(discoFiltType,aes(x=false_positives,y=true_positives,colour=type)) +
geom_line() + facet_grid(. ~ caller) + theme(legend.position="bottom")
ggplot(rocCf,aes(x=false_positives,y=true_positives,colour=type,linetype=region)) +
geom_line() + facet_grid(. ~ caller) + theme(legend.position="bottom")
ggplot(rocCf,aes(x=false_positives,y=true_positives,colour=type,linetype=region)) +
geom_line() + scale_x_log10() + facet_grid(. ~ caller) + theme(legend.position="bottom")
ggplot(rocCf,aes(x=false_positives,y=true_positives,colour=type,linetype=region)) +
geom_line() + facet_grid(. ~ caller,scales = "free_x") + theme(legend.position="bottom")
knit("validation.Rmd")
