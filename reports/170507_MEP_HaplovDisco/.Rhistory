geom_segment(size=2) +  facet_grid(sample ~ chrom)
for(CHR in levels(haplinks$chrom)) {
ggplot(subset(haplinks,chrom==CHR),aes(x=pos1,xend=pos2,y=py1,yend=py2,alpha=value)) +
geom_segment(size=2) +  facet_grid(sample ~ .)
}
for(CHR in levels(haplinks$chrom)) {
gplot <- ggplot(subset(haplinks,chrom==CHR),aes(x=pos1,xend=pos2,y=py1,yend=py2,alpha=value)) +
geom_segment(size=2) +  facet_grid(sample ~ .)
plot(gplot)
}
for(CHR in levels(haplinks$chrom)) {
gplot <- ggplot(subset(haplinks,chrom==CHR),aes(x=pos1,xend=pos2,y=py1,yend=py2,alpha=value)) +
geom_segment(size=2) +  facet_grid(sample ~ CHR)
plot(gplot)
}
for(CHR in levels(haplinks$chrom)) {
gplot <- ggplot(subset(haplinks,chrom==CHR),aes(x=pos1,xend=pos2,y=py1,yend=py2,alpha=value)) +
geom_segment(size=2) +  facet_grid(sample ~ chrom)
plot(gplot)
}
for(CHR in levels(haplinks$chrom)) {
gplot <- ggplot(subset(haplinks,chrom==CHR),aes(x=pos1,xend=pos2,y=py1,yend=py2,alpha=value)) +
geom_segment(size=2) +  facet_grid(sample ~ chrom)
print(gplot)
}
knit("recombinationPlots.Rmd")
knit("recombinationPlots.Rmd")
knit("recombinationPlots.Rmd")
max(haplinks$pos1)
max(haplinks$pos2)
for(CHR in levels(haplinks$chrom)) {
gplot <- ggplot(subset(haplinks,chrom==CHR),aes(x=pos1,xend=pos2,y=py1,yend=py2,alpha=value)) +
geom_segment(size=2) +  facet_grid(sample ~ chrom) + xlim(0,3.3e6)
print(gplot)
}
knit("recombinationPlots.Rmd")
knit("recombinationPlots.Rmd")
setwd("/Volumes//gsap_garage-protistvector/sredmond/Aedes_AGWG/reports/170502_AeInv_depth_het/")
library(ggplot2)
library(reshape2)
library(knitr)
```{r setup}
opts_chunk$set(fig.width=12, fig.height=8)
```
```{r}
cruxes <- read.table("AaegL5_assembly_cruxes.txt",sep="\t",stringsAsFactors = F)
colnames(cruxes) <- c("chr","start","end","description")
cruxes$start <- as.numeric(as.character(cruxes$start))
cruxes$end <- as.numeric(as.character(cruxes$end))
cruxes$chr <- as.character(cruxes$chr)
```
```{r}
svsGroc <- read.table("../170316_inversions_grocsvs/allGrocs.FR.bed",col.names = c("chr","start","end","orientation","cluster_size",
"quality","sample","direction"),sep="\t",stringsAsFactors=F)
svsGroc$length <- svsGroc$end-svsGroc$start
svsGroc$prog <- "groc"
#GROCSVS
table(svsGroc[,c("sample")])
ggplot(svsGroc,aes(colour=orientation,y=length,x=orientation)) + geom_boxplot() + scale_y_log10() + ggtitle("call lengths, intersection vs LR only")
```
```{r}
#ggplot(svsGroc,aes(x=start, xend=end, y=0, yend=0, colour=sample)) + geom_curve() +
svsGroc$curve = "short"
svsGroc$curve[(svsGroc$end - svsGroc$start) > 1e6] <- "mid"
svsGroc$curve[(svsGroc$end - svsGroc$start) > 100e6] <- "long"
chroms = data.frame("chr"=c("AaegL5_170228_hic_scaffold_1","AaegL5_170228_hic_scaffold_2","AaegL5_170228_hic_scaffold_3"),
start=c(1,1,1),
end=c(309683093,473352375,408806344))
ggplot(chroms,aes(y=0,yend=0,x=start,xend=end)) +
geom_segment(colour="#555555",size=2,alpha=0.6) +
geom_curve(data=subset(svsGroc,curve=="short" & orientation %in% c("++","--")),aes(colour=sample),size=0.5,curvature=-20)+
geom_curve(data=subset(svsGroc,curve=="mid" & orientation %in% c("++","--")),aes(colour=sample),size=0.5,curvature=-1)+
geom_curve(data=subset(svsGroc,curve=="long" & orientation %in% c("++","--")),aes(colour=sample),size=0.5,curvature=0.2)+
#  geom_curve(data=subset(svsGroc,orientation %in% c("++","--") & curve != "long"),aes(colour=sample),size=0.5,curvature=0.5)+
geom_segment(data=subset(cruxes,description=="centromere"),colour="black",size=6,alpha=1) +
geom_segment(data=subset(cruxes,description!="centromere"),colour="red",size=6,alpha=1) +
ggtitle("grocSV calls: inversions")+
theme(legend.position="bottom") + facet_grid(chr ~ .)
#  geom_label(data=cruxes,aes(label=description),size=4,alpha=1) +
ggplot(chroms,aes(y=0,yend=0,x=start,xend=end)) +
geom_segment(colour="#555555",size=2,alpha=0.6) +
# geom_curve(data=subset(svsGroc,curve=="short" & orientation %in% c("+-","-+")),aes(colour=sample),size=0.5,curvature=-20)+
geom_curve(data=subset(svsGroc,curve=="mid" & orientation %in% c("+-","-+")),aes(colour=sample),size=0.5,curvature=-1)+
geom_curve(data=subset(svsGroc,curve=="long" & orientation %in% c("+-","-+")),aes(colour=sample),size=0.5,curvature=0.2)+
#geom_curve(data=subset(svsGroc,orientation %in% c("+-","-+") & curve!="long"),aes(colour=sample),size=0.5,curvature=0.2)+
geom_segment(data=subset(cruxes,description=="centromere"),colour="black",size=6,alpha=1) +
geom_segment(data=subset(cruxes,description!="centromere"),colour="red",size=6,alpha=1) +
ggtitle("grocSV calls: dels/translocs")+
theme(legend.position="bottom") + facet_grid(chr ~ .)
#  geom_label(data=cruxes,aes(label=description),size=4,alpha=1) +
```
```{r}
hetDepths1 <- read.table("AeInv_gvcfs_chr1.hetDist.txt",header=T)
hetDepths2 <- read.table("AeInv_gvcfs_chr2.hetDist.txt",header=T)
hetDepths3 <- read.table("AeInv_gvcfs_chr3.hetDist.txt",header=T)
hetDepths <- rbind(hetDepths1,hetDepths2,hetDepths3)
depth <- read.table("../170425_AGWG_depth_het/AGWG_AaegL5_depths.txt",header=F,col.names=c("CHR","ST","EN","D1","D2","D3","D4"))
hetDepths <- merge(depth,hetDepths)
hetDepths$POS = hetDepths$ST+5e5
hetDepths$D1 <- round(hetDepths$D1*100/1e6)
hetDepths$D2 <- round(hetDepths$D2*100/1e6)
hetDepths$D3 <- round(hetDepths$D3*100/1e6)
hetDepths$D4 <- round(hetDepths$D4*100/1e6)
depths <- melt(hetDepths[,c("CHR","ST","EN","D1","D2","D3","D4","POS")],id.vars = c("CHR","ST","EN","POS"))
levels(depths$variable) <- c("AGWG1","AGWG2","AGWG3","AGWG4")
hets <- melt(hetDepths[,c("CHR","ST","EN","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","POS")],id.vars = c("CHR","ST","EN","POS"))
levels(hets$variable) <- c("AGWG1","AGWG2","AGWG3","AGWG4","FCV_1","FormUG","K14_3","K27_3","K2_3","Masc16_003","NolaF8_002","T51_2","U52_1")
cols =        c("#444444","#666666","#888888","#AAAAAA","#00EE00","#00AA00","#FF0000","#CC0000","#AA0000","purple","blue","orange","yellow")
names(cols) = c("AGWG1","AGWG2","AGWG3","AGWG4","FCV_1","FormUG","K14_3","K27_3","K2_3","Masc16_003","NolaF8_002","T51_2","U52_1")
spp =        c("aegypti_L","aegypti_L","aegypti_L","aegypti_L","formosus","formosus","hybrid","formosus","aegypti","mascarensis","aegypti","aegypti","formosus")
names(spp) = c("AGWG1","AGWG2","AGWG3","AGWG4","FCV_1","FormUG","K14_3","K27_3","K2_3","Masc16_003","NolaF8_002","T51_2","U52_1")
sppcols =    c("dark red","blue","purple","red","dark grey")
names(sppcols) = c("aegypti_L","formosus","hybrid","aegypti","mascarensis")
hets$spp = spp[hets$variable]
agwgs <- c("AGWG1","AGWG2","AGWG3","AGWG4")
ggplot(subset(depths,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line() + facet_grid(CHR ~ .) + ylim(0,120)+ theme(legend.position="bottom")
ggplot(subset(hets,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom")
ggplot(depths,aes(x=POS,y=value,group=variable,colour=variable)) + geom_line() + facet_grid(CHR ~ .) + ylim(0,120)+ theme(legend.position="bottom") +
scale_colour_manual(values = cols)
ggplot(hets,aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom") +
scale_colour_manual(values = cols)
cols =        c("#444444","#666666","#888888","#AAAAAA","#00EE00","#008800","#FF0000","#CC0000","#AA0000","purple","blue","orange","yellow")
names(cols) = c("AGWG1","AGWG2","AGWG3","AGWG4","FCV_1","FormUG","K14_3","K27_3","K2_3","Masc16_003","NolaF8_002","T51_2","U52_1")
ggplot(hets,aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom") +
scale_colour_manual(values = cols)
ggplot(hets,aes(x=POS,y=value,group=variable,colour=spp)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom") +
scale_colour_manual(values = sppcols)
ggplot(hets,aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom") +
scale_colour_manual(values = cols)
knit("plotHetDist.Rmd")
setwd("/Volumes/gsap_garage-protistvector/sredmond/Aedes_AGWG/reports/170502_AeInv_depth_het/")
repeats <- read.table("AaegL5_pbjelly.translated.repeatblocks.txt",colnames=c("chrom","start","end","type","count","bases"))
repeats <- read.table("AaegL5_pbjelly.translated.repeatblocks.txt",col.names=c("chrom","start","end","type","count","bases"))
repeats$pos = repeats$start+5e5
subset(repeats,is.na(count))
head(repeats)
head(repeats,50 )
is.numeric(repeats$count)
as.numeric(repeats$count)
repeats <- read.table("AaegL5_pbjelly.translated.repeatblocks.txt",col.names=c("chrom","start","end","type","count","bases"),na.strings = c('-'))
repeats$pos = repeats$start+5e5
subset(repeats,is.na(count))
repeatSums <- subset(repeats,is.na(count))
repeatSums <- subset(repeats,type != "total")
ggplot(repeatsums,aes(x=pos,y=bases,group=type,fill=type)) + geom_bar()
repeatsums <- subset(repeats,is.na(count))
repeatsums <- subset(repeats,type != "total")
ggplot(repeatsums,aes(x=pos,y=bases,group=type,fill=type)) + geom_bar()
ggplot(repeatsums,aes(x=pos,y=bases,group=type,fill=type)) + geom_bar(stat=identity)
ggplot(repeatsums,aes(x=pos,y=bases,group=type,fill=type)) + geom_bar(stat="identity")
repeatsums$type <- Factor(repeatsums$type)
repeatsums$type <- factor(repeatsums$type)
ggplot(repeatsums,aes(x=pos,y=bases,group=type,fill=type)) + geom_bar(stat="identity")
repeatsums$type <- factor(as.character(repeatsums$type))
ggplot(repeatsums,aes(x=pos,y=bases,group=type,fill=type)) + geom_bar(stat="identity")
repeatsums <- subset(repeatsums,type != "total")
repeatsums$type <- factor(as.character(repeatsums$type))
ggplot(repeatsums,aes(x=pos,y=bases,group=type,fill=type)) + geom_bar(stat="identity")
repeatsums$type
as.character(repeatsums$type)
repeatsums <- subset(repeats,is.na(count))
repeats <- read.table("AaegL5_pbjelly.translated.repeatblocks.txt",col.names=c("chrom","start","end","type","count","bases"),na.strings = c('-'))
repeats$pos = repeats$start+5e5
repeatsums <- subset(repeats,is.na(count))
repeatsums
repeatsums$type
levels(repeatsums$type)
unique(repeatsums$type)
levels(repeatsums$type) <- unique(repeatsums$type)
repeatsums <- subset(repeats,is.na(count))
repeatsums <- subset(repeatsums,type != "total")
repeatsums$type <- factor(as.character(repeatsums$type))
levels(repeatsums$type)
ggplot(repeatsums,aes(x=pos,y=bases,group=type,fill=type)) + geom_bar(stat="identity")
View(repeatsums)
repeatsums$bases > 1e6
repeatsums[repeatsums$bases > 1e6,]
repeatsums[repeatsums$bases > 1e5,]
repeatsums[repeatsums$bases > 5e5,]
repeatsums[repeatsums$end < 1e5,]
repeatsums[repeatsums$end < 2e5,]
repeatsums[repeatsums$end < 1e6,]
repeatsums[repeatsums$end <= 1e6,]
repeats$chrom %in% c("AaegL5_170228_hic_scaffold_1","AaegL5_170228_hic_scaffold_2","AaegL5_170228_hic_scaffold_3")
repeats <- repeats[repeats$chrom %in% c("AaegL5_170228_hic_scaffold_1","AaegL5_170228_hic_scaffold_2","AaegL5_170228_hic_scaffold_3"),]
repeats$pos = repeats$start+5e5
repeatsums <- subset(repeats,is.na(count))
repeatsums <- subset(repeatsums,type != "total")
repeatsums$type <- factor(as.character(repeatsums$type))
ggplot(repeatsums,aes(x=pos,y=bases,group=type,fill=type)) + geom_bar(stat="identity")
ggplot(repeatsums,aes(x=pos,y=bases,group=type,fill=type)) + geom_bar(stat="identity") + facet_grid(chrom ~ . )
repeats$end-repeats$start
repeats$bases / (repeats$end-repeats$start+1)
repeats$pc <- repeats$bases / (repeats$end-repeats$start+1)
repeats$pos = repeats$start+5e5
repeatsums <- subset(repeats,is.na(count))
repeatsums <- subset(repeatsums,type != "total")
repeatsums$type <- factor(as.character(repeatsums$type))
ggplot(repeatsums,aes(x=pos,y=pc,group=type,fill=type)) + geom_bar(stat="identity") + facet_grid(chrom ~ . )
repeats <- subset(repeats,!is.na(count))
repeats$type <- factor(as.character(repeats$type))
ggplot(repeats,aes(x=chrom,y=pc,group=type,fill=type)) + geom_bar(stat="identity") + facet_grid(chrom ~ . )
ggplot(repeats,aes(x=chrom,y=pc,group=type,fill=type)) + geom_bar(stat="identity")
ggplot(repeats,aes(x=chrom,y=bases,group=type,fill=type)) + geom_bar(stat="identity")
ggplot(repeatsums,aes(x=chrom,y=bases,group=type,fill=type)) + geom_bar(stat="identity")
?geom_bar
ggplot(repeatsums,aes(x=chrom,y=bases,group=type,fill=type)) + geom_bar(stat="identity",position = "fill")
ggplot(repeatsums,aes(x=pos,y=pc,group=type,fill=type)) + geom_bar(stat="identity") + facet_grid(chrom ~ . )
ggplot(repeatsums,aes(x=type,y=bases,group=type,fill=type)) + geom_violin()
View(repeatsums)
ggplot(repeatsums,aes(x=type,y=bases,group=type,fill=type)) + geom_violin()
ggplot(repeatsums,aes(x=type,y=bases,group=type,fill=type)) + geom_violin(draw_quantiles = T)
ggplot(repeatsums,aes(x=type,y=bases,group=type,fill=type)) + geom_violin(draw_quantiles = T,scale = "count")
ggplot(repeatsums,aes(x=type,y=bases,group=type,fill=type)) + geom_violin(draw_quantiles = T,scale = "width")
ggplot(repeatsums,aes(x=type,y=bases,group=type,fill=type)) + geom_violin(draw_quantiles = T,scale = "count")
ggplot(repeatsums,aes(x=type,y=bases,group=type,fill=type)) + geom_violin(draw_quantiles = T,scale = "width")
rmask <- repeatsums[repeatsums$type=="total",]
rmask
rmask <- repeats[repeats$type=="total",]
rmask
repeats <- read.table("AaegL5_pbjelly.translated.repeatblocks.txt",col.names=c("chrom","start","end","type","count","bases"),na.strings = c('-'))
repeats <- repeats[repeats$chrom %in% c("AaegL5_170228_hic_scaffold_1","AaegL5_170228_hic_scaffold_2","AaegL5_170228_hic_scaffold_3"),]
repeats$pc <- repeats$bases / (repeats$end-repeats$start+1)
repeats$pos = repeats$start+5e5
rmask <- repeats[repeats$type=="total",]
repeatsums <- subset(repeats,is.na(count))
repeatsums <- subset(repeatsums,type != "total")
repeatsums$type <- factor(as.character(repeatsums$type))
repeats <- subset(repeats,!is.na(count))
repeats$type <- factor(as.character(repeats$type))
ggplot(repeatsums,aes(x=pos,y=pc,group=type,fill=type)) + geom_bar(stat="identity") + facet_grid(chrom ~ . )
ggplot(repeats,aes(x=chrom,y=bases,group=type,fill=type)) + geom_bar(stat="identity")
ggplot(repeatsums,aes(x=chrom,y=bases,group=type,fill=type)) + geom_bar(stat="identity",position = "fill")
ggplot(repeatsums,aes(x=type,y=bases,group=type,fill=type)) + geom_violin(draw_quantiles = T,scale = "count")
ggplot(repeatsums,aes(x=type,y=bases,group=type,fill=type)) + geom_violin(draw_quantiles = T,scale = "width")
ggplot(repeats,aes(x=type,y=bases,fill=type)) + geom_bar(stat="identity")
ggplot(repeats,aes(x=type,y=bases,fill=type)) + geom_bar(stat="identity") + facet_grid(chrom ~ . )
ggplot(repeatsums,aes(x=chrom,y=bases,group=type,fill=type)) + geom_bar(stat="identity",position = "fill") + coord_flip()
ggplot(repeats,aes(x=type,y=bases,fill=type)) + geom_bar(stat="identity") + facet_grid(chrom ~ . ) + coord_flip()
ggplot(repeats,aes(x=type,y=bases,fill=type)) + geom_bar(stat="identity") + facet_grid(. ~ chrom) + coord_flip()
ggplot(repeatsums,aes(x=chrom,y=bases,group=type,fill=type)) + geom_bar(stat="identity",position = "fill") + theme(legend="none")
ggplot(repeats,aes(x=type,y=bases,fill=type)) + geom_bar(stat="identity") + facet_grid(. ~ chrom) + coord_flip() + scale_fill_discrete(guide=F)
hetDepths1 <- read.table("AeInv_gvcfs_chr1.hetDist.txt",header=T)
hetDepths2 <- read.table("AeInv_gvcfs_chr2.hetDist.txt",header=T)
hetDepths3 <- read.table("AeInv_gvcfs_chr3.hetDist.txt",header=T)
hetDepths <- rbind(hetDepths1,hetDepths2,hetDepths3)
depth <- read.table("../170425_AGWG_depth_het/AGWG_AaegL5_depths.txt",header=F,col.names=c("CHR","ST","EN","D1","D2","D3","D4"))
hetDepths <- merge(depth,hetDepths)
hetDepths$POS = hetDepths$ST+5e5
hetDepths$D1
hetDepths$D1 <- round(hetDepths$D1*100/1e6)
hetDepths$D2 <- round(hetDepths$D2*100/1e6)
hetDepths$D3 <- round(hetDepths$D3*100/1e6)
hetDepths$D4 <- round(hetDepths$D4*100/1e6)
depths <- melt(hetDepths[,c("CHR","ST","EN","D1","D2","D3","D4","POS")],id.vars = c("CHR","ST","EN","POS"))
levels(depths$variable) <- c("AGWG1","AGWG2","AGWG3","AGWG4")
hetDepths[,c("CHR","ST","EN","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","POS")]
head(hetDepths)
hetDepths$len <- hetDepths$end-hetDepths$start
hetDepths$LEN <- hetDepths$EN-hetDepths$ST
head(rmask)
rmask$start <- rmask$start-1
colnames(rmask)
colnames(rmask)[1:3] <- c("CHR","ST","EN")
hets <- merge(rmask,hetDepths[,c("CHR","ST","EN","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","POS")])
head(hets)
hets <- merge(rmask[,c("CHR","ST","EN","pc")],hetDepths[,c("CHR","ST","EN","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","POS")])
head(hets)
hets <- merge(rmask[,c("CHR","ST","EN","LEN","pc")],hetDepths[,c("CHR","ST","EN","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","POS")])
hetDepths$LEN <- hetDepths$EN-hetDepths$ST
hetDepths$LEN <- hetDepths$EN-hetDepths$ST
colnames(rmask)[1:3] <- c("CHR","ST","EN")
rmask$LEN <- rmask$EN-rmask$ST
rmask$LEN <- rmask$EN-rmask$ST
head(rmask)
rmask$ACCESS <- rmask$LEN*rmask$pc
head(rmask)
hets <- merge(rmask[,c("CHR","ST","EN","ACCESS","pc")],hetDepths[,c("CHR","ST","EN","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","POS")])
hets <- merge(rmask[,c("CHR","ST","EN","ACCESS","pc")],hetDepths[,c("CHR","ST","EN","PASS","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","POS")])
hets$PASS/ACCESS
hets$PASS/hets$ACCESS
hets[,c("H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13")] * hets$PASS/hets$ACCESS
hets[,c("H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13")] <- hets[,c("H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13")] * hets$PASS/hets$ACCESS
hets <- melt(hets[,c("CHR","ST","EN","ACCESS","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","POS")],id.vars = c("CHR","ST","EN","POS","ACCESS"))
levels(hets$variable) <- c("AGWG1","AGWG2","AGWG3","AGWG4","FCV_1","FormUG","K14_3","K27_3","K2_3","Masc16_003","NolaF8_002","T51_2","U52_1")
cols =        c("#444444","#666666","#888888","#AAAAAA","#00EE00","#008800","#FF0000","#CC0000","#AA0000","purple","blue","orange","yellow")
names(cols) = c("AGWG1","AGWG2","AGWG3","AGWG4","FCV_1","FormUG","K14_3","K27_3","K2_3","Masc16_003","NolaF8_002","T51_2","U52_1")
spp =        c("aegypti_L","aegypti_L","aegypti_L","aegypti_L","formosus","formosus","hybrid","formosus","aegypti","mascarensis","aegypti","aegypti","formosus")
names(spp) = c("AGWG1","AGWG2","AGWG3","AGWG4","FCV_1","FormUG","K14_3","K27_3","K2_3","Masc16_003","NolaF8_002","T51_2","U52_1")
sppcols =    c("dark red","blue","purple","red","dark grey")
names(sppcols) = c("aegypti_L","formosus","hybrid","aegypti","mascarensis")
hets$spp = spp[hets$variable]
agwgs <- c("AGWG1","AGWG2","AGWG3","AGWG4")
ggplot(subset(depths,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line() + facet_grid(CHR ~ .) + ylim(0,120)+ theme(legend.position="bottom")
ggplot(subset(hets,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom")
ggplot(subset(hets,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom")
ggplot(subset(depths,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line() + facet_grid(CHR ~ .) + ylim(0,120)+ theme(legend.position="bottom")
ggplot(subset(hets,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom")
ggplot(depths,aes(x=POS,y=value,group=variable,colour=variable)) + geom_line() + facet_grid(CHR ~ .) + ylim(0,120)+ theme(legend.position="bottom") +
scale_colour_manual(values = cols)
ggplot(hets,aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom") +
scale_colour_manual(values = cols)
hets$ST<1e6
hets[hets$ST<1e6,]
ggplot(depths,aes(x=POS,y=value,group=variable,colour=variable)) + geom_line() + facet_grid(CHR ~ .) + ylim(0,120)+ theme(legend.position="bottom") +
scale_colour_manual(values = cols)
ggplot(hets,aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom") +
scale_colour_manual(values = cols)
head(rmask)
ggplot(rmask,aes(x=POS,y=ACCESS)) + geom_line()
ggplot(rmask,aes(x=ST,y=ACCESS)) + geom_line()
head(rmask)
subset(rmask,ACCESS < 1e5)
subset(rmask,ACCESS < 5e5)
subset(rmask,ACCESS < 3e5)
rmask$LEN <- rmask$EN-rmask$ST
rmask$ACCESS <- rmask$LEN*(1-rmask$pc)
subset(rmask,ACCESS > 5e5)
subset(rmask,ACCESS > 6e5)
subset(rmask,ACCESS > 7e5)
hetDepths1 <- read.table("AeInv_gvcfs_chr1.hetDist.txt",header=T)
hetDepths2 <- read.table("AeInv_gvcfs_chr2.hetDist.txt",header=T)
hetDepths3 <- read.table("AeInv_gvcfs_chr3.hetDist.txt",header=T)
hetDepths <- rbind(hetDepths1,hetDepths2,hetDepths3)
depth <- read.table("../170425_AGWG_depth_het/AGWG_AaegL5_depths.txt",header=F,col.names=c("CHR","ST","EN","D1","D2","D3","D4"))
hetDepths <- merge(depth,hetDepths)
hetDepths$POS = hetDepths$ST+5e5
hetDepths$D1 <- round(hetDepths$D1*100/1e6)
hetDepths$D2 <- round(hetDepths$D2*100/1e6)
hetDepths$D3 <- round(hetDepths$D3*100/1e6)
hetDepths$D4 <- round(hetDepths$D4*100/1e6)
depths <- melt(hetDepths[,c("CHR","ST","EN","D1","D2","D3","D4","POS")],id.vars = c("CHR","ST","EN","POS"))
levels(depths$variable) <- c("AGWG1","AGWG2","AGWG3","AGWG4")
#CALCULATE TOTAL HETS PER NON-REPEATMASKED BASE
colnames(rmask)[1:3] <- c("CHR","ST","EN")
rmask$ST <- rmask$ST-1
rmask$LEN <- rmask$EN-rmask$ST
rmask$ACCESS <- rmask$LEN*(1-rmask$pc)
ggplot(rmask,aes(x=ST,y=ACCESS)) + geom_line()
hets <- merge(rmask[,c("CHR","ST","EN","ACCESS","pc")],hetDepths[,c("CHR","ST","EN","PASS","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","POS")])
hets[,c("H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13")] <- hets[,c("H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13")] * hets$PASS/hets$ACCESS
hets <- melt(hets[,c("CHR","ST","EN","ACCESS","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","POS")],id.vars = c("CHR","ST","EN","POS","ACCESS"))
levels(hets$variable) <- c("AGWG1","AGWG2","AGWG3","AGWG4","FCV_1","FormUG","K14_3","K27_3","K2_3","Masc16_003","NolaF8_002","T51_2","U52_1")
cols =        c("#444444","#666666","#888888","#AAAAAA","#00EE00","#008800","#FF0000","#CC0000","#AA0000","purple","blue","orange","yellow")
names(cols) = c("AGWG1","AGWG2","AGWG3","AGWG4","FCV_1","FormUG","K14_3","K27_3","K2_3","Masc16_003","NolaF8_002","T51_2","U52_1")
spp =        c("aegypti_L","aegypti_L","aegypti_L","aegypti_L","formosus","formosus","hybrid","formosus","aegypti","mascarensis","aegypti","aegypti","formosus")
names(spp) = c("AGWG1","AGWG2","AGWG3","AGWG4","FCV_1","FormUG","K14_3","K27_3","K2_3","Masc16_003","NolaF8_002","T51_2","U52_1")
sppcols =    c("dark red","blue","purple","red","dark grey")
names(sppcols) = c("aegypti_L","formosus","hybrid","aegypti","mascarensis")
hets$spp = spp[hets$variable]
```
AGWG samples only:
```{r}
agwgs <- c("AGWG1","AGWG2","AGWG3","AGWG4")
ggplot(subset(depths,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line() + facet_grid(CHR ~ .) + ylim(0,120)+ theme(legend.position="bottom")
ggplot(subset(hets,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom")
```
ggplot(subset(depths,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line() + facet_grid(CHR ~ .) + ylim(0,120)+ theme(legend.position="bottom")
ggplot(subset(hets,variable %in% agwgs),aes(x=POS,y=value,group=variable,colour=variable)) + geom_line(size=1,alpha=0.6) + facet_grid(CHR ~ .)+ theme(legend.position="bottom")
knit("plotHetDist.Rmd")
knit("plotHetDist.Rmd")
knit("plotHetDist.Rmd")
setwd("~/Scratch/gits/pfdisco/analyses/TREES/pars_trees/")
system("ls")
library(ggplot2)
library(ape)
library(stringdist)
library(reshape2)
library(phangorn)
fileroot<-"thies_300100_haplo.CALLBOTH.RENAME.vcf.gz"
outfolder <- "boot_gatk_both"
tab=paste(fileroot,'tab',sep='.')
outpng=paste(fileroot,'png',sep='.')
outnex=paste(fileroot,'nexus',sep='.')
outtab=paste(fileroot,'dist.tab.txt',sep='.')
#read in ped file and get hamming distances:
alleleTab <- read.table(tab,colClasses="character",header=T,na.strings = c("."))
tab=paste(fileroot,'tab',sep='.')
outpng=paste(fileroot,'png',sep='.')
outnex=paste(fileroot,'nexus',sep='.')
outtab=paste(fileroot,'dist.tab.txt',sep='.')
#read in ped file and get hamming distances:
alleleTab <- read.table(tab,colClasses="character",header=T,na.strings = c("."))
fileroot<-"thies_300100_haplo.CALLHAPLO.alleles.tab"
fileroot<-"thies_300100_haplo.CALLHAPLO.RENAME.alleles.tab"
fileroot<-"thies_300100_haplo.CALLHAPLO.RENAME"
outfolder <- "boot_gatk_both"
tab=paste(fileroot,'tab',sep='.')
outpng=paste(fileroot,'png',sep='.')
outnex=paste(fileroot,'nexus',sep='.')
outtab=paste(fileroot,'dist.tab.txt',sep='.')
#read in ped file and get hamming distances:
alleleTab <- read.table(tab,colClasses="character",header=T,na.strings = c("."))
fileroot<-"thies_300100_haplo.CALLHAPLO.RENAME.alleles"
outfolder <- "boot_gatk_both"
tab=paste(fileroot,'tab',sep='.')
outpng=paste(fileroot,'png',sep='.')
outnex=paste(fileroot,'nexus',sep='.')
outtab=paste(fileroot,'dist.tab.txt',sep='.')
#read in ped file and get hamming distances:
alleleTab <- read.table(tab,colClasses="character",header=T,na.strings = c("."))
genos <- t(data.matrix(alleleTab[6:dim(alleleTab)[2]]))
inds <- row.names(genos)
genosDat <- as.phyDat(genos, type="USER", levels = c(0:max(genos,na.rm=T)))
distmat <- dist.hamming(genosDat,exclude="pairwise")
treeNJ <- NJ(distmat)
#
#distmat2 <- matrix(nrow=length(inds),ncol=length(inds))
#colnames(distmat2) = inds
#rownames(distmat2) = inds
#write("calculating distance matrix",stderr())
#for (i in rownames(genos)){
#   for (j in rownames(genos)){
#      notnull <- !(is.na(genos[i,]) | is.na(genos[j,]))
#
#      distmat2[i,j] <- sum(genos[i,notnull] != genos[j,notnull])
#  }
#}
#get parsinomy score
parsimony(treeNJ,genosDat)
#get parsinomy tree
#treePars <- optim.parsimony(treeNJ,genosDat)
write("getting parsimony tree",stderr())
treeRatchet <- pratchet(genosDat)
write(str(treeRatchet))
#re-add distances
#write.table(as.matrix(distmat),stderr())
write("re-adding distances",stderr())
write(paste("symmetric",isSymmetric(as.matrix(distmat))),stderr())
treeRatchet <- nnls.phylo(treeRatchet,distmat)
#write(treeRatchet,stderr())
write("midpoint root",stderr())
treeRatchet <- midpoint(treeRatchet)
#write(treeRatchet,stderr())
#parsimony(c(treePars,treeRatchet),genosDat)
#plot(treePars,"unrooted",main="parsimony: NNI swaps")
write("printing tree",stderr())
png(filename=outpng,type="cairo-png")
plot(treeRatchet,show.node.label = T,show.tip.label = T,
main=paste("parsimony ratchet, ",fileroot),type="phylogram",cex = 1.1)
dev.off()
write.nexus(treeRatchet,file=outnex)
fileroot<-"thies_300100_haplo.CALLHAPLO.RENAME.alleles"
outfolder <- "boot_gatk_haplo"
#fileroot <- commandArgs(TRUE)[1]
tab=paste(fileroot,'tab',sep='.')
#boot <- Sys.getenv('SGE_TASK_ID')
system("mkdir "+outfolder)
system(paste("mkdir ",outfolder))
for (boot in c(1:100)) {
ped=paste(fileroot,'ped',sep='.')
outpng=paste(fileroot,boot,'png',sep='.')
#outnex=paste(fileroot,boot,'pars.nexus',sep='.')
#outtab=paste(fileroot,boot,'dist.tab.txt',sep='.')
outnex=paste(".",outfolder, paste(fileroot,boot,'pars.nexus',sep='.'),sep="/")
outtab=paste(".",outfolder, paste(fileroot,boot,'dist.tab.txt',sep='.')         ,sep="/")
#read in ped file and get hamming distances:
alleleTab <- read.table(tab,colClasses="character",header=T,na.strings = c("."))
genos <- t(data.matrix(alleleTab[6:dim(alleleTab)[2]]))
inds <- row.names(genos)
noGenos = dim(genos)[[2]]
sample <- sample(1:noGenos,replace=T)
#bootstrap to full size of genotype matrix:
genos <- genos[,sample]
genosDat <- as.phyDat(genos, type="USER", levels = c(0:max(genos,na.rm=T)))
distmat <- dist.hamming(genosDat)
#treeNJ <- NJ(distmat)
#
#distmat2 <- matrix(nrow=length(inds),ncol=length(inds))
#colnames(distmat2) = inds
#rownames(distmat2) = inds
#write("calculating distance matrix",stderr())
#for (i in rownames(genos)){
#   for (j in rownames(genos)){
#      notnull <- !(is.na(genos[i,]) | is.na(genos[j,]))
#
#      distmat2[i,j] <- sum(genos[i,notnull] != genos[j,notnull])
#  }
#}
#get parsinomy score
#parsimony(treeNJ,genosDat)
#get parsinomy tree
#treePars <- optim.parsimony(treeNJ,genosDat)
write("getting parsimony tree",stderr())
treeRatchet <- pratchet(genosDat)
write(str(treeRatchet))
#re-add distances
#  write(dim(as.matrix(distmat)),stderr())
#  write.table(round(as.matrix(distmat),2),stderr())
#write(treeRatchet$tip.label,stderr())
write("re-adding distances",stderr())
treeRatchet <- nnls.phylo(treeRatchet,as.matrix(distmat),rooted=T)
#treeRatchet <- nnls.phylo(treeRatchet,distmat)
#write(treeRatchet,stderr())
#DO NOT MIDPOINT ROOT FOR BOOTSTRAPPING
#write("midpoint root",stderr())
#  treeRatchet <- midpoint(treeRatchet)
#write("printing tree",stderr())
#png(filename=outpng,type="cairo-png")
#  plot(treeRatchet,show.node.label = T,show.tip.label = T,
#       main=paste("parsimony ratchet, ",fileroot),type="phylogram",cex = 1.1)
#dev.off()
write.nexus(treeRatchet,file=outnex)
}
setwd("~/Scratch/gits/pfdisco/reports/170507_MEP_HaplovDisco/")
knit("MEP.Rmd")
knit("MEP.Rmd")
knit("MEP.Rmd")
head(discoGenos)
head(discoGenos,100)
head(discoGenos,100)
discoGenos
