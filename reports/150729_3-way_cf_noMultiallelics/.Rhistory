#get tile of climate data
climdata<-getData("worldclim", var="alt", res=0.5, lon=35, lat=-14)
cntdata <- list()
cdata[code] <- climdata
cshapes[code] <- cshape
}
cdata <- list()
cshapes <- list()
for (code in codes) {
#  write(code,stderr())
#country region data:
cshape<-getData("GADM", country=code, level=1)
#get tile of climate data
climdata<-getData("worldclim", var="alt", res=0.5, lon=35, lat=-14)
cntdata <- list()
cdata[code] <- climdata
cshapes[code] <- cshape
}
cshapes$BEN
cdata$BEN
cshapes$DZA
library(rworldmap)
library(ggmap)
install.packaged("rworldmap")
install.packages("rworldmap")
library(rworldmap)
library(ggmap)
newmap <- getMap(resolution = "high")
africa <- plot(newmap, xlim = c(-16, 50), ylim = c(-35, 35), asp = 0)
CE.africa <- plot(newmap, xlim = c(-8, 25), ylim = c(-12, 12), asp = 0)
cshapes$DZA
sumary(cshapes$DZA)
summary(cshapes$DZA)
?SpatialPolygonsDataFrame
cshapes$DZA$coords
cshapes$DZA$sr1
cshapes$DZA$Sr1
?SpatialPolygons
cshapes$DZA$polygones
cshapes$DZA$polygons
coordinates(cshapes$DZA)
coordinates(cshape)
max(coordinates(cshape))
apply(coordinates(cshape),1,FUN=max)
apply(coordinates(cshape),2,FUN=max)
apply(coordinates(cshape),2,FUN=min)
maxlonlat <- apply(coordinates(cshape),2,FUN=max)
minlonlat <- apply(coordinates(cshape),2,FUN=min)
minlonlat + ((maxlonlat-minlonlat)/2)
colnames(coords) <- c("lon","lat")
coords <- coordinates(cshape)
colnames(coords) <- c("lon","lat")
max <- apply(coords,2,FUN=max)
min <- apply(coords,2,FUN=min)
mid <- minlonlat + ((maxlonlat-minlonlat)/2)
mid
mid$lon
mid[[1]]
mid[1]
plot(cshapes$DZA)
plot(cshapes$ZBE)
plot(cshapes$BFA)
plot(cdata$BFA)
plot(cdata$ZMB)
cdata$ZMB$alt_37
cdata$ZMB$alt_37
cshapes$ZMB
coordiates(cshapes$ZMB)
coordinates(cshapes$ZMB)
plot(cshapes$ZMB)
centers(cshapes$ZMB)
names(cshapes$ZMB)
?sp
names(cshapes$ZMB[[1]])
names(cshapes$ZMB[1])
names(cshapes$ZMB\$)
coords <- coordinates(cshapes$KEN)
max <- apply(coords,2,FUN=max)
min <- apply(coords,2,FUN=min)
mid <- minlonlat + ((maxlonlat-minlonlat)/2)
mid
coords <- coordinates(cshapes$CAR)
coords <- coordinates(cshapes$CAF)
max <- apply(coords,2,FUN=max)
min <- apply(coords,2,FUN=min)
mid <- minlonlat + ((maxlonlat-minlonlat)/2)
mid
max <- apply(coords,2,FUN=max)
min <- apply(coords,2,FUN=min)
mid <- min + ((max-min)/2)
mid
coords <- coordinates(cshapes$KEN)
max <- apply(coords,2,FUN=max)
min <- apply(coords,2,FUN=min)
mid <- min + ((max-min)/2)
mid
coords <- coordinates(cshapes$CAM)
coords <- coordinates(cshapes$CMR)
max <- apply(coords,2,FUN=max)
min <- apply(coords,2,FUN=min)
mid <- min + ((max-min)/2)
mid
coords <- coordinates(cshapes$NGA)
max <- apply(coords,2,FUN=max)
min <- apply(coords,2,FUN=min)
mid <- min + ((max-min)/2)
mid
extract(cshapes$BFA,cdata$BFA,fun=mean, na.rm=T)
library(rgeos)
?extract
extract(cdata$BFA,cshapes$BFA,fun=mean, na.rm=T)
cshapes$BFA
extract(altdata,cshape,fun=mean, na.rm=T)
library(ggplot2)
library(reshape2)
library(splines)
#plot depth graphs windows
if(!interactive()) {
cmd_args = commandArgs(trailingOnly = T);
flagdepthsfile = cmd_args[1]
winsize = as.numeric(cmd_args[2])
} else {
flagdepthsfile <- "~/Work_Sanger/anopheles_analyses/unmapPairs/data/AB0090_C.2R.flagdepths.w10000.txt"
winsize <- 10000
}
#cnames <- c("chr","pos",
#            "mappairs","notpaired","mateunmap","faceaway","mapnotpair")
# flagdepths <- read.table(flagdepthsfile)
# colnames(flagdepths) <- cnames
# flagdepths$block <- ceiling(flagdepths$pos/winsize) * winsize
# blocksums_a <- aggregate(. ~ block,
#                        data=flagdepths[,c("block","mappairs","notpaired","mateunmap","faceaway","mapnotpair")],
#                        FUN=sum)
# blocksums <- blocksums_a
#read blocksums from pre-calc'd file
cnames <- c("chr","block","pcfilled",
"mappairs","notpaired","mateunmap","faceaway","mapnotpair")
blocksums <- read.table(flagdepthsfile)
colnames(blocksums) <- cnames
blocksums <- cbind(blocksums[,c("block","pcfilled","mappairs")],
blocksums[,c("notpaired","mateunmap","faceaway","mapnotpair")]/blocksums$mappairs)
blocksums$depthfilled <- round(blocksums$mappairs / (blocksums$pcfilled * winsize))
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
rollapply
library(plyr)
rollapply
library(zoo)
?rollapply
install.packages("zoo")
library(zoo)
?rollapply
?rollmean
rollmean(blocksums,100)
head(rollmean(blocksums,100))
blocksums_raw <- blocksums
blocksums <- rollmean(blocksums,100)
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.8 & (depthfilled >= 14 & depthfilled <= 60)),aes(x=block,y=value,colour=variable)) +
geom_point(alpha=0.5) + ylim(0,0.5) + ggtitle(outroot) +
facet_grid(variable ~ .)
blocksums
head(blocksums)
blocksums <- rollmean(blocksums,100)
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.8 & (depthfilled >= 14 & depthfilled <= 60)),aes(x=block,y=value,colour=variable)) +
geom_point(alpha=0.5) + ylim(0,0.5) + ggtitle(outroot) +
facet_grid(variable ~ .)
head(blockmelt)
head(blocksums)
is.data.frame(blocksums)
as.data.frame(blocksums)
blocksums <- as.data.frame(rollmean(blocksums,100))
blocksums <- blocksums_raw
blocksums_raw <- blocksums
blocksums <- as.data.frame(rollmean(blocksums,100))
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.8 & (depthfilled >= 14 & depthfilled <= 60)),aes(x=block,y=value,colour=variable)) +
geom_point(alpha=0.5) + ylim(0,0.5) + ggtitle(outroot) +
facet_grid(variable ~ .)
blockplot
blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
geom_line() + ylim(0,0.2) + ggtitle(outroot) +
facet_grid(variable ~ .)
blockplot
library(ggplot2)
library(reshape2)
library(splines)
#plot depth graphs windows
if(!interactive()) {
cmd_args = commandArgs(trailingOnly = T);
flagdepthsfile = cmd_args[1]
winsize = as.numeric(cmd_args[2])
} else {
flagdepthsfile <- "~/Work_Sanger/anopheles_analyses/unmapPairs/data/AB0090_C.2R.flagdepths.w1000.txt"
winsize <- 1000
}
#cnames <- c("chr","pos",
#            "mappairs","notpaired","mateunmap","faceaway","mapnotpair")
# flagdepths <- read.table(flagdepthsfile)
# colnames(flagdepths) <- cnames
# flagdepths$block <- ceiling(flagdepths$pos/winsize) * winsize
# blocksums_a <- aggregate(. ~ block,
#                        data=flagdepths[,c("block","mappairs","notpaired","mateunmap","faceaway","mapnotpair")],
#                        FUN=sum)
# blocksums <- blocksums_a
#read blocksums from pre-calc'd file
cnames <- c("chr","block","pcfilled",
"mappairs","notpaired","mateunmap","faceaway","mapnotpair")
blocksums <- read.table(flagdepthsfile)
colnames(blocksums) <- cnames
blocksums <- cbind(blocksums[,c("block","pcfilled","mappairs")],
blocksums[,c("notpaired","mateunmap","faceaway","mapnotpair")]/blocksums$mappairs)
blocksums$depthfilled <- round(blocksums$mappairs / (blocksums$pcfilled * winsize))
#blocksums <- blocksums_raw
blocksums_raw <- blocksums
blocksums <- as.data.frame(rollmean(blocksums,100))
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
geom_line() + ylim(0,0.2) + ggtitle(outroot) +
facet_grid(variable ~ .)
blockplot
head(blocksums)
head(blocksums_raw)
dim(blocksums_raw)
?rollmean
dim(blocksums)
dim(blocksums_raw)
dim(blocksums)
blocksums <- as.data.frame(rollmean(blocksums,100))
dim(blocksums)
head(blocksums_raw)
blocksums <- blocksums_raw
blocksums <- as.data.frame(rollmean(blocksums,100))
head(blocksums)
tail(blocksums)
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
geom_line() + ylim(0,0.2) + ggtitle(outroot) +
facet_grid(variable ~ .)
blocksums <- as.data.frame(rollmean(blocksums,100,partial=T))
tail(blocksums)
blocksums <- blocksums_raw
rollmean(blocksums,100,partial=T)
tail(rollmean(blocksums,100,partial=T))
tail(rollmean(blocksums,100,partial=T),100)
?rollapply
?mean
blocksums <- blocksums_raw
blocksums <- as.data.frame(rollapply(blocksums,100,FUN=mean,partial=T,na.rm=T))
tail(blocksums)
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
geom_line() + ylim(0,0.2) + ggtitle(outroot) +
facet_grid(variable ~ .)
blockplot
blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
geom_line() + ylim(0,0.5) + ggtitle(outroot) +
facet_grid(variable ~ .)
blockplot
ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .)
head(blocksums)
blocksums <- blocksums_raw
blocksums$pcfilled < 0.8
sum(blocksums$pcfilled < 0.8)
head(blocksums[blocksums$pcfilled < 0.8,])
head(blocksums[blocksums$pcfilled < 0.8,3:6])
head(blocksums[blocksums$pcfilled < 0.8,4:7])
blocksums[blocksums$pcfilled < 0.8,4:7] <- NA
blocksums <- as.data.frame(rollapply(blocksums,100,FUN=mean,partial=T,na.rm=T))
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .)
blockplot
library(zoo)
blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blockplot <- ggplot(blockmelt),aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blocksums <- blocksums_raw
blocksums[blocksums$pcfilled < 0.8,4:7] <- NA
blocksums <- as.data.frame(rollapply(blocksums,1000,FUN=mean,partial=T,na.rm=T))
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
#blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blocksums <- blocksums_raw
blocksums[blocksums$pcfilled < 0.8,4:7] <- NA
blocksums_loc <- as.data.frame(rollapply(blocksums,100,FUN=mean,partial=T,na.rm=T))
blocksums_region <- as.data.frame(rollapply(blocksums,1000,FUN=mean,partial=T,na.rm=T))
head(blocksums(loc))
head(blocksums_loc)
head(blocksums_region)
head(blocksums_region[4:7])
head(blocksums_loc[,4:7]/blocksums_region[,4:7])
blocksums <- blocksums_raw
blocksums[blocksums$pcfilled < 0.8,4:7] <- NA
blocksums_loc <- as.data.frame(rollapply(blocksums,100,FUN=mean,partial=T,na.rm=T))
blocksums_region <- as.data.frame(rollapply(blocksums,1000,FUN=mean,partial=T,na.rm=T))
dim(blocksums_loc)
dim(blocksums_region)
dim(blocksums)
dim(as.data.frame(rollapply(blocksums,100,FUN=mean,partial=T,na.rm=T)))
View(blocksums)
View(blocksums)
dim(as.data.frame(rollapply(blocksums,100,FUN=mean,partial=F,na.rm=T)))
blocksums[,4:7] <- blocksums_loc[,4:7]/blocksums_region[,4:7]
head(blocksums)
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
#blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blocksums <- blocksums_raw
blocksums[blocksums$pcfilled < 0.8,4:7] <- NA
blocksums_loc <- as.data.frame(rollapply(blocksums,1000,FUN=mean,partial=T,na.rm=T))
blocksums_region <- as.data.frame(rollapply(blocksums,10000,FUN=mean,partial=T,na.rm=T))
blocksums[,4:7] <- blocksums_loc[,4:7]/blocksums_region[,4:7]
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
#blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blocksums <- blocksums_raw
blocksums[blocksums$pcfilled < 0.8,4:7] <- NA
blocksums_loc <- as.data.frame(rollapply(blocksums,100,FUN=mean,partial=T,na.rm=T))
blocksums_region <- as.data.frame(rollapply(blocksums,10000,FUN=mean,partial=T,na.rm=T))
blocksums_rel[,4:7] <- blocksums_loc[,4:7]/blocksums_region[,4:7]
blockmelt <- melt(blocksums_rel,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
#blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blocksums_rel <- blocksums
blocksums_rel[,4:7] <- blocksums_loc[,4:7]/blocksums_region[,4:7]
blockmelt <- melt(blocksums_rel,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
#blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(paste(outroot," [",locsize,"/",winsize,"]",sep="") +
facet_grid(variable ~ .,scales="free_y")
blockplot
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(paste(outroot," [",locsize,"/",winsize,"]",sep="")) +
facet_grid(variable ~ .,scales="free_y")
blockplot
locsize <-  10000
regsize <- 100000
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(paste(outroot," [",locsize,"/",winsize,"]",sep="")) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(paste(outroot," [",(locsize/1000),"/",(regsize/1000),"]",sep="")) +
facet_grid(variable ~ .,scales="free_y")
blockplot
?mean
save.pkg.list <- installed.packages()[is.na(installed.packages()[,"priority"]), 1]
is.na(installed.packages()[,"priority"])
installed.packages()
installed.packages()[,"priority"]
installed.packages()[,"Priority"]
save.pkg.list <- installed.packages()[is.na(installed.packages()[,"Priority"]), 1]
save.pkg.list
save(save.pkg.list,file="~/Google Drive/misc/macports_150504/pkglist.Rdata")
library(raster)
library(maptools)
library(rgdal)
library(RColorBrewer)
library (ggplot2)
library(rgeos)
#library(animation)
library(rgeos)
library(myGeoFuncs)
codesTab <- as.data.frame(ccodes())
codesTab
africa.c <- as.vector(subset(codesTab,NAME %in% african.countries))
codesTab <- as.data.frame(ccodes())
codes <- as.character(unlist(subset(codesTab,NAME %in% african.countries,ISO3)))
africa.c <- as.vector(subset(codesTab,NAME %in% african.countries))
calt <- list()
cshapes <- list()
for (code in codes) {
#  write(code,stderr())
#country region data:
cshape<-getData("GADM", country=code, level=1)
#get midpoint of climate data
coords <- coordinates(cshape)
max <- apply(coords,2,FUN=max)
min <- apply(coords,2,FUN=min)
mid <- min + ((max-min)/2)
mid
altdata<-getData("worldclim", var="alt", res=0.5, lon=mid[1], lat=mid[2])
extract(altdata,cshape,fun=mean, na.rm=T)
calt[code] <- altdata
cshapes[code] <- cshape
}
codes
codesTab
subset(codesTab,NAME %in% african.countries,ISO3)
subset(codesTab,NAME %in% african.countries)
african.countries
malpe<-extract(malp,malb,fun=mean, na.rm=T)
malp<-getData("worldclim", var="prec", res=0.5, lon=35, lat=-14)
malpe<-extract(malp,malb,fun=mean, na.rm=T)
?getData
?extract
malp
setwd("~/Scratch/gits/pfdisco/reports/150729_3-way_cf_noMultiallelics/")
library(ggplot2)
library(knitr)
library(reshape2)
depths <- read.table("cfNucmerDiscoHaplo_150729_leftAlignGATKSPLIT.DEPTH.txt",stringsAsFactors = F,sep='\t',header=T)
# colnames(values) <- c("chrom","start","end",
#                       "covered1","covered2","covered3",
#                       "d1",  "d2",  "d3",
#                       "dcov1",  "dcov2",	"dcov3",
#                       "SNPS",	"Smatch0",	"Smatch1",	"Spriv",
#                       "INDELS",	"Imatch",	"Imiss",	"Ipriv")
depths$block <- depths$end - ((depths$end-depths$start)/2)
depths$meandepth <- (depths$d2+depths$d3)/2
depths$block <- c(1:30) #nb, 10kb blocks
nuccfs <- read.table("cfNucmerDiscoHaplo_150729_leftAlignGATKSPLIT.txt",sep="\t",stringsAsFactors = F)
colnames(nuccfs) <- c("file","chr","pos","type","concordance","matched","quality","length","alleles","complexity",
"STR","period","exponent","STRlength",
"STRcomplexity","Apc","Tpc","Cpc","Gpc" )
matchlevels <- c("",     "NUCMER","DISCO","HAPLO","NUCMER,DISCO","NUCMER,HAPLO","DISCO,HAPLO","NUCMER,DISCO,HAPLO")
colours <-     c("black","green", "red",  "blue", "yellow",      "cyan",        "magenta",     "white")
names(colours) <- matchlevels
nuccfs$matched <- factor(nuccfs$matched,levels = matchlevels)
nuccfs$polyA = (nuccfs$Apc==1 | nuccfs$Tpc==1)
nuccfs$TA = (nuccfs$Apc==0.5 & nuccfs$Tpc==0.5)
nuccfs$STRtype=""
nuccfs$STRtype <- factor(nuccfs$STRtype,levels=c("","STR","TA","polyA"))
nuccfs[nuccfs$STR != "NULL",]$STRtype = "STR"
nuccfs[nuccfs$TA,]$STRtype = "TA"
nuccfs[nuccfs$polyA,]$STRtype = "polyA"
nuccfs$quality <- as.numeric(nuccfs$quality)
nuccfs <- nuccfs[which(nuccfs$concordance!="MISMATCH"),]
ctable <- as.data.frame(table(subset(nuccfs,concordance != "MATCH0",c(matched,type,STRtype))))
ctable$x <- c(0,1,2,3,1,1,2,4)
ctable$y <- c(0,1,2,3,2,3,3,4)
ctable$x <- factor(ctable$x,labels=c("none","NUCMER","DISCO","HAPLO","ALL"))
ctable$y <- factor(ctable$y,labels=c("none","NUCMER","DISCO","HAPLO","ALL"))
ggplot(subset(ctable,x!="none"),aes(x,y,fill=Freq)) +
geom_tile() + scale_fill_gradient(low="white",high="red") +
stat_bin2d(geom="text", aes(label=Freq)) +
facet_grid(type ~ STRtype) + ggtitle("concordance, aligned indels")
ggplot(subset(ctable,x!="none"),aes(x,y,fill=Freq)) +
geom_tile() + scale_fill_gradient(low="white",high="red") +
stat_bin2d(geom="text", aes(label=Freq)) +
facet_grid(type ~ .) + ggtitle("concordance, aligned indels")
ggplot(subset(ctable,x!="none"),aes(x,y,fill=Freq)) +
geom_tile() + scale_fill_gradient(low="white",high="red") +
stat_bin2d(geom="text", aes(label=Freq)) +
facet_grid(type ~ .) + ggtitle("concordance, aligned indels")
ggplot(subset(ctable,x!="none"),aes(x,y,fill=Freq)) +
geom_tile() + scale_fill_gradient(low="white",high="red") +
stat_bin2d(geom="text", aes(label=Freq)) +
facet_grid(type ~ STRtype) + ggtitle("concordance, aligned indels")
ctable
ctable <- as.data.frame(table(subset(nuccfs,concordance != "MATCH0",c(matched,type))))
ctable$x <- c(0,1,2,3,1,1,2,4)
ctable$y <- c(0,1,2,3,2,3,3,4)
ctable$x <- factor(ctable$x,labels=c("none","NUCMER","DISCO","HAPLO","ALL"))
ctable$y <- factor(ctable$y,labels=c("none","NUCMER","DISCO","HAPLO","ALL"))
ggplot(subset(ctable,x!="none"),aes(x,y,fill=Freq)) +
geom_tile() + scale_fill_gradient(low="white",high="red") +
stat_bin2d(geom="text", aes(label=Freq)) +
facet_grid(type ~ .) + ggtitle("concordance, aligned indels")
