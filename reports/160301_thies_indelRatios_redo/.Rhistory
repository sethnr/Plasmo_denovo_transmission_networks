sigcol <- scale_color_manual(values=c("white","red"))
#ggplot(distances,aes(x=Var1,y=Var2,fill=ratio,label=ratio)) + geom_tile(size=1) + geom_text(aes(colour=ratioP < 0.01),size=4) + sigcol + vxlab
ggplot(subset(distances,related=="RELATED"),aes(x=Var1,y=Var2,fill=ratio,label=ratio_t)) + geom_tile(size=1) +
geom_text(aes(colour=ratioP < 0.01),size=4) +
geom_text(data=subset(distances,related=="UNRELATED"),size=4) + sigcol + vxlab
distances
distances$ratio==NaN
distances$ratio
is.nan(distances$ratio)
distances$ratio[is.nan(distances$ratio)] <- NA
ggplot(subset(distances,related=="RELATED"),aes(x=Var1,y=Var2,fill=ratio,label=ratio_t)) + geom_tile(size=1) +
geom_text(aes(colour=ratioP < 0.01),size=4) +
geom_text(data=subset(distances,related=="UNRELATED"),size=4) + sigcol + vxlab
knit("thies_indel_ratios.Rmd")
read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.het.HETCOUNTS")
read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.het.HETCOUNTS",header=T)
hets <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.het.HETCOUNTS",header=T)
rownames(hets) <- hets$INDV
hets[tree_order,]
hets <- hets[tree_order,]
colnames(hets)[6] <- "Hets"
ggplot(hets,aes(x=indv,y=Hets)) + geom_bar()
ggplot(hets,aes(x=INDV,y=Hets)) + geom_bar()
ggplot(hets,aes(x=INDV,y=Hets)) + geom_bar(stat=identity)
ggplot(hets,aes(x=INDV,y=Hets))
ggplot(hets,aes(x=INDV,y=Hets)) + geom_bar(stat="identity")
ggplot(hets,aes(y=INDV,x=Hets)) + geom_bar(stat="identity")
ggplot(hets,aes(x=INDV,y=Hets)) + geom_bar(stat="identity") + coord_flip()
hets <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sjungs
sings
head(sings)
subset(sings,SINGLETON.DOUBLETON="S")
head(subset(sings,SINGLETON.DOUBLETON="S"))
head(subset(sings,SINGLETON.DOUBLETON=="S"))
sings <- subset(sings,SINGLETON.DOUBLETON=="S")
sings$vartype<-"SNP"
sings$vartype[len(sings$ALLELE)>1]<-"INDEL"
sings$vartype[length(sings$ALLELE)>1]<-"INDEL"
table(sings[,c("INDV","vartype")])
length(sings$ALLELE)
sings$vartype[apply(sings$ALLELE,1,FUN=length)>1]<-"INDEL"
apply(sings$ALLELE,1,FUN=length)
strlen(sings$ALLELE)
nchar(sings$ALLELE)
library(stringr)
str_length(sings$allele)
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
#sings <- subset(sings,SINGLETON.DOUBLETON=="S")
sings$vartype<-"SNP"
table(sings[,c("INDV")])
sings <- sings[tree_order,]
table(sings[,c("INDV")])
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sings <- sings[tree_order,]
table(sings[,c("INDV")])
sings
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sings
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sings <- sings[tree_order,]
rownames(sings) <- sings$INDV
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
rownames(sings) <- sings$INDV
sings <- sings[tree_order,]
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
rownames(sings) <- sings$INDV
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sings <- sings[tree_order,]
table(sings[,c("INDV")])
as.table(table(sings[,c("INDV")]))
as.table(table(sings[,c("INDV")]))
sings<-table(sings[,c("INDV")])
sings
names(sings)
sings[tree_order]
tree_order
sings[tree_order,]
sings[tree_order]
sings
sings<-table(sings[,"INDV"])
sings<-table(sings$INDV)
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
#sings <- subset(sings,SINGLETON.DOUBLETON=="S")
#sings$vartype<-"SNP"
#sings$vartype[apply(sings$ALLELE,1,FUN=length)>1]<-"INDEL"
#table(sings[,c("INDV","vartype")])
sings<-table(sings[,c("INDV")])
sings
sings[tree_order,]
sings[tree_order]
sings <- sings[tree_order]
hets$sings <- sings
sings<-table(sings[,c("INDV")])
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sings<-table(sings[,c("INDV")])
hets <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.het.HETCOUNTS",header=T)
colnames(hets)[6] <- "Hets"
rownames(hets) <- hets$INDV
hets <- hets[tree_order,]
ggplot(hets,aes(x=INDV,y=Hets)) + geom_bar(stat="identity") + coord_flip()
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sings<-table(sings[,c("INDV")])
sings <- sings[tree_order]
hets$sings <- sings
melt(hets[,c("INDV","hets","sings")])
hets
hets <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.het.HETCOUNTS",header=T)
colnames(hets)[6] <- "hets"
rownames(hets) <- hets$INDV
hets <- hets[tree_order,]
ggplot(hets,aes(x=INDV,y=Hets)) + geom_bar(stat="identity") + coord_flip()
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
ggplot(hets,aes(x=INDV,y=hets)) + geom_bar(stat="identity") + coord_flip()
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sings<-table(sings[,c("INDV")])
sings <- sings[tree_order]
hets$sings <- sings
melt(hets[,c("INDV","hets","sings")])
cftab <- melt(hets[,c("INDV","hets","sings")])
cftab <- melt(hets[,c("INDV","hets","sings")])
hets$sings <- sings
cftab <- melt(hets[,c("INDV","hets","sings")])
hets <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.het.HETCOUNTS",header=T)
colnames(hets)[6] <- "hets"
rownames(hets) <- hets$INDV
hets <- hets[tree_order,]
ggplot(hets,aes(x=INDV,y=hets)) + geom_bar(stat="identity") + coord_flip()
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
#sings <- subset(sings,SINGLETON.DOUBLETON=="S")
#sings$vartype<-"SNP"
#sings$vartype[apply(sings$ALLELE,1,FUN=length)>1]<-"INDEL"
#table(sings[,c("INDV","vartype")])
sings<-table(sings[,c("INDV")])
sings <- sings[tree_order]
hets$sings <- sings
cftab <- melt(hets[,c("INDV","hets","sings")])
hets[,c("INDV","hets","sings")]
cftab
hets[,c("INDV","hets","sings")]
ggplot(cftab,aes(x=INDV,y=Hets)) + geom_bar(stat="identity") + coord_flip() + facet_grid(variable ~ .)
ggplot(cftab,aes(x=INDV,y=value)) + geom_bar(stat="identity") + coord_flip() + facet_grid(variable ~ .)
ggplot(cftab,aes(x=INDV,y=value)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable)
ggplot(cftab,aes(x=INDV,y=value)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_x")
ggplot(cftab,aes(x=INDV,y=value)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y")
hets$cluster <- clades
cftab <- melt(hets[,c("INDV","cluster","hets","sings")],id_vars=c("INDV","cluster"))
cftab <- melt(hets[,c("INDV","cluster","hets","sings")],id.vars=c("INDV","cluster"))
ggplot(cftab,aes(x=INDV,y=value)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y")
ggplot(cftab,aes(x=INDV,y=value,fill=clades)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y")
hets$clade <- clades
cftab <- melt(hets[,c("INDV","clade","hets","sings")],id.vars=c("INDV","clade"))
ggplot(cftab,aes(x=INDV,y=value,fill=clade)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y")
clades
cftab
hets$INDV <- factor(hets$INDV,levels = tree_order)
cftab <- melt(hets[,c("INDV","clade","hets","sings")],id.vars=c("INDV","clade"))
ggplot(cftab,aes(x=INDV,y=value,fill=clade)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y")
hets$INDV <- factor(hets$INDV,levels = rev(tree_order))
cftab <- melt(hets[,c("INDV","clade","hets","sings")],id.vars=c("INDV","clade"))
ggplot(cftab,aes(x=INDV,y=value,fill=clade)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y")
ggplot(cftab,aes(x=INDV,y=value,fill=clade)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y") + scale_fill_manual(values=c("blue","green","red"))
hets$clade <- as.factor(clades)
ggplot(cftab,aes(x=INDV,y=value,fill=clade)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y") + scale_fill_manual(values=c("blue","green","red"))
hets$clade <- as.factor(clades)
hets$INDV <- factor(hets$INDV,levels = rev(tree_order))
cftab <- melt(hets[,c("INDV","clade","hets","sings")],id.vars=c("INDV","clade"))
ggplot(cftab,aes(x=INDV,y=value,fill=clade)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y") + scale_fill_manual(values=c("blue","green","red"))
ggplot(cftab,aes(x=INDV,y=value,fill=clade)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y") + scale_fill_manual(values=c("red","blue","green"))
ggplot(cftab,aes(x=INDV,y=value,fill=clade)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y") + scale_fill_manual(values=c("red","blue","green"),legend="none")
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sings <- subset(sings,SINGLETON.DOUBLETON=="D")
sings<-table(sings[,c("INDV")])
sings <- sings[tree_order]
hets$sings <- sings
hets$clade <- as.factor(clades)
hets$INDV <- factor(hets$INDV,levels = rev(tree_order))
cftab <- melt(hets[,c("INDV","clade","hets","sings")],id.vars=c("INDV","clade"))
ggplot(cftab,aes(x=INDV,y=value,fill=clade)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y") + scale_fill_manual(values=c("red","blue","green"))
knit("thies_indel_ratios.Rmd")
setwd("../160226_seqTrackThies/")
knit("seqTrackThies.Rmd")
igINDEL <- as.igraph(res1INDEL)
V(igINDEL)$name <- name1
V(igINDEL)$label.cex <- 1
plot(igINDEL,main="INDELs",vertex.size=25,)
V(igINDEL)$label.cex <- 2
plot(igINDEL,main="INDELs",vertex.size=25,)
V(igINDEL)$label.cex <- 0.5
plot(igINDEL,main="INDELs",vertex.size=25,)
V(igINDEL)$label.cex <- 0.6
plot(igINDEL,main="INDELs",vertex.size=25,)
knit("seqTrackThies.Rmd")
knit("seqTrackThies.Rmd")
knit("seqTrackThies.Rmd")
distances
View(distances[,c("Var1","Var2","ratio_t")]
)\c
View(distances[,c("Var1","Var2","ratio_t")])
View(subset(distances,RELATED=="RELATED")[,c("Var1","Var2","ratio_t")])
View(subset(distances,related=="RELATED")[,c("Var1","Var2","ratio_t")])
View(subset(distances,related=="RELATED" && clade1==3)[,c("Var1","Var2","ratio_t")])
View(subset(distances,related=="RELATED" & clade1==3)[,c("Var1","Var2","ratio_t")])
?seqtrack
?seqTrack
V(igINDEL)$colour
V(igINDEL)
igINDEL
V(igINDEL)$color
brewer.pal(5, "RDBL")
library(brewer)
library(RColorBrewer)
brewer.pal(5, "RDBL")
brewer.pal(5, "RdBl")
brewer.pal(5, "RdBu")
brewer.pal(7, "RdBu")
cols <- brewer.pal(7, "RdBu")
V(igSNP)$name
meta$year
year1 <- meta$year[clust$clust$membership==1]
year2 <- meta$year[clust$clust$membership==2]
year3 <- meta$year[clust$clust$membership==3]
year1
factor(year1)
as.numeric(factor(year1))
year1-2000
(year1-min(year1))-2000
year1-min(year1)
year1-min(year1)+1
V(igINDEL)$color <- cols[year1-min(year1)+1]
V(igINDEL)$color
V(igINDEL)$label.cex <- ts
plot(igINDEL,main="INDELs",vertex.size=25,)
cols <- brewer.pal(7, "BuRd")
cols <- rev(brewer.pal(7, "RdBu") )
ts=1 #textsize
ig <- as.igraph(res1)
V(ig)$name <- name1
V(ig)$color <- cols[year1-min(year1)+1]
V(ig)$label.cex <- ts
plot(ig,main="all vars",vertex.size=25)
igSNP <- as.igraph(res1SNP)
V(igSNP)$name <- name1
V(igSNP)$color <- cols[year1-min(year1)+1]
V(igSNP)$label.cex <- ts
plot(igSNP,main="SNPs",vertex.size=25)
igINDEL <- as.igraph(res1INDEL)
V(igINDEL)$name <- name1
V(igINDEL)$color <- cols[year1-min(year1)+1]
V(igINDEL)$label.cex <- ts
plot(igINDEL,main="INDELs",vertex.size=25,)
cols <- rev(brewer.pal(7, "PuBu") )
ts=1 #textsize
ig <- as.igraph(res1)
V(ig)$name <- name1
V(ig)$color <- cols[year1-min(year1)+1]
V(ig)$label.cex <- ts
plot(ig,main="all vars",vertex.size=25)
igSNP <- as.igraph(res1SNP)
V(igSNP)$name <- name1
V(igSNP)$color <- cols[year1-min(year1)+1]
V(igSNP)$label.cex <- ts
plot(igSNP,main="SNPs",vertex.size=25)
igINDEL <- as.igraph(res1INDEL)
V(igINDEL)$name <- name1
V(igINDEL)$color <- cols[year1-min(year1)+1]
V(igINDEL)$label.cex <- ts
plot(igINDEL,main="INDELs",vertex.size=25,)
cols <- rev(brewer.pal(7, "BuPu") )
ts=1 #textsize
ig <- as.igraph(res1)
V(ig)$name <- name1
V(ig)$color <- cols[year1-min(year1)+1]
V(ig)$label.cex <- ts
plot(ig,main="all vars",vertex.size=25)
cols <- rev(brewer.pal(7, "PuRd") )
ts=1 #textsize
ig <- as.igraph(res1)
V(ig)$name <- name1
V(ig)$color <- cols[year1-min(year1)+1]
V(ig)$label.cex <- ts
plot(ig,main="all vars",vertex.size=25)
cols <- brewer.pal(7, "PuRd")
ts=1 #textsize
ig <- as.igraph(res1)
V(ig)$name <- name1
V(ig)$color <- cols[year1-min(year1)+1]
V(ig)$label.cex <- ts
plot(ig,main="all vars",vertex.size=25)
igSNP <- as.igraph(res1SNP)
V(igSNP)$name <- name1
V(igSNP)$color <- cols[year1-min(year1)+1]
V(igSNP)$label.cex <- ts
plot(igSNP,main="SNPs",vertex.size=25)
igINDEL <- as.igraph(res1INDEL)
V(igINDEL)$name <- name1
V(igINDEL)$color <- cols[year1-min(year1)+1]
V(igINDEL)$label.cex <- ts
plot(igINDEL,main="INDELs",vertex.size=25,)
knit("seqTrackThies.Rmd")
cols <- rev(brewer.pal(7, "RdBu") )
ts=1 #textsize
ig <- as.igraph(res1)
V(ig)$name <- name1
V(ig)$color <- cols[year1-min(year1)+1]
V(ig)$label.cex <- ts
plot(ig,main="all vars",vertex.size=25)
igSNP <- as.igraph(res1SNP)
V(igSNP)$name <- name1
V(igSNP)$color <- cols[year1-min(year1)+1]
V(igSNP)$label.cex <- ts
plot(igSNP,main="SNPs",vertex.size=25)
igINDEL <- as.igraph(res1INDEL)
V(igINDEL)$name <- name1
V(igINDEL)$color <- cols[year1-min(year1)+1]
V(igINDEL)$label.cex <- ts
plot(igINDEL,main="INDELs",vertex.size=25,)
knit("seqTrackThies.Rmd")
getwd()
setwd("../160301_thies_indelRatios_redo/")
library(ggplot2)
library(reshape2)
library(knitr)
```{r setup}
opts_chunk$set(fig.width=10, fig.height=9)
opts_chunk$set(dev=c('png'))
```
```{r}
reorder <- function(M,new_order) {
M[lower.tri(M)] = t(M)[lower.tri(M)]
M <- M[new_order,new_order]
M[lower.tri(M)] <- NA
M
}
sym <- function(M) {
M[lower.tri(M)] = t(M)[lower.tri(M)]
M
}
ggcolour <- function(n) {
hues = seq(15, 375, length=n+1)
hcl(h=hues, l=65, c=100)[1:n]
}
tree_order <- c(
"Th166.12", "Th245.13", "Th211.13" ,"Th246.13", "Th092.13" ,
"Th086.07", "Th106.11", "Th117.11", "Th134.11", "Th106.09", "Th074.13", "Th162.12", "Th132.11","Th230.12","Th196.12",
"Th061.13", "Th095.13","Th068.12"
)
clades <- c(
rep(2,5),
rep(3,10),
rep(1,3))
names(clades)<-tree_order
clades
```
```{r}
INDEL_dist <- read.table("Thies_all_manual.PASS.Cls.miss0.5.LMRG.HAP.INDEL.recode.vcf.dist.tab.txt",header=T,row.names=1,sep="\t")
SNP_dist <- read.table("Thies_all_manual.PASS.Cls.miss0.5.LMRG.HAP.SNP.recode.vcf.dist.tab.txt",header=T,row.names=1,sep="\t")
total_dist <- read.table("Thies_all_manual.PASS.Cls.miss0.5.LMRG.HAP.vcf.dist.tab.txt",header=T,row.names=1,sep="\t")
INDEL_dist <- reorder(INDEL_dist,tree_order)
SNP_dist <- reorder(SNP_dist,tree_order)
total_dist <- reorder(total_dist,tree_order)
discord_dist <- reorder(discord_dist,tree_order)
distances <- merge(
merge(
melt(as.matrix(INDEL_dist),value.name ="indel"),
melt(as.matrix(SNP_dist),value.name ="snp"),
by=c("Var1","Var2")
),
melt(as.matrix(total_dist),value.name ="total"),
by=c("Var1","Var2")
)
distances <- distances[!is.na(distances$total),]
distances$clade1 <- clades[distances$Var1]
distances$clade2 <- clades[distances$Var2]
distances$clades <- paste(clades[distances$Var1],clades[distances$Var2])
distances$interval_yrs <- abs(as.numeric(substr(as.character(distances$Var1),7,8)) - as.numeric(substr(as.character(distances$Var2),7,8)))
#distances$related <- distances$total < 10000
distances$related[distances$total >= 10000] <- "UNRELATED"
distances$related[distances$total < 10000] <- "RELATED"
distances$IBD <- distances$total < 2100
distances$ratio <- round(distances$indel/distances$snp,2)
distances$logratio <- log2(distances$ratio)
distances$Var1 <- factor(distances$Var1,levels=rev(tree_order))
distances$Var2 <- factor(distances$Var2,levels=rev(tree_order))
distances$ratio_t <- paste(round(distances$snp/distances$indel),1,sep=":")
distances$ratio_t[is.na(distances$ratio)] <- NA
snpRatioLM <- coef(lm(indel ~ snp, data = subset(distances,related=="UNRELATED")))
unrelatedLM <- geom_abline(intercept=snpRatioLM[[1]],slope=snpRatioLM[[2]])
#distances[as.numeric(distances$Var1) <= as.numeric(distances$Var2),]
#flip all to top half
#distances[as.numeric(distances$Var1) > as.numeric(distances$Var2),c("Var1","Var2")] <- distances[as.numeric(distances$Var1) > as.numeric(distances$Var2),c("Var2","Var1")]
```
```{r}
distances$ratioP <- NA
ID_unrelated <- c(sum(distances$indel[distances$related=="UNRELATED"]),sum(distances$snp[distances$related=="UNRELATED"]))
ID_related <- c(sum(distances$indel[distances$related=="RELATED"]),sum(distances$snp[distances$related=="RELATED"]))
tab <- cbind(ID_unrelated,ID_related)
colnames(tab)<-c("unrelated","related"); rownames(tab) <- c("indel","snp")
tab
fisher.test(tab)
for(i in 1:dim(distances)[[1]]){
t <- fisher.test(t(rbind(ID_unrelated,distances[i,c("indel","snp")])))
distances[i,"ratioP"] <- t$p.value
}
distances$ratio[is.nan(distances$ratio)] <- NA
#distances
```
```{r}
relcol <- scale_color_manual(values=c("white","black"))
vxlab <- theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(distances,aes(x=Var1,y=Var2,fill=total,label=total,colour=related)) + geom_tile() + scale_fill_gradient(trans="log") + geom_text(size=3) + relcol + vxlab
ggplot(distances,aes(x=Var1,y=Var2,fill=interval_yrs)) + geom_tile() + vxlab
sigcol <- scale_color_manual(values=c("white","red"))
#ggplot(distances,aes(x=Var1,y=Var2,fill=ratio,label=ratio)) + geom_tile(size=1) + geom_text(aes(colour=ratioP < 0.01),size=4) + sigcol + vxlab
ggplot(subset(distances,related=="RELATED"),aes(x=Var1,y=Var2,fill=ratio,label=ratio_t)) + geom_tile(size=1) +
geom_text(aes(colour=ratioP < 0.01),size=4) +
geom_text(data=subset(distances,related=="UNRELATED"),size=4) + sigcol + vxlab
# ggplot(subset(distances,related=="RELATED"),aes(x=Var1,y=Var2,fill=total,label=ratio_t)) + geom_tile(size=1) +
#   geom_text(aes(colour=ratioP < 0.01),size=4) +
#   sigcol + vxlab
ggplot(subset(distances,related=="RELATED"),aes(x=Var1,y=Var2,fill=interval_yrs,label=ratio_t)) + geom_tile(size=1) +
geom_text(aes(colour=ratioP < 0.01),size=4) +
sigcol + vxlab
```
```{r}
hets <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.het.HETCOUNTS",header=T)
colnames(hets)[6] <- "hets"
rownames(hets) <- hets$INDV
hets <- hets[tree_order,]
ggplot(hets,aes(x=INDV,y=hets)) + geom_bar(stat="identity") + coord_flip()
sings <- read.table("Thies_all_manual_2.PASS.Cls.miss0.5.LMRG.singletons",header=T)
sings <- subset(sings,SINGLETON.DOUBLETON=="D")
#sings$vartype<-"SNP"
#sings$vartype[apply(sings$ALLELE,1,FUN=length)>1]<-"INDEL"
#table(sings[,c("INDV","vartype")])
sings<-table(sings[,c("INDV")])
sings <- sings[tree_order]
hets$sings <- sings
hets$clade <- as.factor(clades)
hets$INDV <- factor(hets$INDV,levels = rev(tree_order))
cftab <- melt(hets[,c("INDV","clade","hets","sings")],id.vars=c("INDV","clade"))
ggplot(cftab,aes(x=INDV,y=value,fill=clade)) + geom_bar(stat="identity") + coord_flip() + facet_grid(. ~ variable,scales ="free_y") + scale_fill_manual(values=c("red","blue","green"))
distances
melt(distances[,c("snp","indel","total")])
melt(distances[,c("snp","indel","total")],id.vars=c("total"))
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point()
distcfs <- melt(distances[,c("snp","indel","total")],id.vars=c("total"))
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point()
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + scale_y_log10() + scale_x_log10()
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + geom_smooth(method = "lm", se = FALSE)+ scale_y_log10() + scale_x_log10()
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + scale_y_log10() + scale_x_log10()
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + geom_smooth(method = "lm", se = FALSE)+ xlim(0,1000)+ylim(0,1000)
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + geom_smooth(method = "lm", se = FALSE)+ xlim(0,1000)+ylim(0,1000)
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + scale_y_log10() + scale_x_log10()
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + geom_smooth(se = FALSE)+ xlim(0,1000)+ylim(0,1000)
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + geom_smooth(se = FALSE)+ xlim(0,750)+ylim(0,750)
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() +
geom_smooth(se = FALSE) +
geom_smooth(method="lm",se = FALSE,colour="grey")+
xlim(0,750)+ylim(0,750)
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + scale_y_log10() + scale_x_log10()
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + geom_smooth(method = "lm", se = FALSE)+ xlim(0,1000)+ylim(0,1000)
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() +
geom_smooth(se = FALSE) +
geom_smooth(method="lm",se = FALSE,colour="grey")+
xlim(0,750)+ylim(0,750)
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + geom_smooth(method = "lm", se = FALSE)+ xlim(0,1000)+ylim(0,1000)
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() +
geom_smooth(se = FALSE) +
geom_smooth(method="lm",se = FALSE,colour="grey")+
xlim(0,750)+ylim(0,750)
head(distances)
distances$ratioP<0.05
distances$ratPSig <- distances$ratioP<0.05
distances$ratPSig <- distances$ratioP<0.01
distcfs <- melt(distances[,c("snp","indel","total","ratPSig")],id.vars=c("total","ratPSig"))
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable,shape=ratPSig)) + geom_point() +
geom_smooth(se = FALSE) +
geom_smooth(method="lm",se = FALSE,colour="grey")+
xlim(0,750)+ylim(0,750)
knit("thies_indel_ratios.Rmd")
maxv = 750
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable,shape=ratPSig)) + geom_point() +
geom_smooth(se = FALSE) +
geom_smooth(method="lm",se = FALSE,colour="grey")+
xlim(0,maxv)+ylim(0,maxv)
distances$ratPSig <- distances$ratioP<0.01
distcfs <- melt(distances[,c("snp","indel","total","ratPSig")],id.vars=c("total","ratPSig"))
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + scale_y_log10() + scale_x_log10()
#ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable)) + geom_point() + geom_smooth(method = "lm", se = FALSE)+ xlim(0,1000)+ylim(0,1000)
maxv = 750
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable,shape=ratPSig)) + geom_point() +
geom_smooth(se = FALSE) +
geom_smooth(method="lm",se = FALSE,colour="grey")+
xlim(0,maxv)+ylim(0,maxv)
maxv = 400
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable,shape=ratPSig)) + geom_point() +
geom_smooth(se = FALSE) +
geom_smooth(method="lm",se = FALSE,colour="grey")+
xlim(0,maxv)+ylim(0,maxv)
maxv = 750
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable,shape=ratPSig)) + geom_point() +
geom_smooth(se = FALSE) +
geom_smooth(method="lm",se = FALSE,colour="grey")+
xlim(0,maxv)+ylim(0,maxv)
maxv = 400
ggplot(distcfs,aes(x=total,y=value,colour=variable,group=variable,shape=ratPSig)) + geom_point() +
geom_smooth(se = FALSE) +
geom_smooth(method="lm",se = FALSE,colour="grey")+
xlim(0,maxv)+ylim(0,maxv)
