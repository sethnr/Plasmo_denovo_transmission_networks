blockplot
blocksums <- blocksums_raw
blocksums[blocksums$pcfilled < 0.8,4:7] <- NA
blocksums_loc <- as.data.frame(rollapply(blocksums,100,FUN=mean,partial=T,na.rm=T))
blocksums_region <- as.data.frame(rollapply(blocksums,1000,FUN=mean,partial=T,na.rm=T))
head(blocksums(loc))
head(blocksums_loc)
head(blocksums_region)
head(blocksums_region[4:7])
head(blocksums_loc[,4:7]/blocksums_region[,4:7])
blocksums <- blocksums_raw
blocksums[blocksums$pcfilled < 0.8,4:7] <- NA
blocksums_loc <- as.data.frame(rollapply(blocksums,100,FUN=mean,partial=T,na.rm=T))
blocksums_region <- as.data.frame(rollapply(blocksums,1000,FUN=mean,partial=T,na.rm=T))
dim(blocksums_loc)
dim(blocksums_region)
dim(blocksums)
dim(as.data.frame(rollapply(blocksums,100,FUN=mean,partial=T,na.rm=T)))
View(blocksums)
View(blocksums)
dim(as.data.frame(rollapply(blocksums,100,FUN=mean,partial=F,na.rm=T)))
blocksums[,4:7] <- blocksums_loc[,4:7]/blocksums_region[,4:7]
head(blocksums)
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
#blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blocksums <- blocksums_raw
blocksums[blocksums$pcfilled < 0.8,4:7] <- NA
blocksums_loc <- as.data.frame(rollapply(blocksums,1000,FUN=mean,partial=T,na.rm=T))
blocksums_region <- as.data.frame(rollapply(blocksums,10000,FUN=mean,partial=T,na.rm=T))
blocksums[,4:7] <- blocksums_loc[,4:7]/blocksums_region[,4:7]
blockmelt <- melt(blocksums,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
#blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blocksums <- blocksums_raw
blocksums[blocksums$pcfilled < 0.8,4:7] <- NA
blocksums_loc <- as.data.frame(rollapply(blocksums,100,FUN=mean,partial=T,na.rm=T))
blocksums_region <- as.data.frame(rollapply(blocksums,10000,FUN=mean,partial=T,na.rm=T))
blocksums_rel[,4:7] <- blocksums_loc[,4:7]/blocksums_region[,4:7]
blockmelt <- melt(blocksums_rel,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
#blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blocksums_rel <- blocksums
blocksums_rel[,4:7] <- blocksums_loc[,4:7]/blocksums_region[,4:7]
blockmelt <- melt(blocksums_rel,id.vars=c("block","pcfilled","depthfilled","mappairs"))
outroot <- gsub(".txt","",gsub(".gz","",flagdepthsfile))
#blockplot <- ggplot(subset(blockmelt,mappairs >= (20 * winsize)),aes(x=block,y=value,colour=variable)) +
#blockplot <- ggplot(subset(blockmelt,pcfilled >= 0.7 & (depthfilled >= 10 & depthfilled <= 100)),aes(x=block,y=value,colour=variable)) +
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(outroot) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(paste(outroot," [",locsize,"/",winsize,"]",sep="") +
facet_grid(variable ~ .,scales="free_y")
blockplot
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(paste(outroot," [",locsize,"/",winsize,"]",sep="")) +
facet_grid(variable ~ .,scales="free_y")
blockplot
locsize <-  10000
regsize <- 100000
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(paste(outroot," [",locsize,"/",winsize,"]",sep="")) +
facet_grid(variable ~ .,scales="free_y")
blockplot
blockplot <- ggplot(blockmelt,aes(x=block,y=value,colour=variable)) +
geom_line() + ggtitle(paste(outroot," [",(locsize/1000),"/",(regsize/1000),"]",sep="")) +
facet_grid(variable ~ .,scales="free_y")
blockplot
?mean
save.pkg.list <- installed.packages()[is.na(installed.packages()[,"priority"]), 1]
is.na(installed.packages()[,"priority"])
installed.packages()
installed.packages()[,"priority"]
installed.packages()[,"Priority"]
save.pkg.list <- installed.packages()[is.na(installed.packages()[,"Priority"]), 1]
save.pkg.list
save(save.pkg.list,file="~/Google Drive/misc/macports_150504/pkglist.Rdata")
library(raster)
library(maptools)
library(rgdal)
library(RColorBrewer)
library (ggplot2)
library(rgeos)
#library(animation)
library(rgeos)
library(myGeoFuncs)
codesTab <- as.data.frame(ccodes())
codesTab
africa.c <- as.vector(subset(codesTab,NAME %in% african.countries))
codesTab <- as.data.frame(ccodes())
codes <- as.character(unlist(subset(codesTab,NAME %in% african.countries,ISO3)))
africa.c <- as.vector(subset(codesTab,NAME %in% african.countries))
calt <- list()
cshapes <- list()
for (code in codes) {
#  write(code,stderr())
#country region data:
cshape<-getData("GADM", country=code, level=1)
#get midpoint of climate data
coords <- coordinates(cshape)
max <- apply(coords,2,FUN=max)
min <- apply(coords,2,FUN=min)
mid <- min + ((max-min)/2)
mid
altdata<-getData("worldclim", var="alt", res=0.5, lon=mid[1], lat=mid[2])
extract(altdata,cshape,fun=mean, na.rm=T)
calt[code] <- altdata
cshapes[code] <- cshape
}
codes
codesTab
subset(codesTab,NAME %in% african.countries,ISO3)
subset(codesTab,NAME %in% african.countries)
african.countries
malpe<-extract(malp,malb,fun=mean, na.rm=T)
malp<-getData("worldclim", var="prec", res=0.5, lon=35, lat=-14)
malpe<-extract(malp,malb,fun=mean, na.rm=T)
?getData
?extract
malp
g <- graph.de.bruijn(2,1)
graph.de.bruijn(2,2)
line.graph(g)
install.packages("igraph")
install.packages("stringr")
install.packages("stringr")
install.packages("igraph")
g <- graph.de.bruijn(2,1)
graph.de.bruijn(2,2)
line.graph(g)
library(igraph)
g <- graph.de.bruijn(2,1)
graph.de.bruijn(2,2)
line.graph(g)
g <- graph.de.bruijn(2,1)
g
g <- graph.de.bruijn(55)
g <- graph.de.bruijn(5,5)
g
line.graph(g)
anyNA
V(g)
E(g)
version()
session.info()
sessioninfo()
sessionInfo()
sessioninfo()
sessionInfo()
anyNA
library(igraph)
g <- graph.de.bruijn(5,5)
E(g)
line.graph(g)
plot(g)
g <- graph.de.bruijn(2,5)
plot(g)
g <- graph.de.bruijn(5,2)
plot(g)
g <- graph.de.bruijn(10,2)
plot(g)
g <- graph.de.bruijn(10,1)
plot(g)
g <- graph.de.bruijn(20,5,)
g <- graph.de.bruijn(20,5)
plot(g)
g <- graph.de.bruijn(20,2)
plot(g)
g <- graph.de.bruijn(10,2)
plot(g)
g <- graph.de.bruijn(6,2)
g <- graph.de.bruijn(6,2)
g <- graph.de.bruijn(5,2)
plot(g)
plot(g,mark.shape=0)
plot(g,mark.shape=1)
plot(g,mark.shape=0.1)
plot(g,shape="none")
plot(g,Shape="none")
plot(g,vertex.shape="none")
plot(g,edge.shape="none")
plot(g,arrow.size=0.2)
g <- graph.de.bruijn(5,10)
g <- graph.de.bruijn(5,3)
plot(g, layout=layout_with_fr)
plot(g, layout='layout_with_fr')
plot(g)
plot(g, layout=layout_with_fr, vertex.size=4,
vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5)
g<-barabasi.game(10)
plot(g, layout=layout_with_fr, vertex.size=4,
vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5)
g <- graph.de.bruijn(5,2)
plot(g)
plot(g,cex.main=0.2)
plot(g,cex.main=0.1)
plot.igraph(g,mark.shape=0)
plot.igraph(g,mark.shape=0,arrow.size=0.3)
g<-barabasi.game(10)
plot(g)
g<-barabasi.game(30)
plot(g)
?igraph
g<-erdos.renyi.game(30)
g<-erdos.renyi.game(n=20,p.or.m=p)
g<-erdos.renyi.game(n=20,p.or.m="p")
g<-erdos.renyi.game(n=20,p.or.m=T)
plot(g)
g<-erdos.renyi.game(n=20,p.or.m=F)
plot(g)
g <- graph.de.bruijn(5,2)
plot(g)
plot(g,xlim(0,10))
plot.igraph(g,mark.expand=20)
plot.igraph(g,mark.expand=30)
plot.igraph(g,mark.expand=10)
g <- graph.kautz(5,2)
plot(g,xlim(0,10))
plot(g\)
plot(g)
g <- graph.kautz(5,1)
plot(g)
read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/")
read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt")
afs <- read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t")
afs <- read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t")
afs <- read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t",row.names=1)
library(ggplot2)
ggplot(afs[1,]) + geom_dist()
ggplot(afs[1,]) + geom_density()
ggplot(t(afs),aes(x="14") + geom_density()
\c
ggplot(t(afs),aes(x="14")) + geom_density()
afs <- as.data.frame(t(afs))
ggplot(afs,aes(x="14")) + geom_density()
head(afs)
ggplot(afs,aes(x=14)) + geom_density()
colnames(afs) <- c("month","half_yr","yr")
ggplot(afs,aes(x=month)) + geom_density()
afs_small <- as.data.frame(t(read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t",row.names=1)),col.names=c("month","halfyr","yr"))
head(afs_small)
afs_small <- data.frame(t(read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t",row.names=1)),col.names=c("month","halfyr","yr"))
afs_small <- data.frame(t(read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C1.5m.L0.01mb.G36.mtp.AFs.txt",sep="\t",row.names=1)))
colnames(afs_small)<-c("mth","halfyr","yr")
afs_large <- data.frame(t(read.table("Scratch/gits/pfdisco/analyses/modelling_intraspec/qstages.C100.0m.L0.01mb.G36.mtp.AFs.txt",sep="\t",row.names=1)))
colnames(afs_large)<-c("mth","halfyr","yr")
ggplot(afs_small,aes(x="yr")) + geom_density(colour="blue") + geom_density(data=afs_large,aes(x="mth"),colour="red")
ggplot(afs_small,aes(x=yr)) + geom_density(colour="blue") + geom_density(data=afs_large,aes(x=mth),colour="red")
ggplot(afs_small,aes(x=yr)) + geom_density()
ggplot(afs_large,aes(x=mth)) + geom_density()
density(afs_large$mth)
plot(density(afs_large$mth))
plot(density(afs_large$mth),colour="red") + lines(density(afs_small$yr),colour="blue")
plot(density(afs_large$mth),col="red") + lines(density(afs_small$yr),col="blue")
plot(density(afs_small$yr),colour="blue") + lines(density(afs_large$mth),colour="red")
plot(density(afs_small$yr),col="blue") + lines(density(afs_large$mth),col="red")
plot(density(subset(afs_small,yr>0.01,yr),col="blue") + lines(density(afs_large$mth),col="red")
\c
plot(density(subset(afs_small,yr>0.01,yr)),col="blue") + lines(density(afs_large$mth),col="red")
subset(afs_small,yr>0.01,yr)
plot(density(subset(afs_small,yr>0.01,yr)),col="blue") + lines(density(afs_large$mth),col="red")
plot(density(subset(afs_small,yr>0.01,yr)),col="blue")
plot(density(subset(afs_small,yr>0.01)$yr),col="blue")
plot(density(subset(afs_small,yr>0.01)$yr),col="blue") + lines(density(subset(afs_large,mth>0.01)$mth),col="red")
plot(density(subset(afs_small,yr>=0.01)$yr),col="blue") + lines(density(subset(afs_large,mth>=0.01)$mth),col="red")
calcols <- c("ch","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable <- read.table("qDD2vr3D7.callable.blocks5k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
setwd("~/Scratch/gits/pfdisco/reports/160103_accessible_genome_comparison/")
calcols <- c("ch","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable <- read.table("qDD2vr3D7.callable.blocks5k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable$multipass=NULL
library(ggplot2)
library(knitr)
library(reshape2)
library(hexbin)
opts_chunk$set(fig.width=12, fig.height=7)
callable_haplo <- read.table("qDD2vr3D7.callable.blocks5k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.5k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
head(callable_disco)
calcols <- c("ch","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable_disco <- read.table("qDD2vr3D7.callable.blocks5k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.5k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable$multipass=NULL
head(callable)
head(callable_disco)
head(callable_disco$multipass)
is.boolean(callable_disco$multipass)
as.boolean(callable_disco$multipass)
boolean(callable_disco$multipass)
head(callable_disco[,c(1,2,3,12)])
callable_disco <- callable_disco[,c(1,2,3,12)]
callable_haplo <- callable_haplo[,c(1,2,3,12)]
colnames(callable_disco)[[4]] <- "disco"
colnames(callable_disco)[[4]] <- "haplo"
callable<-merge(callable_disco,callable_haplo)
head(callable)
calcols <- c("ch","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable_disco <- read.table("qDD2vr3D7.callable.blocks5k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.5k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable_disco <- callable_disco[,c(1,2,3,12)]
callable_haplo <- callable_haplo[,c(1,2,3,12)]
colnames(callable_disco)[[4]] <- "disco"
colnames(callable_haplo)[[4]] <- "haplo"
callable<-merge(callable_disco,callable_haplo)
head(callable)
callable$multipass=NULL
head(callable)
callable<-merge(callable_disco,callable_haplo)
callable$multipass=F
callable
callable<-merge(callable_disco,callable_haplo)
callable$multipass="none"
callable[callable$LDpass=="True","callable"]
callable$callable <- NULL
callable<-merge(callable_disco,callable_haplo)
callable$callable <- NULL
callable[callable$disco=="True","callable"] <- "disco"
callable[callable$haplo=="True","callable"] <- "haplo"
callable[callable$disco=="True","callable"] <- "both"
callable <- subset(callable,!ch %in% c("M76611","PFC10_API_IRAB"))
head(callable)
ggplot(subset(callable,ch="Pf3D7_01_v3"),aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=SWpass)) +
ggtitle(paste("failed blocks (SW test)")) +
geom_rect() +
facet_grid(ch ~ .)
ggplot(subset(callable,ch="Pf3D7_01_v3"),aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=callable)) +
ggtitle(paste("failed blocks (SW test)")) +
geom_rect() +
facet_grid(ch ~ .)
head(callable)
callable<-merge(callable_disco,callable_haplo)
callable$callable <- NULL
callable[callable$disco=="True","callable"] <- "disco"
callable[callable$haplo=="True","callable"] <- "haplo"
callable[callable$disco=="True" & callable$haplo=="True","callable"] <- "both"
callable <- subset(callable,!ch %in% c("M76611","PFC10_API_IRAB"))
ggplot(subset(callable,ch="Pf3D7_01_v3"),aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=callable)) +
ggtitle(paste("failed blocks (SW test)")) +
geom_rect() +
facet_grid(ch ~ .)
callable<-merge(callable_disco,callable_haplo)
callable$callable <- "inacessible"
callable[callable$disco=="True","callable"] <- "DISCOVAR only"
callable[callable$haplo=="True","callable"] <- "haplo only"
callable[callable$disco=="True" & callable$haplo=="True","callable"] <- NULL
callable <- subset(callable,!ch %in% c("M76611","PFC10_API_IRAB"))
callable[callable$disco=="True" & callable$haplo=="True","callable"]
callable[callable$disco=="True" & callable$haplo=="True","callable"] <- NULL
callable$callable <- NULL
callable<-merge(callable_disco,callable_haplo)
callable$callable <- NULL
callable[callable$disco=="True" & callable$haplo=="False","callable"] <- "DISCOVAR only"
callable[callable$disco=="False" & callable$haplo=="True","callable"] <- "haplo only"
callable[callable$disco=="False" & callable$haplo=="False","callable"] <- "inacessible"
callable <- subset(callable,!ch %in% c("M76611","PFC10_API_IRAB"))
ggplot(subset(callable,ch="Pf3D7_01_v3"),aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=callable)) +
ggtitle(paste("failed blocks (SW test)")) +
geom_rect() +
facet_grid(ch ~ .)
ggplot(callable,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=callable)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)
ggplot(callable,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=multipass)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)
ggplot(callable,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=callable)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)
ggplot(callable,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=callable)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)+ theme(strip.text.y = element_text(angle=0))
head(callable)
head(callable$ch)
levels(callable$ch)
levels(callable$ch) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
levels(callable$ch) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable <- subset(callable,!ch %in% c("MIT","API"))
ggplot(callable,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=callable)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)+ theme(strip.text.y = element_text(angle=0))
ggplot(callable,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=callable)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)    #+ theme(strip.text.y = element_text(angle=0))
callable<-merge(callable_disco,callable_haplo)
callable$accessible <- NULL
callable[callable$disco=="True" & callable$haplo=="False","accessible"] <- "DISCOVAR only"
callable[callable$disco=="False" & callable$haplo=="True","accessible"] <- "haplo only"
callable[callable$disco=="False" & callable$haplo=="False","accessible"] <- "inacessible"
levels(callable$ch) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable <- subset(callable,!ch %in% c("MIT","API"))
ggplot(callable,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)    #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)
calcols <- c("ch","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable_disco <- read.table("qDD2vr3D7.callable.blocks1k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.1k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable_disco <- callable_disco[,c(1,2,3,12)]
callable_haplo <- callable_haplo[,c(1,2,3,12)]
colnames(callable_disco)[[4]] <- "disco"
colnames(callable_haplo)[[4]] <- "haplo"
callable<-merge(callable_disco,callable_haplo)
callable$accessible <- NULL
callable[callable$disco=="True" & callable$haplo=="False","accessible"] <- "DISCOVAR only"
callable[callable$disco=="False" & callable$haplo=="True","accessible"] <- "haplo only"
callable[callable$disco=="False" & callable$haplo=="False","accessible"] <- "inacessible"
levels(callable$ch) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable <- subset(callable,!ch %in% c("MIT","API"))
```
```{r}
ggplot(callable,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)    #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect(alpha=0.5) + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)    #+ theme(strip.text.y = element_text(angle=0))
calcols <- c("ch","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable1k_disco <- read.table("qDD2vr3D7.callable.blocks1k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable1k_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.1k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable1k_disco <- callable1k_disco[,c(1,2,3,12)]
callable1k_haplo <- callable1k_haplo[,c(1,2,3,12)]
colnames(callable1k_disco)[[4]] <- "disco"
colnames(callable1k_haplo)[[4]] <- "haplo"
callable1k<-merge(callable1k_disco,callable1k_haplo)
callable1k$accessible <- NULL
callable1k[callable1k$disco=="True" & callable1k$haplo=="False","accessible"] <- "DISCOVAR only"
callable1k[callable1k$disco=="False" & callable1k$haplo=="True","accessible"] <- "haplo only"
callable1k[callable1k$disco=="False" & callable1k$haplo=="False","accessible"] <- "inacessible"
levels(callable1k$ch) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable1k <- subset(callable1k,!ch %in% c("MIT","API"))
calcols <- c("ch","st","en","NV","LDfails","LDpass","RSfails","RSpass","df","dn","Dpass","multipass")
callable5k_disco <- read.table("qDD2vr3D7.callable.blocks5k.tab.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable5k_haplo <- read.table("fakeNGS_haplo_qDD2r3D7_rl100.callable.5k.txt",stringsAsFactors = T,sep='\t',header=F,col.names = calcols)
callable5k_disco <- callable5k_disco[,c(1,2,3,12)]
callable5k_haplo <- callable5k_haplo[,c(1,2,3,12)]
colnames(callable5k_disco)[[4]] <- "disco"
colnames(callable5k_haplo)[[4]] <- "haplo"
callable5k<-merge(callable5k_disco,callable5k_haplo)
callable5k$accessible <- NULL
callable5k[callable5k$disco=="True" & callable5k$haplo=="False","accessible"] <- "DISCOVAR only"
callable5k[callable5k$disco=="False" & callable5k$haplo=="True","accessible"] <- "haplo only"
callable5k[callable5k$disco=="False" & callable5k$haplo=="False","accessible"] <- "inacessible"
levels(callable5k$ch) <- c("MIT","01","02","03","04","05","06","07","08","09","10","11","12","13","14","API")
callable5k <- subset(callable5k,!ch %in% c("MIT","API"))
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect(alpha=0.5) + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)    #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable1k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (1kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)    #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)    #+ theme(strip.text.y = element_text(angle=0))
knit("compare_callable_genomes.Rmd")
ggplot(callable1k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (1kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)  + theme(axis.line.y=element_blank(), axis.text.y=element_blank()) #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)  + theme(axis.line.y=element_blank(), axis.ticks.y=element.blank(),axis.text.y=element_blank()) #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)  + theme(axis.line.y=element.blank(), axis.ticks.y=element.blank(),axis.text.y=element.blank()) #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable5k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (5kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)  + theme(axis.line.y=element_blank(), axis.ticks.y=element_blank(),axis.text.y=element_blank()) #+ theme(strip.text.y = element_text(angle=0))
ggplot(callable1k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("callable regions (1kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)  + theme(axis.line.y=element_blank(), axis.ticks.y=element_blank(),axis.text.y=element_blank()) #+ theme(strip.text.y = element_text(angle=0))
knit("compare_callable_genomes.Rmd")
ggplot(callable1k,aes(xmin=st,xmax=en,ymin=0,ymax=1,fill=accessible)) +
ggtitle(paste("accessible regions (1kb windows)")) +
geom_rect() + scale_fill_manual(values=c("red","blue","purple"))+
facet_grid(ch ~ .)  + theme(axis.line.y=element_blank(), axis.ticks.y=element_blank(),axis.text.y=element_blank(),legend.position="bottom") #+ theme(strip.text.y = element_text(angle=0))
knit("compare_callable_genomes.Rmd")
