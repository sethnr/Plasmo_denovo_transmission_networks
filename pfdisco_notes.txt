
#installed Discovar (takes ages)
'use Discovar' to use
#get Pf3D7 ref
  wget http://plasmodb.org/common/downloads/Current_Release/Pfalciparum3D7/fasta/data/PlasmoDB-24_Pfalciparum3D7_Genome.fasta


######
# sort out fasta names and reorder
######
perl -i -pe 's/^>(\w+).*$/>$1/gi;'  PlasmoDB-24_Pfalciparum3D7_Genome.fasta
pyfasta split --header="%(seqid)s.fasta"  PlasmoDB-24_Pfalciparum3D7_Genome.fasta
cat M76611.fasta PFC10_API_IRAB.fasta Pf3D7_*  > Pf3D7_v3.fasta

########
# find set of STRs to work with initially
########

# installed STR finders
 #mreps tutorial: [[ http://mreps.univ-mlv.fr/tutorial.html ]]
  wget http://mreps.univ-mlv.fr/mreps-2.6.tar

#### get st of STRs via MREPS
#run all mreps with resolution 3 (links together repeats with <= 3 bases of errors between)
http://mreps.univ-mlv.fr/tutorial.html

for FASTA in `ls ../refs/ | grep pf | perl -pe 's/.fasta//' `;
do
  STRfinders/mreps/mreps -res 3 -fasta ../refs/${FASTA}.fasta \
     | perl -lane "print join(\"\t\",${FASTA},@F) unless 1..15" \
     | grep -e '->' 
done  \
> STRs_mreps_Pf3D7.txt

# get set of polymorphic STRs positions from Greenhouse et al
#use initial set of STRs from Greenhouse '06 AJTMH [[http://www.ajtmh.org/content/75/5/836.full]]
STRfiles/greenhouse_linked.fa
# use BLAST top find locations

formatdb -p F -i PlasmoDB-24_Pfalciparum3D7_Genome.fasta
blastall -p blastn -d ../../refs/PlasmoDB-24_Pfalciparum3D7_Genome.fasta \
	 -i greenhouse_linked.fa -m 8 -e 0.01 \
	 > greenhouse_blastout.txt
#manuall edit:
-> greenhouse_primer_locations.txt


## wrote script to pull out STRs from MREPs file, that are within greenhouse regions
perl getTargetsInStrs.pl \
  STRfiles/greenhouse_primer_locations.txt STRfiles/STRs_mreps_Pf3D7.txt \
  | cut -f 1-12 > STRfiles/greenhouse_mreps.txt


#do test run:
Discovar READS=${DISCODATA}/1/SM-7LV8S/H2MGCBCXX.1.aligned.duplicates_marked.bam \
	 REGIONS=Pf3D7_10_v3:1322568-1322834, \
	 OUT_HEAD=SM-7LV8S_TA40 \
	 TMP=./tmp
	 REFERENCE=${WORK}/refs/PlasmoDB-24_Pfalciparum3D7_Genome.fasta

#write wrapper script
cd /seq/plasmodium/sredmond/pfdisco/discovar
$DISCO1/runDiscovarVar.sh   DATASET  LANE  SUFFIX REGION

#get broad locations for Discovar (with commas):
perl -lane 'BEGIN{use POSIX; $round=2000}; $F[2] = (floor($F[2]/$round)*$round); $F[3] = (ceil($F[2]/$round+1)*$round); print $F[1],":",$F[2],"-",$F[3]' STRfiles/greenhouse_primer_locations.txt
export BROADLOCS=Pf3D7_10_v3:1322000-1324000,Pf3D7_13_v3:2588000-2590000,Pf3D7_05_v3:1214000-1216000,Pf3D7_06_v3:374000-376000,Pf3D7_12_v3:1610000-1612000,Pf3D7_04_v3:532000-534000


#get fine locations for vcf-merge (with spaces, for tabix):
perl -lane 'print $F[1],":",$F[2],"-",$F[3]' STRfiles/greenhouse_primer_locations.txt
export FINELOCS='Pf3D7_10_v3:1322568-1322834  Pf3D7_13_v3:2588612-2588932  Pf3D7_05_v3:1214274-1214450  Pf3D7_06_v3:374731-374946  Pf3D7_12_v3:1611148-1611391  Pf3D7_04_v3:532167-532320

for SET in {O..V}
do
echo SM-7LV8${SET}
bsub -e out/SM-7LV8${SET}_1.e  -o out/SM-7LV8${SET}_1.o -J SM-7LV8${SET}_1  -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
  $DISCO1/runDiscovarVar.sh SM-7LV8${SET} 1 GRH $BROADLOCS
bsub -e out/SM-7LV8${SET}_2.e  -o out/SM-7LV8${SET}_2.o -J SM-7LV8${SET}_2  -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
  $DISCO1/runDiscovarVar.sh SM-7LV8${SET} 2 GRH $BROADLOCS
done

#MERGE ALL VCFS
vcf-merge */*filtered.vcf.gz > merge_3d7dd2.vcf
vcftools --keep-only-indels --vcf merge_3d7dd2.vcf --recode --out merge_3d7dd2_indels
mv merge_3d7dd2_indels.recode.vcf merge_3d7dd2_indels.vcf
bgzip merge_3d7dd2_indels.vcf
tabix -pvcf merge_3d7dd2_indels.vcf.gz
tabix -h merge_3d7dd2_indels.vcf.gz $FINELOCS >  merge_3d7dd2_fine.vcf
rm merge_3d7dd2.vcf \
   merge_3d7dd2.vcf.vcfidx \
   merge_3d7dd2_indels.log \
   merge_3d7dd2_indels.vcf.gz \
   merge_3d7dd2_indels.vcf.gz.tbi


cd HFGR
for SET in {E..N}
    do
    for LANE in 1 2
    	do
    	bsub -e out/SM-7LV8${SET}_${LANE}.e  -o out/SM-7LV8${SET}_${LANE}.o -J SM-7LV8${SET}_${LANE} \
     	     -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
     	     $DISCO1/runDiscovarVar.sh SM-7LV8${SET} ${LANE} GRH $BROADLOCS
     done
done

cd Thies
for LANE in 1 2
    do
    for SET in {1..9} {A..D}
    do
    bsub -e out/SM-7LV8${SET}_${LANE}.e  -o out/SM-7LV8${SET}_${LANE}.o -J SM-7LV8${SET}_${LANE} \
     	     -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
     	     $DISCO1/runDiscovarVar.sh SM-7LV8${SET} ${LANE} GRH $BROADLOCS
     done
    for SET in {V..Z}
    do
    bsub -e out/SM-7LV8${SET}_${LANE}.e  -o out/SM-7LV8${SET}_${LANE}.o -J SM-7LV8${SET}_${LANE} \
     	     -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
     	     $DISCO1/runDiscovarVar.sh SM-7LV7${SET} ${LANE} GRH $BROADLOCS
     done

done


#TEST:
    bsub -e out/TEST.e  -o out/TEST.o -J TEST_discovar \
     	     -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
     	     $DISCO1/runDiscovarVar.sh SM-7LV7Z 1 GRH $BROADLOCS
 

tidying up not-run samples:
cd ../HFGR
$DISCO1/runDiscovarVar.sh SM-7LV8G 1 GRH $BROADLOCS
cd ../Pf3D7_DD2
$DISCO1/runDiscovarVar.sh SM-7LV8U 2 GRH $BROADLOCS
cd ../Thies
$DISCO1/runDiscovarVar.sh SM-7LV87 2 GRH $BROADLOCS

####!!!!!!
# SM-7LV8G_1 not running - possibly sample with two inputs??

#merge all VCFs, via merge script
cd /seq/plasmodium/sredmond/pfdisco/discovar
../mergeVcfIndels.sh Pf3D7_DD2_greenhouse  Pf3D7_DD2/*/*filtered.vcf.gz
../mergeVcfIndels.sh HFGR_greenhouse  HFGR/*/*filtered.vcf.gz
../mergeVcfIndels.sh Thies_greenhouse  Thies/*/*filtered.vcf.gz
 



##########
# get depths from BAM files
##########
#get broad locations for Discovar:
export BROADLOCS="Pf3D7_10_v3:1322000-1324000 Pf3D7_13_v3:2588000-2590000 Pf3D7_05_v3:1214000-1216000 Pf3D7_06_v3:374000-376000 Pf3D7_12_v3:1610000-1612000 Pf3D7_04_v3:532000-534000"


perl -lane 'BEGIN{use POSIX; $round=2000}; $F[2] = (floor($F[2]/$round)*$round); $F[3] = (ceil($F[2]/$round+1)*$round); print $F[1],"\t",$F[2],"\t",$F[3]' ../STRfiles/greenhouse_primer_locations.txt > greenhouse_primer_locations.broad.bed
perl -lane 'BEGIN{use POSIX; $round=2000}; print $F[1],"\t",$F[2],"\t",$F[3]' ../STRfiles/greenhouse_primer_locations.txt > greenhouse_primer_locations.fine.bed


for SET in HFGR 3D7DD2 Thies
do
  for LOC in $BROADLOCS
  do
    samtools depth -r $LOC ${SET}/*/*bam > ${SET}_${LOC}_greenhouse.depth
  done
  cat ${SET}_*_greenhouse.depth > ${SET}_greenhouse.depth
  for LOC in $BROADLOCS
  do
    rm ${SET}_${LOC}_greenhouse.depth
  done
done

####
# write STR length parser
###
chokes on header line, remove offending lines (must be ##something=something)
perl -i -ne 'print $_ unless $_ =~ m/DiscovarRegion/gi' disco_greenhouse/*.vcf

#call STR lengths
cd $DISCO1/disco_greenhouse/

for SET in HFGR 3D7DD2 Thies
 do
 python ../getSTRlengthFromVCF.py -v ${SET}_greenhouse.vcf > ${SET}_greenhouse.calls
 grep \#CHROM ${SET}_greenhouse.vcf | cut -f10- > ${SET}_greenhouse.samples
done


######
# write new wrapper script for whole analysis
######
cd $DISCO1/disco_daniels
./disco_callSTRsAndSummarise.py  -s ../samples/picard_disco1_150504.tab.txt -n ../Daniels_SNPs.bed --nodes 1 --mem 3000 --splitregions

cd $DISCO1/disco_halfmeg
#chose half meg to capture many daniels assays:
Pf3D7_07_v3|ref0000015:277104-277104
Pf3D7_07_v3|ref0000015:490877-490877
Pf3D7_07_v3|ref0000015:545046-545046
Pf3D7_07_v3|ref0000015:657939-657939
Pf3D7_07_v3|ref0000015:671839-671839
Pf3D7_07_v3|ref0000015:683772-683772
Pf3D7_07_v3|ref0000015:792356-792356
Pf3D7_07_v3|ref0000015:1415182-1415182

start with 300k seq:

head -n2 ../samples/picard_disco1_150504.tab.txt > test.samples
./disco_callSTRsAndSummarise.py  -s test.samples --nodes 8 --mem 16000  -r Pf3D7_07_v3:450000-750000


   bsub -e out/SM-7LV8${SET}_${LANE}.e  -o out/SM-7LV8${SET}_${LANE}.o -J SM-7LV8${SET}_${LANE} \
     	     -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \

python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 3000 --nodes 1  -n ../Daniels_SNPs.bed --shallow --splitregions -Q hour


cd $DISCO1/disco_daniels_3d7
python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 3000 --nodes 1  -n ../Daniels_SNPs.bed --shallow --splitregions -Q hour

cd $DISCO1/disco_halfmeg
python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 16000 --nodes 8  -r  Pf3D7_07_v3:450000-750000 --shallow --splitregions -Q hour

python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 6000 --nodes 4  -r  Pf3D7_07_v3:450000-750000 --shallow --splitregions -Q hour


cd $DISCO1/disco_green_daniels
python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/picard_disco1_150504.tab.txt  --mem 3000 --nodes 1  -n ../Daniels_SNPs.bed -t ../STRfiles/greenhouse_primer_locations.bed --shallow --splitregions -Q hour




for FASTA in `ls $WORK/refs/ | grep pf | perl -pe 's/.fasta//' `;
do
    $DISCO1/STRfinders/mreps/mreps -res 3 -minperiod 3 -exp 3 \
    -fasta $WORK/refs/${FASTA}.fasta \
    | perl -lane "next if 1..15; print join(\"\t\",${FASTA},@F) " \
    | grep -e '->' ;
done | perl -lane 'print $_ if $F[8]+0 < 0.05'



####wrote quick script to get GATK calls
UnifiedGenotyper -l ../Daniels_SNPs.bed -B ../test.bams.list -R $WORK/refs/Pf3D7_v3.fasta

grep 3D7DD2 samples/picard_disco1_150504.tab.txt | cut -f5,5  > samples/3D7DD2.bams.list
grep Thies samples/picard_disco1_150504.tab.txt | cut -f5,5  > samples/Thies.bams.list
grep HFGR samples/picard_disco1_150504.tab.txt | cut -f5,5 > samples/HFGR.bams.list



#Daniels positions all bloody wrong (old ref!)!
#make fasta with 50 Ns between each primer
perl -lane 'print "\>".$F[0]."\n".$F[3].("N" x 50).$F[4]."\n";' daniels_primers.txt > daniels_primers.fasta

blastall -p blastn -d $WORK/refs/Pf3D7_v4.fasta \
	 -i SNPfiles/daniels_primers.fasta \
	 -m 8 -e 0.01 > SNPfiles/daniels_primers.blastout


cd $PFDISCO
UnifiedGenotyper -l SNPfiles/Daniels_SNPs.v4.bed -R $WORK/refs/Pf3D7_v4.fasta -V \
   -B samples/Thies.bams.list  -o disco_daniels/GATK_calls_daniels_Thies.vcf

UnifiedGenotyper -l SNPfiles/Daniels_SNPs.v4.bed -R $WORK/refs/Pf3D7_v4.fasta -V \
   -B samples/HFGR.bams.list  -o disco_daniels/GATK_calls_daniels_HFGR.vcf

UnifiedGenotyper -l SNPfiles/Daniels_SNPs.v4.bed -R $WORK/refs/Pf3D7_v4.fasta -V \
   -B samples/3D7DD2.bams.list  -o disco_daniels/GATK_calls_daniels_3D7DD2.vcf



perl -lane 'print "\>".$F[0]."\n".$F[5]."\n";' SNPfiles/daniels_primers.txt > SNPfiles/daniels_primers.reporters.fa
blastall -p blastn -d $WORK/refs/Pf3D7_v4.fasta \
	 -i SNPfiles/daniels_primers.reporters.fasta \
	 -m 8 -e 0.01 > SNPfiles/daniels_primers.reporters.blastout


perl -lane 'print "\>".$F[0]."_F\n".$F[5]."\n"."\>".$F[0]."_SNP\n".$F[5]."\n"."\>".$F[0]."_R\n".$F[4]."\n";' SNPfiles/daniels_primers.txt > SNPfiles/daniels_primers.reporters.fasta
blastall -p blastn -d $WORK/refs/Pf3D7_v4.fasta  -i SNPfiles/daniels_primers.reporters.fasta -m8 > SNPfiles/daniels_primers.reporters.blastout
perl -pe 's/(?<=\d)_(?=[RSF])/\t/gi' SNPfiles/daniels_primers.reporters.blastout  |-k1,1 -k3,3 -k10,10 > SNPfiles/daniels_primers.reporters.sort.blastout


perl -lane 'print "\>".$F[0]."\n".$F[3].("N" x50).$F[5].("N"x50).$F[4];' SNPfiles/daniels_primers.txt > SNPfiles/daniels_primers.fasta
blastall -p blastn -d $WORK/refs/Pf3D7_v4.fasta  -i SNPfiles/daniels_primers.fasta -m8 > SNPfiles/daniels_primers.reporters.blastout


#remap flanking seqs from daniels set from original Fasta:
#change names to MAL1-style
perl -i -pe 's/^Pf3D7_0*(\d+)_v3/MAL$1/' SNPfiles/Daniels_SNPs.bed
perl -i -pe 's/\>.*(MAL\d+).*/\>$1/' /seq/plasmodium/sredmond/refs/PfalciparumGenomic_plasmoDB-5.0.fasta
python getSNPflank.py --fasta /seq/plasmodium/sredmond/refs/PfalciparumGenomic_plasmoDB-5.0.fasta -n SNPfiles/Daniels_SNPs.bed > SNPfiles/Daniels_SNPs.flanks.fasta -d40
blastall -p blastn -d $WORK/refs/Pf3D7_v4.fasta \
	 -i SNPfiles/Daniels_SNPs.flanks.fasta \
	 -m 8 -e 1e-10 -K1  > SNPfiles/daniels_primers.flanks.blastout
cat SNPfiles/daniels_primers.flanks.blastout | sort -k2,2 -k9,9g | perl -ne 'm/MAL(\d+).*Pf3D7_0*(\d+)/; print $_ if $1==$2' | wc -l 
cat SNPfiles/daniels_primers.flanks.blastout | sort -k2,2 -k9,9g | perl -ne 'm/MAL(\d+).*Pf3D7_0*(\d+)/; print $_ if $1==$2'

python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/picard_disco1_150504.tab.txt  --mem 3000 --nodes 1  -n ../SNPfiles/Daniels_SNPs.v4.bed  --shallow --splitregions -Q hour


python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 3000 --nodes 1  -n ../Daniels_SNPs.bed --shallow --splitregions -Q hour

python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 3000 --nodes 1  -n ../SNPfiles/Daniels_SNPs.v4.bed  --shallow --splitregions -Q hour

#HALFMEG
python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 16000 --nodes 6  -r Pf3D7_07_v3:450000-750000 -f $WORK/refs/Pf3D7_v4.fasta --shallow -Q forest

#HALFMEG SPLIT
python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 16000 --nodes 6  -r Pf3D7_07_v3:450000-750000 -f $WORK/refs/Pf3D7_v4.fasta --shallow -Q forest --dryrun --splitsize 50000 --splitregions

#wrote script to get failed jobs, resubmit all
perl  getFailedDiscovarJobs.pl 3D7DD2 > resub_3D7DD2.sh;
chmod 755 resub_3D7DD2.sh
cd 3D7DD2; ../resub.sh
JOBS=`bjobs | grep hour | cut -f 1,1 -d\ `
bjobs $JOBS


#move jobs from working root into 3D7 folder
for FOLDER in SM*; do cp ${FOLDER}/* 3D7DD2/${FOLDER}/; done


bsub -J daniels_3D7 -o out/daniels_3D7.0 -e out/daniels_3D7.e \
     -R 'select[mem>3000] rusage[mem=3000]  span[ptile=1]' \
     -M 3000 -n 1 \
     python ../pipeline/disco_callSTRsAndSummarise.py  -s ../samples/3D7DD2.samples.txt  --mem 3000 --nodes 1  -n ../SNPfiles/Daniels_SNPs.v4.bed  --discosucks --shallow --splitregions -Q flower


#get job array running:
python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 4000 --nodes 4  -r Pf3D7_07_v3:450000-750000 -f $WORK/refs/Pf3D7_v4.fasta --shallow -Q forest  --splitsize 50000 --splitregions


#rerun failed (-e) jobs from job array with more memory
brequeue -e 4633535
bmod -M 10000 -R "select[mem>10000] rusage[mem=10000] span[ptile=4]" 4633535



python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 8000 --nodes 2  -r Pf3D7_07_v3:450000-750000 -f $WORK/refs/Pf3D7_v4.fasta --shallow -Q forest --dryrun --splitsize 10000 --splitregions --maxconc 40


bsub48 haplo.halfmeg.3D7DD2  ../scripts/runHaplotypeCaller.sh -l Pf3D7_07_v3:450000-750000  -B $DISCO1/samples/3D7DD2.bams.list -R $WORK/refs/Pf3D7_v3.fasta -o haplo.r3D7.3D7DD2.vcf

cd $DISCO1/gatkHaplo_halfmeg_fakeNGS
bsub48 haplo.halfmeg.fake3D7  ../scripts/runHaplotypeCaller.sh \
  -l Pf3D7_07_v3:450000-750000  -B bams.3D7.list \
  -R $WORK/refs/Pf3D7_v3.fasta -o haplo.r3D7.ALL.vcf

bsub48 haplo.halfmeg.fakeDD2  ../scripts/runHaplotypeCaller.sh \
  -l PfDd2_07_TT:450000-750000  -B bams.DD2.list \
  -R $WORK/refs/PfDD2_v1.fasta -o haplo.rDD2.ALL.vcf
  
bsub48 haplo.halfmeg.fakeIT  ../scripts/runHaplotypeCaller.sh \
  -l PfIT_07_v3:450000-750000  -B bams.IT.list \
  -R $WORK/refs/PfIT_v3.fasta -o haplo.rIT.ALL.vcf


python ../pipeline/disco_callSTRsAndSummarise.py   -s ../samples/3D7DD2.samples.txt  --mem 8000 --nodes 2  -r Pf3D7_07_v3:450000-750000 -f $WORK/refs/Pf3D7_v4.fasta --shallow -Q forest --dryrun --splitsize 10000 --splitregions --maxconc 40



#DO WHOLE GENOME DISCOVAR RUN:
python ../pipeline/disco_callSTRsAndSummarise.py   \
       -s ../samples/3D7DD2.samples.txt  --mem 4000 --nodes 4  \
       -r Pf3D7_07_v3:450000-750000 -f $WORK/refs/Pf3D7_v3.fasta \
       --shallow -Q forest  --splitsize 50000 --splitregions --dryrun --wholeGenome
