
#installed Discovar (takes ages)
'use Discovar' to use
#get Pf3D7 ref
  wget http://plasmodb.org/common/downloads/Current_Release/Pfalciparum3D7/fasta/data/PlasmoDB-24_Pfalciparum3D7_Genome.fasta



########
# find set of STRs to work with initially
########

# installed STR finders
 #mreps tutorial: [[ http://mreps.univ-mlv.fr/tutorial.html ]]
  wget http://mreps.univ-mlv.fr/mreps-2.6.tar

#### get st of STRs via MREPS
#run all mreps with resolution 3 (links together repeats with <= 3 bases of errors between)
http://mreps.univ-mlv.fr/tutorial.html

for FASTA in `ls ../refs/ | grep pf | perl -pe 's/.fasta//' `;
do
  STRfinders/mreps/mreps -res 3 -fasta ../refs/${FASTA}.fasta \
     | perl -lane "print join(\"\t\",${FASTA},@F) unless 1..15" \
     | grep -e '->' 
done  \
> STRs_mreps_Pf3D7.txt

# get set of polymorphic STRs positions from Greenhouse et al
#use initial set of STRs from [Greenhouse '06 AJTMH]
STRfiles/greenhouse_linked.fa
# use BLAST top find locations

formatdb -p F -i PlasmoDB-24_Pfalciparum3D7_Genome.fasta
blastall -p blastn -d ../../refs/PlasmoDB-24_Pfalciparum3D7_Genome.fasta \
	 -i greenhouse_linked.fa -m 8 -e 0.01 \
	 > greenhouse_blastout.txt
#manuall edit:
-> greenhouse_primer_locations.txt


## wrote script to pull out STRs from MREPs file, that are within greenhouse regions
perl getTargetsInStrs.pl \
  STRfiles/greenhouse_primer_locations.txt STRfiles/STRs_mreps_Pf3D7.txt \
  | cut -f 1-12 > STRfiles/greenhouse_mreps.txt


#do test run:
Discovar READS=${DISCODATA}/1/SM-7LV8S/H2MGCBCXX.1.aligned.duplicates_marked.bam \
	 REGIONS=Pf3D7_10_v3:1322568-1322834, \
	 OUT_HEAD=SM-7LV8S_TA40 \
	 TMP=./tmp
	 REFERENCE=${WORK}/refs/PlasmoDB-24_Pfalciparum3D7_Genome.fasta

#write wrapper script
cd /seq/plasmodium/sredmond/pfdisco/discovar
$DISCO1/runDiscovarVar.sh   DATASET  LANE  SUFFIX REGION

#get broad locations for Discovar (with commas):
perl -lane 'BEGIN{use POSIX; $round=2000}; $F[2] = (floor($F[2]/$round)*$round); $F[3] = (ceil($F[2]/$round+1)*$round); print $F[1],":",$F[2],"-",$F[3]' STRfiles/greenhouse_primer_locations.txt
export BROADLOCS=Pf3D7_10_v3:1322000-1324000,Pf3D7_13_v3:2588000-2590000,Pf3D7_05_v3:1214000-1216000,Pf3D7_06_v3:374000-376000,Pf3D7_12_v3:1610000-1612000,Pf3D7_04_v3:532000-534000


#get fine locations for vcf-merge (with spaces, for tabix):
perl -lane 'print $F[1],":",$F[2],"-",$F[3]' STRfiles/greenhouse_primer_locations.txt
export FINELOCS='Pf3D7_10_v3:1322568-1322834  Pf3D7_13_v3:2588612-2588932  Pf3D7_05_v3:1214274-1214450  Pf3D7_06_v3:374731-374946  Pf3D7_12_v3:1611148-1611391  Pf3D7_04_v3:532167-532320

for SET in {O..V}
do
echo SM-7LV8${SET}
bsub -e out/SM-7LV8${SET}_1.e  -o out/SM-7LV8${SET}_1.o -J SM-7LV8${SET}_1  -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
  $DISCO1/runDiscovarVar.sh SM-7LV8${SET} 1 GRH $BROADLOCS
bsub -e out/SM-7LV8${SET}_2.e  -o out/SM-7LV8${SET}_2.o -J SM-7LV8${SET}_2  -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
  $DISCO1/runDiscovarVar.sh SM-7LV8${SET} 2 GRH $BROADLOCS
done

#MERGE ALL VCFS
vcf-merge */*filtered.vcf.gz > merge_3d7dd2.vcf
vcftools --keep-only-indels --vcf merge_3d7dd2.vcf --recode --out merge_3d7dd2_indels
mv merge_3d7dd2_indels.recode.vcf merge_3d7dd2_indels.vcf
bgzip merge_3d7dd2_indels.vcf
tabix -pvcf merge_3d7dd2_indels.vcf.gz
tabix -h merge_3d7dd2_indels.vcf.gz $FINELOCS >  merge_3d7dd2_fine.vcf
rm merge_3d7dd2.vcf \
   merge_3d7dd2.vcf.vcfidx \
   merge_3d7dd2_indels.log \
   merge_3d7dd2_indels.vcf.gz \
   merge_3d7dd2_indels.vcf.gz.tbi


cd HFGR
for SET in {E..N}
    do
    for LANE in 1 2
    	do
    	bsub -e out/SM-7LV8${SET}_${LANE}.e  -o out/SM-7LV8${SET}_${LANE}.o -J SM-7LV8${SET}_${LANE} \
     	     -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
     	     $DISCO1/runDiscovarVar.sh SM-7LV8${SET} ${LANE} GRH $BROADLOCS
     done
done

cd Thies
for LANE in 1 2
    do
    for SET in {1..9} {A..D}
    do
    bsub -e out/SM-7LV8${SET}_${LANE}.e  -o out/SM-7LV8${SET}_${LANE}.o -J SM-7LV8${SET}_${LANE} \
     	     -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
     	     $DISCO1/runDiscovarVar.sh SM-7LV8${SET} ${LANE} GRH $BROADLOCS
     done
    for SET in {V..Z}
    do
    bsub -e out/SM-7LV8${SET}_${LANE}.e  -o out/SM-7LV8${SET}_${LANE}.o -J SM-7LV8${SET}_${LANE} \
     	     -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
     	     $DISCO1/runDiscovarVar.sh SM-7LV7${SET} ${LANE} GRH $BROADLOCS
     done

done


#TEST:
    bsub -e out/TEST.e  -o out/TEST.o -J TEST_discovar \
     	     -R 'select[mem>2000] rusage[mem=2000]  span[ptile=1]' \
     	     $DISCO1/runDiscovarVar.sh SM-7LV7Z 1 GRH $BROADLOCS
 

tidying up not-run samples:
cd ../HFGR
$DISCO1/runDiscovarVar.sh SM-7LV8G 1 GRH $BROADLOCS
cd ../Pf3D7_DD2
$DISCO1/runDiscovarVar.sh SM-7LV8U 2 GRH $BROADLOCS
cd ../Thies
$DISCO1/runDiscovarVar.sh SM-7LV87 2 GRH $BROADLOCS

####!!!!!!
# SM-7LV8G_1 not running - possibly sample with two inputs??

#merge all VCFs, via merge script
cd /seq/plasmodium/sredmond/pfdisco/discovar
../mergeVcfIndels.sh Pf3D7_DD2_greenhouse  Pf3D7_DD2/*/*filtered.vcf.gz
../mergeVcfIndels.sh HFGR_greenhouse  HFGR/*/*filtered.vcf.gz
../mergeVcfIndels.sh Thies_greenhouse  Thies/*/*filtered.vcf.gz
 



##########
# get depths from BAM files
##########
#get broad locations for Discovar (with -R region tags):
perl -lane 'BEGIN{use POSIX; $round=2000}; $F[2] = (floor($F[2]/$round)*$round); $F[3] = (ceil($F[2]/$round+1)*$round); print "-r ",$F[1],":",$F[2],"-",$F[3]' STRfiles/greenhouse_primer_locations.txt
export BROADLOCSR="-r Pf3D7_10_v3:1322000-1324000 -r Pf3D7_13_v3:2588000-2590000 -r Pf3D7_05_v3:1214000-1216000 -r Pf3D7_06_v3:374000-376000 -r Pf3D7_12_v3:1610000-1612000 -r Pf3D7_04_v3:532000-534000"

for SET in HFGR 3D7DD2 Thies
 do
   samtools depth $BROADLOCSR ${SET}/*/*bam > ${SET}_greenhouse.depth
 done

####
# write STR length parser
###
chokes on header line, remove offending lines (must be ##something=something)
perl -i -ne 'print $_ unless $_ =~ m/DiscovarRegion/gi' disco_greenhouse/*.vcf

#call STR lengths
cd $DISCO1/disco_greenhouse/

for SET in HFGR 3D7DD2 Thies
 do
 python ../getSTRlengthFromVCF.py -v ${SET}_greenhouse.vcf > ${SET}_greenhouse.calls
done
